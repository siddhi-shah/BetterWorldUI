{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/society-mgmt/building/building.component.css","webpack:///./src/app/society-mgmt/building/building.component.html","webpack:///./src/app/society-mgmt/building/building.component.ts","webpack:///./src/app/society-mgmt/calendar/calendar.component.css","webpack:///./src/app/society-mgmt/calendar/calendar.component.html","webpack:///./src/app/society-mgmt/calendar/calendar.component.ts","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.css","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.html","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.ts","webpack:///./src/app/society-mgmt/flats/flats.component.css","webpack:///./src/app/society-mgmt/flats/flats.component.html","webpack:///./src/app/society-mgmt/flats/flats.component.ts","webpack:///./src/app/society-mgmt/login/login.component.css","webpack:///./src/app/society-mgmt/login/login.component.html","webpack:///./src/app/society-mgmt/login/login.component.ts","webpack:///./src/app/society-mgmt/modal/modal.component.css","webpack:///./src/app/society-mgmt/modal/modal.component.html","webpack:///./src/app/society-mgmt/modal/modal.component.ts","webpack:///./src/app/society-mgmt/owners/owners.component.css","webpack:///./src/app/society-mgmt/owners/owners.component.html","webpack:///./src/app/society-mgmt/owners/owners.component.ts","webpack:///./src/app/society-mgmt/register/register-member.component.css","webpack:///./src/app/society-mgmt/register/register-member.component.html","webpack:///./src/app/society-mgmt/register/register-member.component.ts","webpack:///./src/app/society-mgmt/services/NeedAuthGuard.ts","webpack:///./src/app/society-mgmt/services/api.service.ts","webpack:///./src/app/society-mgmt/services/common.service.ts","webpack:///./src/app/society-mgmt/services/token.service.ts","webpack:///./src/app/society-mgmt/services/user.service.ts","webpack:///./src/app/society-mgmt/society-header/society-header.component.css","webpack:///./src/app/society-mgmt/society-header/society-header.component.html","webpack:///./src/app/society-mgmt/society-header/society-header.component.ts","webpack:///./src/app/society-mgmt/society-mgmt.component.css","webpack:///./src/app/society-mgmt/society-mgmt.component.html","webpack:///./src/app/society-mgmt/society-mgmt.component.ts","webpack:///./src/app/society-mgmt/society/society.component.css","webpack:///./src/app/society-mgmt/society/society.component.html","webpack:///./src/app/society-mgmt/society/society.component.ts","webpack:///./src/app/society-mgmt/tenant/tenant.component.css","webpack:///./src/app/society-mgmt/tenant/tenant.component.html","webpack:///./src/app/society-mgmt/tenant/tenant.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n<!-- <calendar-component></calendar-component> -->\\n<!-- <event-calendar-component></event-calendar-component> -->\"","import { Component } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Better World';\n  constructor(public router : Router) { }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MaterialModule } from './material-module';\nimport { AppComponent } from './app.component';\nimport { SocietyMgmtComponent } from './society-mgmt/society-mgmt.component';\nimport { HomeComponent } from './home/home.component';\nimport { BuildingComponent } from './society-mgmt/building/building.component';\nimport { FlatsComponent } from './society-mgmt/flats/flats.component';\nimport { OwnersComponent } from './society-mgmt/owners/owners.component';\nimport { TenantComponent } from './society-mgmt/tenant/tenant.component';\nimport { ErrorComponent } from './error/error.component';\nimport { SocietyHeaderComponent } from './society-mgmt/society-header/society-header.component';\nimport { RegisterMemberComponent } from './society-mgmt/register/register-member.component';\nimport { LoginComponent } from './society-mgmt/login/login.component';\nimport { SocietyComponent } from './society-mgmt/society/society.component';\nimport { Component } from '@angular/core/src/metadata/directives';\nimport { ModalComponent } from './society-mgmt/modal/modal.component';\nimport { NeedAuthGuard } from './society-mgmt/services/NeedAuthGuard';\nimport { CalendarComponent } from './society-mgmt/calendar/calendar.component';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EventCalendarComponent } from './society-mgmt/event-calendar/event-calendar.component';\n\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: '/home', pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterMemberComponent },\n  { path: \"home\", component: HomeComponent },\n  {\n    path: \"societyManagment\", component: SocietyMgmtComponent,\n\n    children: [\n      { path: \"society\", component: SocietyComponent },\n      { path: \":societyid/buildings\", component: BuildingComponent },\n      {\n        path: \":societyid/buildings/:buildingid/flats\",\n        component: FlatsComponent,\n        canActivate: [NeedAuthGuard]\n      },\n      { path: \"owners\", component: OwnersComponent, canActivate: [NeedAuthGuard] },\n      { path: \"tenats\", component: TenantComponent, canActivate: [NeedAuthGuard] },\n    ]\n\n  },\n  { path: \"error\", component: ErrorComponent },\n  { path: \"**\", component: ErrorComponent }\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SocietyMgmtComponent,\n    HomeComponent,\n    BuildingComponent,\n    FlatsComponent,\n    OwnersComponent,\n    TenantComponent,\n    ErrorComponent,\n    SocietyHeaderComponent,\n    RegisterMemberComponent,\n    LoginComponent,\n    SocietyComponent,\n    ModalComponent,\n    CalendarComponent,\n    EventCalendarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    NgbModalModule,\n    FlatpickrModule.forRoot(),\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n    BrowserAnimationsModule\n  ],\n  providers: [NeedAuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h1>Page not found!!!</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".homeIconList{\\n    background-color: rgba(242, 242,242, .45);\\n    min-width: 220px;\\n    min-height: 80px;\\n    margin: 10px;\\n}\\n.m-r-20 {\\n    margin-right: 20px; }\"","module.exports = \"<div class=\\\"container mainContainer\\\">\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\n    <div class=\\\"col-xs-6 col-sm-6 text-left\\\">\\n      <img src=\\\"assets/logo2.jpg\\\" class=\\\"img-fluid\\\" />\\n    </div>\\n    <div class=\\\"col-xs-6 col-sm-6 text-right\\\">\\n      <a routerLink=\\\"/home\\\" class='btn btn-outline-warning btn'>\\n        Home\\n      </a>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\n    <div class=\\\"col-sm-6 text-center\\\">\\n      <h1>Lorem Ipsum</h1>\\n      <div>Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur</div>\\n    </div>\\n    <div class=\\\"col-sm-6 text-right\\\">\\n      <img src=\\\"assets/Smart-Government-Solutions.png\\\" class=\\\"img-fluid\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n      <a routerLink=\\\"/societyManagment\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">Society Management</a>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\" *ngIf=\\\"societyInfo\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-left contentContainer\\\">    \\n        Society ID:  {{societyInfo && societyInfo[0]?.societyid}} <BR>\\n      Society Name: {{societyInfo && societyInfo[0]?.societyname}}<br>\\n      Society Address: {{societyInfo && societyInfo[0]?.address}},{{societyInfo && societyInfo[0]?.pincode}}<br>\\n    </div>\\n  </div>\\n  \\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n      \\n      <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th>buildingid</th>\\n              <th>buildingname</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let building of buildingList\\\">\\n              <td>{{building.buildingid}}</td>\\n              <td>{{building.buildingname}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n    </div>  \\n  </div>\\n<div *ngFor=\\\"\\\">\\n    {{building | json}}\\n</div>\\n<div [hidden]=\\\"!buildingList\\\">\\n  <event-calendar-component></event-calendar-component>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../services/user.service\"\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\nimport { OnChanges } from '@angular/core';\nimport { CommonService } from '../services/common.service'\n\n@Component({\n  selector: 'app-building',\n  templateUrl: './building.component.html',\n  styleUrls: ['./building.component.css']\n})\nexport class BuildingComponent implements OnInit, OnChanges {\n  society; buildingList;\n  param1; societyInfo: any;\n  constructor(public _userService: UserService, \n    public router: Router, private route: ActivatedRoute, public _commonService: CommonService ) { }\n\n  ngOnInit() {\n    this.getBuildingList();\n  }\n  ngOnChanges() {\n    this.getBuildingList();\n  }\n  getBuildingList() {\n    //this.param1 = this.route.snapshot.paramMap.get('societyid');\n    this.route.params.subscribe((value) => {\n      this.param1 = value[\"societyid\"]; // get param\n      console.log(\"this.param1:::\" + JSON.stringify(value));\n      this.updateCalendar(this.param1);\n      this._userService.getBuilding(this.param1).subscribe((data) => {\n        this.buildingList = data.dbResponse;\n      },\n        error => {\n          console.log(error);\n          this.society = error.message;\n        });\n\n      this._userService.getSocietyInfo(this.param1).subscribe((data) => {\n        this.societyInfo = data.dbResponse;\n      },\n        error => {\n          console.log(error);\n          this.society = error.message;\n        });\n    });\n  }\n\n  updateCalendar(societyid){\n    this._userService.getSocietyEvents(societyid).subscribe((societyEvevts) => {\n      this._commonService.emitEventCalanderData(societyEvevts.dbResponse)\n    },\n    error => {\n      console.log(error);\n      this.society = error.message;\n    });\n  }\n}\n","module.exports = \"h3 {\\n    margin: 0 0 10px;\\n  }\\n  \\n  pre {\\n    background-color: #f5f5f5;\\n    padding: 15px;\\n  }\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      Action:\\n      <pre>{{ modalData?.action }}</pre>\\n    </div>\\n    <div>\\n      Event:\\n      <pre>{{ modalData?.event | json }}</pre>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"text-center\\\">\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarPreviousView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Previous\\n      </div>\\n      <div\\n        class=\\\"btn btn-outline-secondary\\\"\\n        mwlCalendarToday\\n        [(viewDate)]=\\\"viewDate\\\">\\n        Today\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarNextView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Next\\n      </div>\\n    </div>\\n  </div>\\n  <div>\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\n  </div>\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Month\\\"\\n        [class.active]=\\\"view === CalendarView.Month\\\">\\n        Month\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Week\\\"\\n        [class.active]=\\\"view === CalendarView.Week\\\">\\n        Week\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Day\\\"\\n        [class.active]=\\\"view === CalendarView.Day\\\">\\n        Day\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div [ngSwitch]=\\\"view\\\">\\n  <mwl-calendar-month-view\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-month-view>\\n  <mwl-calendar-week-view\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-week-view>\\n  <mwl-calendar-day-view\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-day-view>\\n</div>\\n\\n<br><br><br>\\n\\n<h3>\\n  Edit events\\n  <button\\n    class=\\\"btn btn-primary pull-right\\\"\\n    (click)=\\\"addEvent()\\\">\\n    Add new\\n  </button>\\n  <div class=\\\"clearfix\\\"></div>\\n</h3>\\n\\n<!-- <table class=\\\"table table-bordered\\\">\\n\\n  <thead>\\n    <tr>\\n      <th>Title</th>\\n      <th>Primary color</th>\\n      <th>Secondary color</th>\\n      <th>Starts at</th>\\n      <th>Ends at</th>\\n      <th>Remove</th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let event of events; let index = index\\\">\\n      <td>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"event.title\\\"\\n          (keyup)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.primary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.secondary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.start\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.end\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <button\\n          class=\\\"btn btn-danger\\\"\\n          (click)=\\\"events.splice(index, 1); refresh.next()\\\">\\n          Delete\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table> -->\"","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView\n} from 'angular-calendar';\nimport { CommonService } from './../services/common.service';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'calendar-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./calendar.component.css'],\n  templateUrl: './calendar.component.html'\n})\nexport class CalendarComponent {\n  @ViewChild('modalContent')\n  modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter(iEvent => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  events: CalendarEvent[] = [\n    {\n      start: subDays(startOfDay(new Date()), 1),\n      end: addDays(new Date(), 1),\n      title: 'A 3 day event',\n      color: colors.red,\n      actions: this.actions,\n      allDay: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    },\n    {\n      start: startOfDay(new Date()),\n      title: 'An event with no end date',\n      color: colors.yellow,\n      actions: this.actions\n    },\n    {\n      start: subDays(endOfMonth(new Date()), 3),\n      end: addDays(endOfMonth(new Date()), 3),\n      title: 'A long event that spans 2 months',\n      color: colors.blue,\n      allDay: true\n    },\n    {\n      start: addHours(startOfDay(new Date()), 2),\n      end: new Date(),\n      title: 'A draggable and resizable event',\n      color: colors.yellow,\n      actions: this.actions,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    }\n  ];\n\n  activeDayIsOpen: boolean = true;\n\n  constructor(private modal: NgbModal, private _commonService:CommonService) { }\n  ngOnInit() {\n    this._commonService.calenderData.subscribe((data)=>{\n      this.events = [];\n      data.forEach(element => {\n        console.log(\"****\",element);\n        this.events.push({\n          title: 'payment of rs '+ element.paid+' for flat id'+element.flatid+' Reciept Number is '+element.id+' and ownerid is '+element.ownerid,\n          start: new Date(element.createddate),\n          color: colors.red,\n        });\n        this.refresh.next();\n      });\n    })\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  addEvent(): void {\n    this.events.push({\n      title: 'New event',\n      start: startOfDay(new Date()),\n      end: endOfDay(new Date()),\n      color: colors.red,\n      draggable: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      }\n    });\n    this.refresh.next();\n  }\n}","module.exports = \"h3 {\\n    margin: 0 0 10px;\\n  }\\n  \\n  pre {\\n    background-color: #f5f5f5;\\n    padding: 15px;\\n  }\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      Action:\\n      <pre>{{ modalData?.action }}</pre>\\n    </div>\\n    <div>\\n      Event:\\n      <pre>{{ modalData?.event | json }}</pre>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"text-center\\\">\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarPreviousView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Previous\\n      </div>\\n      <div\\n        class=\\\"btn btn-outline-secondary\\\"\\n        mwlCalendarToday\\n        [(viewDate)]=\\\"viewDate\\\">\\n        Today\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarNextView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Next\\n      </div>\\n    </div>\\n  </div>\\n  <div>\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\n  </div>\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Month\\\"\\n        [class.active]=\\\"view === CalendarView.Month\\\">\\n        Month\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Week\\\"\\n        [class.active]=\\\"view === CalendarView.Week\\\">\\n        Week\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Day\\\"\\n        [class.active]=\\\"view === CalendarView.Day\\\">\\n        Day\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div [ngSwitch]=\\\"view\\\">\\n  <mwl-calendar-month-view\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-month-view>\\n  <mwl-calendar-week-view\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-week-view>\\n  <mwl-calendar-day-view\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-day-view>\\n</div>\\n\\n<br><br><br>\\n\\n<h3>\\n  Edit events\\n  <button\\n    class=\\\"btn btn-primary pull-right\\\"\\n    (click)=\\\"addEvent()\\\">\\n    Add new\\n  </button>\\n  <div class=\\\"clearfix\\\"></div>\\n</h3>\\n\\n<table class=\\\"table table-bordered\\\">\\n\\n  <thead>\\n    <tr>\\n      <th>Title</th>\\n      <th>Primary color</th>\\n      <th>Secondary color</th>\\n      <th>Starts at</th>\\n      <th>Ends at</th>\\n      <th>Remove</th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let event of events; let index = index\\\">\\n      <td>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"event.title\\\"\\n          (keyup)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.primary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.secondary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.start\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.end\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <button\\n          class=\\\"btn btn-danger\\\"\\n          (click)=\\\"events.splice(index, 1); refresh.next()\\\">\\n          Delete\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\"","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView\n} from 'angular-calendar';\nimport { CommonService } from '../services/common.service';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'event-calendar-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./event-calendar.component.css'],\n  templateUrl: './event-calendar.component.html'\n})\nexport class EventCalendarComponent {\n  @ViewChild('modalContent')\n  modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter(iEvent => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  events: CalendarEvent[] = [\n   /* {\n      start: subDays(startOfDay(new Date()), 1),\n      end: addDays(new Date(), 1),\n      title: 'A 3 day event',\n      color: colors.red,\n      actions: this.actions,\n      allDay: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    },\n    {\n      start: startOfDay(new Date()),\n      title: 'An event with no end date',\n      color: colors.yellow,\n      actions: this.actions\n    },\n    {\n      start: new Date('2018-11-10 07:46:03'),\n      title: 'custome varun event',\n      color: colors.yellow,\n      actions: this.actions\n    },\n    {\n      start: subDays(endOfMonth(new Date()), 3),\n      end: addDays(endOfMonth(new Date()), 3),\n      title: 'A long event that spans 2 months',\n      color: colors.blue,\n      allDay: true\n    },\n    {\n      start: addHours(startOfDay(new Date()), 2),\n      end: new Date(),\n      title: 'A draggable and resizable event',\n      color: colors.yellow,\n      actions: this.actions,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    }*/\n  ];\n\n  activeDayIsOpen: boolean = true;\n\n  constructor(private modal: NgbModal, private _commonService:CommonService) { }\n  ngOnInit() {\n    this._commonService.eventCalenderData.subscribe((data)=>{\n      this.events = [];\n      data.forEach(element => {\n        console.log(\"****\",element);     \n        this.events.push({\n          title:element.eventheading+' Event Description '+element.eventdiscription,\n          start: new Date(element.eventstartdate),\n          \n          color: colors.red,\n        });\n\n        this.refresh.next();\n      });\n      this.refresh.next();\n    })\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  addEvent(): void {\n    this.events.push({\n      title: 'New event',\n      start: startOfDay(new Date()),\n      end: endOfDay(new Date()),\n      color: colors.red,\n      draggable: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      }\n    });\n    this.refresh.next();\n  }\n}","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-left contentContainer\\\">    \\n        Society ID:  {{societyInfo && societyInfo[0]?.societyid}} <br>\\n      Society Name: {{societyInfo && societyInfo[0]?.societyname}} ,  <br>     \\n      Society Address: {{societyInfo && societyInfo[0]?.address}},{{societyInfo && societyInfo[0]?.pincode}}<br><br>\\n      buildingname : {{this.param2}}<br>\\n    </div>\\n  </div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n      \\n      <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th>flatid</th>\\n              <th>flatname</th>\\n              <th>ownerid</th>\\n              <th>pendingpayment</th>\\n              <th>payment button</th>\\n              <th>Calender</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr  *ngFor=\\\"let flat of flatList\\\">\\n              <td>{{flat.flatid}}</td>\\n              <td>{{flat.flatname}}</td>\\n              <td>{{flat.ownerid}}</td>\\n              <td>{{flat.pendingpayment}}</td>\\n              <td> \\n                  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#pendingModal\\\" (click)=\\\"paymentID(flat)\\\">Pay</button>\\n              </td>\\n              <td> \\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"showCalender(flat.flatid)\\\">Calender</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n    </div>\\n  </div>\\n<div *ngFor=\\\"\\\">\\n    {{building | json}}\\n</div>\\n\\n\\n\\n<!-- Modal -->\\n<div id=\\\"pendingModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Payment Option</h4>  \\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"payAmount\\\" placeholder=\\\"Enter Paynding Payment amount\\\" [(ngModel)]=\\\"payAmount\\\" \\n          required />\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"paymentMethod(payAmount)\\\" >Pay</button>\\n        <div *ngIf=\\\"isClosedValue\\\">\\n          <div data-dismiss=\\\"modal\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n</form>\\n  </div>\\n</div>\\n<div>\\n  <calendar-component></calendar-component>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../services/user.service\"\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\nimport { OnChanges } from '@angular/core';\nimport { TokenService } from '../services/token.service'\nimport { CommonService } from '../services/common.service'\n\n@Component({\n  selector: 'app-flats',\n  templateUrl: './flats.component.html',\n  styleUrls: ['./flats.component.css']\n})\nexport class FlatsComponent implements OnInit, OnChanges {\n  \n  society; flatList;\n  isClosedValue = false;\n  model: any = {};\n  errmsg;\n  payAmount;\n  param1;param2; societyInfo: any;responseData:any;\n  flatObj:any;\n  constructor(public _userService: UserService,\n     public router: Router, private route: \n     ActivatedRoute, public _tokenService: TokenService, public _commonService:CommonService) { }\n\n  ngOnInit() {\n    this.getflatList();\n  }\n  ngOnChanges() {\n    this.getflatList();\n  }\n  getflatList() {\n    this.route.params.subscribe((value) => {\n      this.param1 = value[\"societyid\"]; // get param\n      this.param2 = value[\"buildingid\"]; // get param\n      this._userService.getFlatList(this.param2).subscribe((data) => {\n        this.flatList = data.dbResponse;\n      },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n\n      this._userService.getSocietyInfo(this.param1).subscribe((data) => {\n        this.societyInfo = data.dbResponse;\n      },\n        error => {\n          console.log(error);\n          this.society = error.message;\n        });\n    });\n  }\n  paymentMethod(payAmount){\n    this.flatObj.pendingPayment = payAmount;\n    console.log(payAmount , this.flatObj.pendingPayment);\n    console.log(this.flatObj);\n    \n    this._userService.putFlatPayment(this.flatObj).subscribe(\n      (data) => {\n      this.responseData = data.dbResponse;\n      },\n      error => {\n        console.log(error);\n        this.errmsg=error.message;\n        alert(\"Please login first\"+JSON.stringify(error));\n      },\n      () => {\n        this.isClosedValue = true\n        this.getflatList();\n        alert(\"Payment successfully updated!\");\n      });\n  }\n  paymentID(flatObj){\n    this.flatObj =flatObj;\n  }\n  showCalender(flatId){\n    this._userService.getFlatPaymentHistory(flatId).subscribe((data) => {\n      console.log(data.dbResponse);\n      this._commonService.emitCalanderData(data.dbResponse);\n    },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n  }\n}\n","module.exports = \"\\n\\n.loginBox{\\n    padding: 20px;\\n    margin-top:20px;\\n    border: 1px solid rgba(0, 0, 0, 0.16);\\n    -ms-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n    -o-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n}\"","module.exports = \"<!-- main app container -->\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row mainContainer\\\">\\n        <div class=\\\"d-none d-sm-block col-sm-8 align-self-center text-center\\\">\\n            <h4>Lorem Ipsum</h4>\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n                magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n                consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\\n            <img src=\\\"assets/login-detail.jpg\\\" class=\\\"img-fluid\\\" />\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-4 align-self-top\\\">\\n            <br> <br>\\n            <div class=\\\"loginBox\\\">\\n                <h4 class=\\\" text-center\\\">Member login</h4>\\n                <br>\\n                <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"uname\\\" placeholder=\\\"User Name\\\" [(ngModel)]=\\\"model.uname\\\" #uname=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && uname.invalid }\\\"\\n                            required />\\n                        <div *ngIf=\\\"f.submitted && uname.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"uname.errors.required\\\">username is required</div>\\n                        </div>\\n                    </div> \\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required />\\n                        <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"password.errors.required\\\">password is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button class=\\\"btn btn-block btn-primary\\\">Login</button>\\n                    </div>\\n                    <div class=\\\"form-group text-center\\\">\\n                        <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Not a member? Sign up</a>\\n                    </div>\\n                </form>\\n            </div>\\n            <br> <br>\\n        </div>\\n        \\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Route } from '@angular/compiler/src/core';\nimport { ApiService } from '../services/api.service';\nimport { TokenService } from '../services/token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  username = \"sdfsdf29112\";\n  password = \"soword\";\n\n  constructor(private api: ApiService, private _tokenService: TokenService, public router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.api.login(\n      this.model.uname,\n      this.model.password\n    )\n      .subscribe(\n        r => {\n          if (r.token) {\n           // alert(r.token);\n            this._tokenService.setToken(r.token);\n            this.router.navigateByUrl('/societyManagment');\n          }\n        },\n        err => {\n          alert(err);\n        });\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- The Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Modal Heading</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <!-- <div *ngIf=\\\"modalName == 'society'\\\">\\n          <select name=\\\"socId\\\">\\n            <option>Select Society from list</option>\\n            <option *ngFor=\\\"let s of society\\\" value=\\\"{{s.societyid}}\\\">{{s.societyname}}</option>\\n          </select>\\n        </div> -->\\n        <!-- <div *ngIf=\\\"modalName == 'buildings'\\\">\\n          <select name=\\\"society\\\" (change)=\\\"onSocietyChange($event.target.value)\\\">\\n            <option>Select Society from list</option>\\n            <option *ngFor=\\\"let s of society\\\" value=\\\"{{s.societyid}}\\\">{{s.societyname}}</option>\\n          </select>\\n          <select name=\\\"building\\\">\\n            <option>Select Buildings from list</option>\\n            <option *ngFor=\\\"let building of buildingList\\\" value=\\\"{{building.buildingid}}\\\">{{building.buildingname}}</option>\\n          </select>\\n        </div> -->\\n        <div> {{modalName}}\\n          <select *ngIf=\\\"(modalName == 'flats' || modalName == 'buildings' || modalName == 'owners' )\\\" name=\\\"society\\\" [(ngModel)]=\\\"sid\\\" (change)=\\\"onSocietyChange($event.target.value)\\\">\\n            \\n            <option>Select Society from list</option>\\n            <option *ngFor=\\\"let s of society\\\" value=\\\"{{s.societyid}}\\\">{{s.societyname}}</option>\\n          </select>\\n          <select *ngIf=\\\"(modalName == 'flats' || modalName == 'owners')\\\"  [(ngModel)]=\\\"bid\\\" name=\\\"building\\\" (change)=\\\"onBuildingChange($event.target.value)\\\">\\n            <option>Select Buildings from list</option>\\n            <option *ngFor=\\\"let building of buildingList\\\" value=\\\"{{building.buildingname}}\\\">{{building.buildingname}}</option>\\n          </select>\\n          <select name=\\\"flats\\\" *ngIf=\\\"modalName == 'owners'\\\">\\n              <option>Select Flats from list</option>\\n              <option *ngFor=\\\"let flat of flatList\\\" value=\\\"{{flat.flatid}}\\\">{{flat.flatname}}</option>\\n            </select>\\n        </div>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" data-dismiss=\\\"modal\\\">Submit</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { UserService } from \"../services/user.service\";\nimport {BuildingComponent} from './../building/building.component';\nimport { NeedAuthGuard } from \"../services/NeedAuthGuard\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n  society;\n  sid; bid;\n  buildingList;\n  flatList;\n  buildingObj;\n  @Input()\n  modalName : string;\n\n  //@Output()\n  //eventEm = new EventEmitter();\n  \n  constructor(public _userService: UserService, public router: Router, public _needAuthGuard : NeedAuthGuard) { \n    \n  }\n\n  ngOnInit() {\n    this._userService.getSociety().subscribe((data) => {\n      this.society = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n  }\n\n  onSocietyChange(societyid) {\n    this.sid=societyid;\n    this._userService.getBuilding(societyid).subscribe((data) => {\n      this.buildingList = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.buildingList = error.message;\n      });\n  }\n\n  onBuildingChange(buildingId) {\n    this._userService.getFlatList(buildingId).subscribe((data) => {\n      this.flatList = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.flatList = error.message;\n      });\n  }\n\n  onSubmit(){\n    console.log(this.modalName);\n    if(this.modalName=='buildings')\n      this.router.navigate(['societyManagment',this.sid,'buildings']);  \n     else if(this.modalName=='flats')\n     this.router.navigate(['societyManagment',this.sid,'buildings',this.bid,'flats']);\n     else if(this.modalName=='owners') {   \n        this.router.navigate(['societyManagment','owners']); \n     }    \n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  owners works!<br>\\n  {{ownerData | json}}\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../services/user.service\"\n\n@Component({\n  selector: 'app-owners',\n  templateUrl: './owners.component.html',\n  styleUrls: ['./owners.component.css']\n})\nexport class OwnersComponent implements OnInit {\n  ownerData;\n  constructor(public _userService : UserService) { }\n\n  ngOnInit() {\n    this._userService.getAllOwners().subscribe((data)=>{\n      this.ownerData = data;\n    }, error =>{\n      this.ownerData = error;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center mainContainer\\\">\\n      <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col text-left\\\">\\n            <a routerLink=\\\"/home\\\" class=\\\"btn btn-link\\\">Back</a>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col text-center\\\">\\n            <h1>{{pageTitle}}</h1>\\n            <p class=\\\"text-h3\\\">{{pageDesc}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"row align-items-center\\\">\\n          <div class=\\\"col\\\">\\n              <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n                  <div class=\\\"form-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"flatnum\\\" placeholder=\\\"{{formLabelNames.flatno}}\\\" [(ngModel)]=\\\"model.flatnum\\\" #flatnum=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && flatnum.invalid }\\\" required />\\n                      <div *ngIf=\\\"f.submitted && flatnum.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"flatnum.errors.required\\\">Flat Number is required</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-row mb-4\\\">\\n                      <div class=\\\"col\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fname\\\" placeholder=\\\"{{formLabelNames.ownerFname}}\\\" [(ngModel)]=\\\"model.fname\\\" #fname=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && fname.invalid }\\\" required />\\n                          <div *ngIf=\\\"f.submitted && fname.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <div *ngIf=\\\"fname.errors.required\\\">Owner First name is required</div>\\n                          </div>\\n                      </div>\\n                      <div class=\\\"col\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lname\\\" placeholder=\\\"{{formLabelNames.ownerLname}}\\\" [(ngModel)]=\\\"model.lname\\\" #lname=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && lname.invalid }\\\" required />\\n                              <div *ngIf=\\\"f.submitted && lname.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"lname.errors.required\\\">Owner Last name is required</div>\\n                              </div>\\n                            </div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phone\\\" placeholder=\\\"{{formLabelNames.phone}}\\\" [(ngModel)]=\\\"model.phone\\\" #phone=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && phone.invalid }\\\" required/>\\n                    <div *ngIf=\\\"f.submitted && phone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"phone.errors.required\\\">Phone number is required</div>\\n                      <div *ngIf=\\\"phone.errors.number\\\">Phone number is number</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"paymentamount\\\" placeholder=\\\"{{formLabelNames.paymentamount}}\\\" [(ngModel)]=\\\"model.paymentamount\\\" #paymentamount=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && paymentamount.invalid }\\\" required />\\n                      <div *ngIf=\\\"f.submitted && paymentamount.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"paymentamount.errors.required\\\">payment amount is required</div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"form-row mb-4\\\">\\n                        <div class=\\\"col\\\">\\n                            <label for=\\\"paymentmethod\\\">{{formLabelNames.paymentmethod}}</label><br>\\n                            \\n                            <div class=\\\"form-check\\\">\\n                              <label class=\\\"form-check-label\\\" for=\\\"cash\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"model.paymentmethod\\\" #paymentmethod=\\\"ngModel\\\" id=\\\"cash\\\" class=\\\"form-check-input\\\" name=\\\"paymentmethod\\\" value=\\\"{{formLabelNames.paymentmethodValue[0]}}\\\" checked>{{formLabelNames.paymentmethodValue[0]}}\\n                              </label>\\n                            </div>\\n                            <div class=\\\"form-check\\\">\\n                              <label class=\\\"form-check-label\\\" for=\\\"card\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"card\\\" name=\\\"paymentmethod\\\" value=\\\"{{formLabelNames.paymentmethodValue[1]}}\\\" (click)=\\\"clickCard()\\\">{{formLabelNames.paymentmethodValue[1]}}\\n                              </label>\\n                            </div>\\n                            <div class=\\\"form-check\\\">\\n                              <label class=\\\"form-check-label\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" value=\\\"{{formLabelNames.paymentmethodValue[2]}}\\\">{{formLabelNames.paymentmethodValue[2]}}\\n                              </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col\\\" *ngIf=\\\"Debitcard\\\">                          \\n                            <div class=\\\"form-group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"paymentamount\\\" placeholder=\\\"card number\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"paymentamount\\\" placeholder=\\\"name on card\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row mb-4\\\">\\n                        <div class=\\\"col\\\">\\n                            <label>{{formLabelNames.flatrented}}</label>\\n                            <div class=\\\"form-check\\\">\\n                              <label class=\\\"form-check-label\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\" (change)=\\\"radioChange($event)\\\" value=\\\"{{formLabelNames.rentedYes}}\\\">{{formLabelNames.rentedYes}}\\n                              </label>\\n                            </div>\\n                            <div class=\\\"form-check\\\">\\n                              <label class=\\\"form-check-label\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\" (change)=\\\"radioChange($event)\\\" value=\\\"{{formLabelNames.rentedNo}}\\\">{{formLabelNames.rentedNo}}\\n                              </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col\\\" *ngIf=\\\"tenantDetails\\\" >\\n                            <div class=\\\"form-group\\\" >\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"paymentamount\\\" placeholder=\\\"Tenant Name\\\">\\n                             </div>\\n                             <div class=\\\"form-group\\\">\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"paymentamount\\\" placeholder=\\\"Tenant Contact\\\">\\n                             </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"{{formLabelNames.memPswd}}\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required />\\n                        <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"password.errors.required\\\">{{formLabelNames.memPswd}} is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"{{formLabelNames.memConfrmPswd}}\\\" name=\\\"confirmpassword\\\" [(ngModel)]=\\\"model.confirmpassword\\\" #confirmpassword=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && confirmpassword.invalid }\\\" required />\\n                        <div *ngIf=\\\"f.submitted && confirmpassword.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"confirmpassword.errors.required\\\">Confirm password is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group text-center\\\">\\n                        <button class=\\\"btn btn-primary btn-lg\\\">Register</button>\\n                    </div>\\n                </form>         \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-register-member',\n  templateUrl: './register-member.component.html',\n  styleUrls: ['./register-member.component.css']\n})\nexport class RegisterMemberComponent {\n\n  model: any = {};\n  StoreArray:Array<any> = [];\n  Debitcard:boolean = false;\n  tenantDetails:boolean = false;\n  \n  pageTitle = \"Register\";\n  pageDesc = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\n  formLabelNames = {\n    flatno: \"Flat Number\",\n    ownerFname : \"Owner First Name\",\n    ownerLname : \"Owner Last Name\",\n    phone : \"Phone Number\",\n    paymentmethod :\"Payment Method\",\n    paymentmethodValue : ['Cash','Debit/Credit Card','Cheque'],\n    paymentamount :\"Payment amount\",\n    flatrented: \"Flat Rented\",\n    rentedYes: \"Yes\",\n    rentedNo: \"No\",\n    memPswd: \"Password\",\n    memConfrmPswd: \"Confirm Password\",\n  }\n\n  onSubmit() {   \n    this.StoreArray.push(JSON.stringify(this.model));\n  }\n\n  clickCard(){\n    this.Debitcard=!this.Debitcard\n  }\n  \n  radioChange($event) {\n    var RadioValue = $event.target.value;\n    if(RadioValue==\"Yes\")\n     this.tenantDetails=true;\n    else \n      this.tenantDetails=false;\n  }\n}\n","import {CanActivate, Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {TokenService} from './token.service';\nimport { throwError, Observable,of } from 'rxjs';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router/src/router_state';\n\n\n@Injectable()\nexport class NeedAuthGuard implements CanActivate {\n\n  constructor(private _tokenService: TokenService, private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean|Observable<boolean>{\n\n    const redirectUrl = route['_routerState']['url'];\n\n   /* if (this._tokenService.isLogged()) {\n      return true;\n    } else {\n      this.router.navigateByUrl(\n        this.router.createUrlTree(\n          ['/login'], {\n            queryParams: {\n              redirectUrl\n            }\n          }\n        )\n      );\n      return false;\n    } */\n\n\n      return new Observable<boolean>((observer) => {\n        this._tokenService.isLogged().subscribe(isValid => {\n          if(isValid) {\n            console.log(\"token is valid*****\");\n            observer.next(true);\n          } else {\n            this.router.navigateByUrl(\n              this.router.createUrlTree(\n                ['/login'], {\n                  queryParams: {\n                    redirectUrl\n                  }\n                }\n              )\n            );\n            observer.next(false);\n          }\n        })\n      })\n    }\n\n  \n}","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport * as config from \"./../config.json\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {\n\n  }\n  TOKEN = \"TOKEN\"\n  login(email: string, password: string): Observable<any>{\n    return this.http.post(config.default.HOST_NAME+'/users/login', {\n      email: email,\n      password: password\n    });\n  }\n\n  getUser(){\n    let headers = new HttpHeaders().set('token',localStorage.getItem(this.TOKEN));\n    return this.http.get(config.default.HOST_NAME+\"/users/getUser\",{\n      headers:headers\n    })\n\n  }\n}","import { Injectable, EventEmitter, Output } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  @Output()\n  calenderData=new EventEmitter();\n  eventCalenderData=new EventEmitter();\n  constructor() { }\n\n  emitCalanderData(paymentHistory){\n    this.calenderData.emit(paymentHistory)  \n  }\n\n  emitEventCalanderData(societyEvents){\n    this.eventCalenderData.emit(societyEvents)  \n  }\n}\n","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as config from \"./../config.json\";\n\nconst TOKEN = 'TOKEN';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  validateTokenUrl = config.default.HOST_NAME+\"/users/validateToken\";\n  constructor(private http: HttpClient) {\n  }\n\n  setToken(token: string): void {\n    localStorage.setItem(TOKEN, token);\n  }\n\n  isValidToken(token): Observable<any> {\n    let headers = new HttpHeaders().set('token',token);\n    console.log(`${this.validateTokenUrl}`);\n    return this.http.get(`${this.validateTokenUrl}`,{\n      headers:headers\n    }).pipe(catchError((error: HttpErrorResponse) => throwError(error)\n   ));\n  }\n\n  isLogged() :Observable<any> {\n    let isValid;\n    return new Observable(observer => {\n      let token = localStorage.getItem(TOKEN)\n      if(token) {\n        this.isValidToken(token).subscribe(data=>{\n          if(data.error == 0){\n          //  alert(token);\n            observer.next(true);\n          } else {\n            alert(\"User is not Valid\");\n            observer.next(false);\n          }\n        }, error=>{\n          alert(\"Error:\"+JSON.stringify(error));\n          observer.next(false);\n        })\n      } else {\n       //alert(\"Please login first\");\n       observer.next(false);\n      }\n    })\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as config from \"./../config.json\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  TOKEN = 'TOKEN';\n  constructor(public http: HttpClient) { }\n\n  getSocietyURL = config.default.HOST_NAME+\"/society/society\";\n  getBuildingsURL = config.default.HOST_NAME+\"/society/building\";\n  getOwnerURL = config.default.HOST_NAME+\"/society/owner\";\n  getFlatURL = config.default.HOST_NAME+\"/society/flat\";\n  putPayment = config.default.HOST_NAME+\"/society/flat/pendingPayment\";\n  flatPaymentHistory = config.default.HOST_NAME+\"/society/paymenthistory\";\n  societyEventURL = config.default.HOST_NAME+\"/society/societyEvent\";\n\n  getOwner(query): Observable<any> {\n    console.log(`${this.getOwnerURL}/phonenumber/?value='${query.oPhoneNumber}'`);\n    return this.http.get(`${this.getOwnerURL}/phonenumber/?value='${query.oPhoneNumber}'`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  getAllOwners(): Observable<any> {\n    console.log(`${this.getOwnerURL}`);\n    return this.http.get(`${this.getOwnerURL}`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  getSociety(): Observable<any> {\n    return this.http.get(`${this.getSocietyURL}`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  getSocietyInfo(id): Observable<any> {\n    console.log(`${this.getSocietyURL}/societyid/?value=${id}`);\n    return this.http.get(`${this.getSocietyURL}/societyid/?value=${id}`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  getBuilding(socID): Observable<any> {\n    return this.http.get(`${this.getBuildingsURL}/societyid/?value=${socID}`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  getFlatList(buildingname): Observable<any> {\n    console.log(`${this.getFlatURL}/buildingname/?value=${buildingname}`);\n    return this.http.get(`${this.getFlatURL}/buildingname/?value='${buildingname}'`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  putFlatPayment(flatObj): Observable<any> {\n    let headers = new HttpHeaders().set('token',localStorage.getItem(this.TOKEN));\n    console.log(flatObj);\n    let paramList = {\n      \"pendingPayment\": flatObj.pendingPayment,\n           \"ownerid\": flatObj.ownerid,\n           \"flatid\": flatObj.flatid\n   };\n   console.log(paramList);\n    return this.http.put(this.putPayment, paramList, {\n      headers:headers\n    })\n    .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  getFlatPaymentHistory(flatId): Observable<any> {\n    console.log(\"uuuuuuuu\",`${this.flatPaymentHistory}/flatid/?value=${flatId}`);\n    return this.http.get(`${this.flatPaymentHistory}/flatid/?value=${flatId}`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n  getSocietyEvents(societyId): Observable<any> {\n    console.log(`${this.societyEventURL}/societyid/?value='${societyId}'`);\n    return this.http.get(`${this.societyEventURL}/societyid/?value='${societyId}'`)\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\n      ));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-6 col-sm-6 text-left\\\">\\n    <img src=\\\"assets/logo2.jpg\\\" class=\\\"img-fluid\\\" />\\n  </div>\\n  <div class=\\\"col-xs-6 col-sm-6 text-right\\\">\\n    <a routerLink=\\\"/home\\\" class='btn btn-outline-warning btn'>\\n      Home\\n    </a>\\n  </div>\\n<!-- </div>\\n<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n    \\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Logo</a>\\n  \\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 1</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 2</a>\\n      </li>\\n  \\n      \\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbardrop\\\" data-toggle=\\\"dropdown\\\">\\n          Dropdown link\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 1</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 2</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 3</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </nav> -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-society-header',\n  templateUrl: './society-header.component.html',\n  styleUrls: ['./society-header.component.css']\n})\nexport class SocietyHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#content{\\n    overflow:scroll;\\n}\"","module.exports = \"<div class=\\\"container mainContainer\\\">\\n  <div *ngIf=\\\"!isLogged\\\">\\n    <a routerLink=\\\"/login\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">Login</a>\\n  </div>\\n  <div *ngIf=\\\"isLogged\\\">\\n      <a class=\\\"btn btn-outline-warning homeicons w-100\\\" (click)=\\\"logout()\\\">Logout</a>\\n  </div>\\n  <div>\\n    <a routerLink=\\\"/register\\\" class=\\\"btn btn-outline-danger homeicons w-100\\\"> Register</a>\\n  </div>\\n  <app-society-header></app-society-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 text-center contentContainer\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <a routerLink=\\\"/societyManagment/society\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">Society</a>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <a href=\\\"javascript:void(0)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click)=\\\"ShowModal('buildings')\\\"\\n            class=\\\"btn btn-outline-warning homeicons w-100\\\">Buildings</a>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <a href=\\\"javascript:void(0)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click)=\\\"ShowModal('flats')\\\" class=\\\"btn btn-outline-danger homeicons w-100\\\">Flats</a>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <a href=\\\"javascript:void(0)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click)=\\\"ShowModal('owners')\\\" class=\\\"btn btn-outline-danger homeicons w-100\\\">\\n            owners</a>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"modalVar\\\">\\n        <app-modal [modalName]=\\\"modalVar\\\"></app-modal>\\n      </div>\\n      <div id=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TokenService } from './services/token.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-society-mgmt',\n  templateUrl: './society-mgmt.component.html',\n  styleUrls: ['./society-mgmt.component.css']\n})\nexport class SocietyMgmtComponent implements OnInit {\n  modalVar;\n  isLogged = false;\n  constructor(public _tokenService : TokenService, public router: Router) { }\n\n  ngOnInit() {\n    console.log(\"tttttttt\",localStorage.getItem('TOKEN'));\n    this._tokenService.isLogged().subscribe(flag=>{\n      if(flag){\n        this.isLogged = true; \n      } else {\n        this.isLogged = false; \n      }\n    });\n    \n  }\n  \n\n  ShowModal(type){\n    console.log(type);\n    if(type == 'flats' || type == 'owners') {\n      this._tokenService.isLogged().subscribe(flag=>{\n        if(flag){\n          //this.isLogged = true; \n          this.modalVar = type;\n        } else {\n          alert(\"Please login first\");\n          this.router.navigateByUrl('/login');\n        }\n      });\n    } else {\n      this.modalVar = type; \n    }     \n  }\n  logout(){\n    localStorage.setItem('TOKEN', \"\");\n    console.log(\"tttttttt\",localStorage.getItem('TOKEN'));\n    this.isLogged = false; \n    \n    this.router.navigateByUrl('/societyManagment');\n    window.location.reload();\n  }\n}\n","module.exports = \"\"","module.exports = \"      <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n            <table class=\\\"table\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Number</th>\\n                    <th>Name</th>\\n                    <th>Address</th>\\n                    <th>Pincode</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr (click)=\\\"onSelect(soc.societyid)\\\" *ngFor=\\\"let soc of society\\\" id=\\\"{{soc.societyid}}\\\">\\n                    <td>{{soc.societyid}}</td>\\n                    <td>{{soc.societyname}}</td>\\n                    <td>{{soc.address}}</td>\\n                    <td>{{soc.pincode}}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n          </div>\\n        </div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"societyInfo\\\">\\n  <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">    \\n      Society ID:  {{societyInfo && societyInfo[0]?.societyid}} <BR>\\n    Society Name: {{societyInfo && societyInfo[0]?.societyname}}<br>\\n    Society Address: {{societyInfo && societyInfo[0]?.address}},{{societyInfo && societyInfo[0]?.pincode}}<br>\\n  </div>\\n</div>\\n<div [hidden]=\\\"!(societyInfo && societyInfo[0]?.societyid)\\\">\\n  <event-calendar-component></event-calendar-component>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../services/user.service\"\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\nimport { OnChanges } from '@angular/core';\nimport { CommonService } from '../services/common.service'\n\n@Component({\n  selector: 'app-society',\n  templateUrl: './society.component.html',\n  styleUrls: ['./society.component.css']\n})\nexport class SocietyComponent implements OnInit {\n  society: any;param1;societyInfo:any = undefined;\n\n  constructor(public _userService: UserService,public router: Router,\n     private route: ActivatedRoute, public _commonService: CommonService ) { }\n  \n  ngOnInit() {\n    this._userService.getSociety().subscribe((data) => {\n      this.society = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n  }\n\n  onSelect(societyid) {\n    this._userService.getSocietyEvents(societyid).subscribe((societyEvevts) => {\n      this._commonService.emitEventCalanderData(societyEvevts.dbResponse)\n    },\n    error => {\n      console.log(error);\n      this.society = error.message;\n    });\n    this._userService.getSocietyInfo(societyid).subscribe((data) => {\n      this.societyInfo = data.dbResponse;\n    },\n    error => {\n      console.log(error);\n      this.society = error.message;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  tenant works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tenant',\n  templateUrl: './tenant.component.html',\n  styleUrls: ['./tenant.component.css']\n})\nexport class TenantComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}