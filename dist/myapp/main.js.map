{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/material-module.ts","webpack:///./src/app/society-mgmt/building/building.component.css","webpack:///./src/app/society-mgmt/building/building.component.html","webpack:///./src/app/society-mgmt/building/building.component.ts","webpack:///./src/app/society-mgmt/calendar/calendar.component.css","webpack:///./src/app/society-mgmt/calendar/calendar.component.html","webpack:///./src/app/society-mgmt/calendar/calendar.component.ts","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.css","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.html","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.ts","webpack:///./src/app/society-mgmt/flats/PaymentHistoryDialogBox.html","webpack:///./src/app/society-mgmt/flats/flat-dialogBox.html","webpack:///./src/app/society-mgmt/flats/flats.component.css","webpack:///./src/app/society-mgmt/flats/flats.component.html","webpack:///./src/app/society-mgmt/flats/flats.component.ts","webpack:///./src/app/society-mgmt/flats/pendingpayment/pendingpayment.component.css","webpack:///./src/app/society-mgmt/flats/pendingpayment/pendingpayment.component.html","webpack:///./src/app/society-mgmt/flats/pendingpayment/pendingpayment.component.ts","webpack:///./src/app/society-mgmt/login/login.component.css","webpack:///./src/app/society-mgmt/login/login.component.html","webpack:///./src/app/society-mgmt/login/login.component.ts","webpack:///./src/app/society-mgmt/modal/modal.component.css","webpack:///./src/app/society-mgmt/modal/modal.component.html","webpack:///./src/app/society-mgmt/modal/modal.component.ts","webpack:///./src/app/society-mgmt/owners/owners.component.css","webpack:///./src/app/society-mgmt/owners/owners.component.html","webpack:///./src/app/society-mgmt/owners/owners.component.ts","webpack:///./src/app/society-mgmt/register/building-reg/building-reg.component.css","webpack:///./src/app/society-mgmt/register/building-reg/building-reg.component.html","webpack:///./src/app/society-mgmt/register/building-reg/building-reg.component.ts","webpack:///./src/app/society-mgmt/register/flat-reg/flat-reg.component.css","webpack:///./src/app/society-mgmt/register/flat-reg/flat-reg.component.html","webpack:///./src/app/society-mgmt/register/flat-reg/flat-reg.component.ts","webpack:///./src/app/society-mgmt/register/owner-reg/owner-reg.component.css","webpack:///./src/app/society-mgmt/register/owner-reg/owner-reg.component.html","webpack:///./src/app/society-mgmt/register/owner-reg/owner-reg.component.ts","webpack:///./src/app/society-mgmt/register/register-member.component.css","webpack:///./src/app/society-mgmt/register/register-member.component.html","webpack:///./src/app/society-mgmt/register/register-member.component.ts","webpack:///./src/app/society-mgmt/register/register.service.ts","webpack:///./src/app/society-mgmt/register/society-reg/society-reg.component.css","webpack:///./src/app/society-mgmt/register/society-reg/society-reg.component.html","webpack:///./src/app/society-mgmt/register/society-reg/society-reg.component.ts","webpack:///./src/app/society-mgmt/services/NeedAuthGuard.ts","webpack:///./src/app/society-mgmt/services/api.service.ts","webpack:///./src/app/society-mgmt/services/common.service.ts","webpack:///./src/app/society-mgmt/services/token.service.ts","webpack:///./src/app/society-mgmt/services/user.service.ts","webpack:///./src/app/society-mgmt/society-header/society-header.component.css","webpack:///./src/app/society-mgmt/society-header/society-header.component.html","webpack:///./src/app/society-mgmt/society-header/society-header.component.ts","webpack:///./src/app/society-mgmt/society-mgmt.component.css","webpack:///./src/app/society-mgmt/society-mgmt.component.html","webpack:///./src/app/society-mgmt/society-mgmt.component.ts","webpack:///./src/app/society-mgmt/society/society.component.css","webpack:///./src/app/society-mgmt/society/society.component.html","webpack:///./src/app/society-mgmt/society/society.component.ts","webpack:///./src/app/society-mgmt/tenant/tenant.component.css","webpack:///./src/app/society-mgmt/tenant/tenant.component.html","webpack:///./src/app/society-mgmt/tenant/tenant.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,0K;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACH;AAOvC;IAEE,sBAAmB,MAAe;QAAf,WAAM,GAAN,MAAM,CAAS;QADlC,UAAK,GAAG,cAAc,CAAC;IACe,CAAC;IAF5B,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG4B,sDAAM;OAFvB,YAAY,CAIxB;IAAD,mBAAC;CAAA;AAJwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACyB;AACV;AACD;AAEJ;AACJ;AAC8B;AACvB;AACyB;AACT;AACD;AACU;AACwB;AAC9B;AACA;AAChB;AACuC;AACJ;AACtB;AACM;AACN;AACA;AACS;AACnB;AACa;AACpB;AACU;AACgB;AACiB;AACA;AACG;AACZ;AACG;AAG1F,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,mFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yGAAuB;QACtD,QAAQ,EAAC;YACT,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,6GAAmB,EAAE;YACvD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gHAAoB,EAAE;YACzD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oGAAgB,EAAE;YACjD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uGAAiB,EAAE;SAClD;KACF;IAEC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C;QACE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,yFAAoB;QAEzD,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,yFAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,2FAAiB,EAAE;YAC9D;gBACE,IAAI,EAAE,0CAA0C;gBAChD,SAAS,EAAE,mFAAc;gBACzB,WAAW,EAAE,CAAC,mFAAa,CAAC;aAC7B;YACD;gBACE,IAAI,EAAE,wDAAwD;gBAC9D,SAAS,EAAE,sFAAe;gBAC1B,WAAW,EAAE,CAAC,mFAAa,CAAC;aAC7B;YACD;gBACE,IAAI,EAAE,2CAA2C;gBACjD,SAAS,EAAE,sFAAe;gBAC1B,WAAW,EAAE,CAAC,mFAAa,CAAC;aAC7B;YACD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sFAAe,EAAE,WAAW,EAAE,CAAC,mFAAa,CAAC,EAAE;YAC5E,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,sFAAe,EAAE,WAAW,EAAE,CAAC,mFAAa,CAAC,EAAE;YACrF,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,mFAAc,EAAE,WAAW,EAAE,CAAC,mFAAa,CAAC,EAAE;YAC1F,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sFAAe,EAAE,WAAW,EAAE,CAAC,mFAAa,CAAC,EAAE;SAC7E;KAEF;IACD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,sEAAc,EAAE;CAC1C;AA+CD;IAAA;IAAyB,CAAC;IAAb,SAAS;QA5CrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAoB;gBACpB,kEAAa;gBACb,2FAAiB;gBACjB,mFAAc;gBACd,sFAAe;gBACf,sFAAe;gBACf,sEAAc;gBACd,6GAAsB;gBACtB,yGAAuB;gBACvB,mFAAc;gBACd,yFAAgB;gBAChB,mFAAc;gBACd,4FAAiB;gBACjB,6GAAsB;gBACtB,6GAAmB;gBACnB,gHAAoB;gBACpB,oGAAgB;gBAChB,uGAAiB;gBACjB,oHAAuB;gBACvB,kFAAa;gBACb,4FAAuB;aACxB;YACD,eAAe,EAAE,CAAC,kFAAa,EAAE,4FAAuB,CAAC;YACzD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,0EAAc;gBACd,mEAAe,CAAC,OAAO,EAAE;gBACzB,gEAAc,CAAC,OAAO,CAAC;oBACrB,OAAO,EAAE,6DAAW;oBACpB,UAAU,EAAE,uFAAc;iBAC3B,CAAC;gBACF,6FAAuB;gBACvB,kEAAmB;gBACnB,+DAAc;aACf;YACD,SAAS,EAAE,CAAC,mFAAa,CAAC;YAC1B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/HtB,mB;;;;;;;;;;;ACAA,6C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,gCAAgC,gDAAgD,uBAAuB,uBAAuB,mBAAmB,GAAG,WAAW,yBAAyB,EAAE,C;;;;;;;;;;;ACA1L,4VAA4V,oBAAoB,oBAAoB,kBAAkB,gBAAgB,qBAAqB,gBAAgB,qBAAqB,gBAAgB,mBAAmB,6xC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjd;AACsB;AACA;AAC/B;AAMzC;IAOE,uBAAoB,aAA0B,EAAU,cAA4B,EAAS,MAAc;QAAvF,kBAAa,GAAb,aAAa,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QAN3G,kBAAa,GAAG;YACd,IAAI,EAAC,EAAE;YACP,EAAE,EAAC,EAAE;YACL,KAAK,EAAC,EAAE;YACR,KAAK,EAAC,EAAE;SACT;IAC8G,CAAC;IAEhH,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,iBAAO;YAC7C,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IAED,wCAAgB,GAAhB;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,QAAQ;YACnD,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;YAClD,KAAI,CAAC,aAAa,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9C,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;YACrD,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IACD,0CAAkB,GAAlB;QACE,IAAG,IAAI,CAAC,aAAa,CAAC,EAAE,EAAC;YACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAC,QAAQ,EAAC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAC,OAAO,CAAC,CAAC,CAAC;SACnF;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAED,8BAAM,GAAN;QACE,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACnC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAnCU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAQkC,iFAAY,EAAyB,mFAAa,EAAiB,sDAAM;OAPhG,aAAa,CAoCzB;IAAD,oBAAC;CAAA;AApCyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT4B;AACC;AACL;AACF;AACT;AAqCZ;AA6C3B;IAAA;IAA6B,CAAC;IAAjB,cAAc;QA3C1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,iEAAc;gBACd,+DAAa;gBACb,qEAAc;gBACd,uEAAqB;gBACrB,gEAAc;gBACd,sEAAoB;gBACpB,iEAAe;gBACf,uEAAqB;gBACrB,+DAAa;gBACb,mEAAiB;gBACjB,gEAAc;gBACd,kEAAgB;gBAChB,qEAAmB;gBACnB,iEAAe;gBACf,kEAAgB;gBAChB,oEAAkB;gBAClB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,+DAAa;gBACb,qEAAmB;gBACnB,oEAAkB;gBAClB,sEAAoB;gBACpB,0EAAwB;gBACxB,gEAAc;gBACd,iEAAe;gBACf,iEAAe;gBACf,kEAAgB;gBAChB,iEAAe;gBACf,sEAAoB;gBACpB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,kEAAgB;gBAChB,kEAAgB;gBAChB,+DAAa;gBACb,sEAAe;aAChB;SACF,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;AAG3B;;oEAEoE;;;;;;;;;;;;AC3FpE,mB;;;;;;;;;;;ACAA,oKAAoK,0CAA0C,+BAA+B,4CAA4C,iCAAiC,wCAAwC,GAAG,wCAAwC,0RAA0R,aAAa,wbAAwb,qBAAqB,6BAA6B,uBAAuB,gjCAAgjC,iBAAiB,qI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApsE;AACI;AACa;AAET;AAO1D;IAKE,2BAAmB,YAAyB,EACnC,MAAc,EAAU,KAAqB,EAAS,cAA6B;QADzE,iBAAY,GAAZ,YAAY,CAAa;QACnC,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAe;IAAK,CAAC;IAElG,oCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,uCAAW,GAAX;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,2CAAe,GAAf;QAAA,iBA+BC;QA9BC,iEAAiE;QACjE,IAAI,CAAC,WAAW,GAAC,EAAE;QACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;YAChC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY;YACjD,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YACpC,KAAI,CAAC,WAAW,GAAC,IAAI,CAAC;YACtB,KAAI,CAAC,WAAW,GAAC,EAAE;YACnB,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBAC3D,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;gBACpC,KAAI,CAAC,WAAW,GAAC,KAAK,CAAC;gBACvB,IAAG,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAC;oBAC5D,KAAI,CAAC,WAAW,GAAC,iBAAiB;iBACnC;gBACD,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YAClD,CAAC,EACC,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC7B,KAAI,CAAC,WAAW,GAAC,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC;YAEL,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBAC9D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;YACrC,CAAC,EACC,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd,UAAe,SAAS;QAAxB,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,aAAa;YACpE,KAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,aAAa,CAAC,UAAU,CAAC;QACrE,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAU,SAAS,EAAE,YAAY;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IA5DU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAMiC,kEAAW;YAC3B,sDAAM,EAAiB,8DAAc,EAAyB,sEAAa;OANjF,iBAAiB,CA8D7B;IAAD,wBAAC;CAAA;AA9D6B;;;;;;;;;;;;ACX9B,sBAAsB,uBAAuB,KAAK,aAAa,gCAAgC,oBAAoB,KAAK,C;;;;;;;;;;;ACAxH,+QAA+Q,mHAAmH,qBAAqB,kEAAkE,2BAA2B,m8BAAm8B,qDAAqD,0uEAA0uE,0hDAA0hD,0H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKztK;AAUL;AACa;AACuB;AAM5B;AACmC;AAE7D,IAAM,MAAM,GAAQ;IAClB,GAAG,EAAE;QACH,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CACF,CAAC;AAQF;IA4EE,2BAAoB,KAAe,EAAU,cAA4B;QAAzE,iBAA8E;QAA1D,UAAK,GAAL,KAAK,CAAU;QAAU,mBAAc,GAAd,cAAc,CAAc;QAxEzE,SAAI,GAAiB,6DAAY,CAAC,KAAK,CAAC;QAExC,iBAAY,GAAG,6DAAY,CAAC;QAE5B,aAAQ,GAAS,IAAI,IAAI,EAAE,CAAC;QAO5B,YAAO,GAA0B;YAC/B;gBACE,KAAK,EAAE,oCAAoC;gBAC3C,OAAO,EAAE,UAAC,EAAmC;wBAAjC,gBAAK;oBACf,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,mCAAmC;gBAC1C,OAAO,EAAE,UAAC,EAAmC;wBAAjC,gBAAK;oBACf,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,KAAK,KAAK,EAAhB,CAAgB,CAAC,CAAC;oBAC7D,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBACrC,CAAC;aACF;SACF,CAAC;QAEF,YAAO,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAEtC,WAAM,GAAoB;YACxB;gBACE,KAAK,EAAE,wDAAO,CAAC,2DAAU,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;gBACzC,GAAG,EAAE,wDAAO,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC3B,KAAK,EAAE,eAAe;gBACtB,KAAK,EAAE,MAAM,CAAC,GAAG;gBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE;oBACT,WAAW,EAAE,IAAI;oBACjB,QAAQ,EAAE,IAAI;iBACf;gBACD,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,2DAAU,CAAC,IAAI,IAAI,EAAE,CAAC;gBAC7B,KAAK,EAAE,2BAA2B;gBAClC,KAAK,EAAE,MAAM,CAAC,MAAM;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;YACD;gBACE,KAAK,EAAE,wDAAO,CAAC,2DAAU,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;gBACzC,GAAG,EAAE,wDAAO,CAAC,2DAAU,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;gBACvC,KAAK,EAAE,kCAAkC;gBACzC,KAAK,EAAE,MAAM,CAAC,IAAI;gBAClB,MAAM,EAAE,IAAI;aACb;YACD;gBACE,KAAK,EAAE,yDAAQ,CAAC,2DAAU,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC1C,GAAG,EAAE,IAAI,IAAI,EAAE;gBACf,KAAK,EAAE,iCAAiC;gBACxC,KAAK,EAAE,MAAM,CAAC,MAAM;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,SAAS,EAAE;oBACT,WAAW,EAAE,IAAI;oBACjB,QAAQ,EAAE,IAAI;iBACf;gBACD,SAAS,EAAE,IAAI;aAChB;SACF,CAAC;QAEF,oBAAe,GAAY,IAAI,CAAC;IAE6C,CAAC;IAC9E,oCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAI;YAC9C,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,iBAAO;gBAClB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,OAAO,CAAC,CAAC;gBAC5B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,KAAK,EAAE,gBAAgB,GAAE,OAAO,CAAC,IAAI,GAAC,cAAc,GAAC,OAAO,CAAC,MAAM,GAAC,qBAAqB,GAAC,OAAO,CAAC,EAAE,GAAC,kBAAkB,GAAC,OAAO,CAAC,OAAO;oBACvI,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;oBACpC,KAAK,EAAE,MAAM,CAAC,GAAG;iBAClB,CAAC,CAAC;gBACH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,sCAAU,GAAV,UAAW,EAAyD;YAAvD,cAAI,EAAE,kBAAM;QACvB,IAAI,4DAAW,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IACE,CAAC,0DAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC;gBACjE,MAAM,CAAC,MAAM,KAAK,CAAC,EACnB;gBACA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;SACF;IACH,CAAC;IAED,6CAAiB,GAAjB,UAAkB,EAIe;YAH/B,gBAAK,EACL,sBAAQ,EACR,kBAAM;QAEN,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;QACvB,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,uCAAW,GAAX,UAAY,MAAc,EAAE,KAAoB;QAC9C,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,SAAE,MAAM,UAAE,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,KAAK,EAAE,WAAW;YAClB,KAAK,EAAE,2DAAU,CAAC,IAAI,IAAI,EAAE,CAAC;YAC7B,GAAG,EAAE,yDAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;YACzB,KAAK,EAAE,MAAM,CAAC,GAAG;YACjB,SAAS,EAAE,IAAI;YACf,SAAS,EAAE;gBACT,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IArID;QADC,+DAAS,CAAC,cAAc,CAAC;kCACZ,yDAAW;2DAAM;IAFpB,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,eAAe,EAAE,qEAAuB,CAAC,MAAM;;;SAGhD,CAAC;yCA6E2B,mEAAQ,EAAyB,sEAAa;OA5E9D,iBAAiB,CAwI7B;IAAD,wBAAC;CAAA;AAxI6B;;;;;;;;;;;;;;;;;;;;;;;AC/C9B,sBAAsB,yBAAyB,OAAO,iBAAiB,kCAAkC,sBAAsB,OAAO,C;;;;;;;;;;;ACAtI,+QAA+Q,mHAAmH,qBAAqB,kEAAkE,2BAA2B,m8BAAm8B,qDAAqD,quEAAquE,0hDAA0hD,sH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKptK;AAUL;AACa;AACuB;AAM5B;AACiC;AAE3D,IAAM,MAAM,GAAQ;IAClB,GAAG,EAAE;QACH,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CACF,CAAC;AAQF;IAkFE,gCAAoB,KAAe,EAAU,cAA4B;QAAzE,iBAA8E;QAA1D,UAAK,GAAL,KAAK,CAAU;QAAU,mBAAc,GAAd,cAAc,CAAc;QA9EzE,SAAI,GAAiB,6DAAY,CAAC,KAAK,CAAC;QAExC,iBAAY,GAAG,6DAAY,CAAC;QAE5B,aAAQ,GAAS,IAAI,IAAI,EAAE,CAAC;QAO5B,YAAO,GAA0B;YAC/B;gBACE,KAAK,EAAE,oCAAoC;gBAC3C,OAAO,EAAE,UAAC,EAAmC;wBAAjC,gBAAK;oBACf,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,mCAAmC;gBAC1C,OAAO,EAAE,UAAC,EAAmC;wBAAjC,gBAAK;oBACf,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,KAAK,KAAK,EAAhB,CAAgB,CAAC,CAAC;oBAC7D,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBACrC,CAAC;aACF;SACF,CAAC;QAEF,YAAO,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAEtC,WAAM,GAAoB;QACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA2CI;SACJ,CAAC;QAEF,oBAAe,GAAY,IAAI,CAAC;IAE6C,CAAC;IAC9E,yCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,IAAI;YACnD,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,iBAAO;gBAClB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,OAAO,CAAC,CAAC;gBAC5B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,KAAK,EAAC,OAAO,CAAC,YAAY,GAAC,qBAAqB,GAAC,OAAO,CAAC,gBAAgB;oBACzE,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;oBAEvC,KAAK,EAAE,MAAM,CAAC,GAAG;iBAClB,CAAC,CAAC;gBAEH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;IAED,2CAAU,GAAV,UAAW,EAAyD;YAAvD,cAAI,EAAE,kBAAM;QACvB,IAAI,4DAAW,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IACE,CAAC,0DAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC;gBACjE,MAAM,CAAC,MAAM,KAAK,CAAC,EACnB;gBACA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;SACF;IACH,CAAC;IAED,kDAAiB,GAAjB,UAAkB,EAIe;YAH/B,gBAAK,EACL,sBAAQ,EACR,kBAAM;QAEN,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;QACvB,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,4CAAW,GAAX,UAAY,MAAc,EAAE,KAAoB;QAC9C,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,SAAE,MAAM,UAAE,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,KAAK,EAAE,WAAW;YAClB,KAAK,EAAE,2DAAU,CAAC,IAAI,IAAI,EAAE,CAAC;YAC7B,GAAG,EAAE,yDAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;YACzB,KAAK,EAAE,MAAM,CAAC,GAAG;YACjB,SAAS,EAAE,IAAI;YACf,SAAS,EAAE;gBACT,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IA9ID;QADC,+DAAS,CAAC,cAAc,CAAC;kCACZ,yDAAW;gEAAM;IAFpB,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,eAAe,EAAE,qEAAuB,CAAC,MAAM;;;SAGhD,CAAC;yCAmF2B,mEAAQ,EAAyB,sEAAa;OAlF9D,sBAAsB,CAiJlC;IAAD,6BAAC;CAAA;AAjJkC;;;;;;;;;;;;AC/CnC,qEAAqE,aAAa,wcAAwc,0BAA0B,mRAAmR,gBAAgB,sQAAsQ,qBAAqB,0SAA0S,0BAA0B,kPAAkP,qBAAqB,iMAAiM,2BAA2B,wM;;;;;;;;;;;ACAz5D,6X;;;;;;;;;;;ACAA,mB;;;;;;;;;;;ACAA,8IAA8I,0CAA0C,+BAA+B,4CAA4C,0CAA0C,wCAAwC,GAAG,wCAAwC,mCAAmC,cAAc,0RAA0R,aAAa,ymBAAymB,aAAa,6BAA6B,eAAe,6BAA6B,cAAc,6BAA6B,qBAAqB,uxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl5C;AACf;AACG;AAED;AACE;AACW;AACM;AAQ3E;IAgBE,wBAAmB,MAAiB,EAAQ,YAAyB,EAC3D,MAAc,EAAU,KACjB,EAAS,aAA2B,EAAS,cAA4B;QAFvE,WAAM,GAAN,MAAM,CAAW;QAAQ,iBAAY,GAAZ,YAAY,CAAa;QAC3D,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CACtB;QAAS,kBAAa,GAAb,aAAa,CAAc;QAAS,mBAAc,GAAd,cAAc,CAAc;QAf1F,kBAAa,GAAG,KAAK,CAAC;QACtB,UAAK,GAAQ,EAAE,CAAC;QAQhB,qBAAgB,GAAC,KAAK,CAAC;IAMuE,CAAC;IAE/F,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,oCAAW,GAAX;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,oCAAW,GAAX;QAAA,iBA8BC;QA7BC,IAAI,CAAC,WAAW,GAAC,EAAE;QACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;YAChC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY;YACjD,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,YAAY;YACvD,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAC/B,KAAI,CAAC,WAAW,GAAC,IAAI,CAAC;YACtB,KAAI,CAAC,WAAW,GAAC,EAAE;YACnB,IAAG,OAAO,EAAC;gBACT,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;oBACzD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC1B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBAC5C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAClD,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;gBACtC,CAAC,EACD,eAAK;oBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC/B,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;oBAC9E,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC,EACD,eAAK;oBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC/B,CAAC,CAAC,CAAC;aACJ;YACD,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAc,GAAd,UAAe,SAAS;QAAxB,iBAUC;QATC,IAAG,SAAS,EAAC;YACX,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;YACrC,CAAC,EACC,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,uCAAc,GAAd,UAAe,IAAI;QACjB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;QAChC,IAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;YAChD,IAAI,CAAC,WAAW,GAAC,iBAAiB;SACnC;QACD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,0CAAiB,GAAjB,UAAkB,IAAI;QAAtB,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE;YAChD,IAAI,EAAE;gBACJ,OAAO,EAAC,IAAI;aACb;SACF,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAG,MAAM;gBACT,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAwB,GAAxB,UAAyB,MAAM;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;YACxC,IAAI,EAAE;gBACJ,MAAM,EAAC,MAAM;aACd;SACF,CAAC,CAAC;IACL,CAAC;IAED,sCAAa,GAAb,UAAc,SAAS;QAAvB,iBAmBC;QAlBC,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,SAAS,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACtD,UAAC,IAAI;YACL,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;QACpC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,MAAM,GAAC,KAAK,CAAC,OAAO,CAAC;YAC1B,KAAK,CAAC,oBAAoB,GAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACpD,CAAC,EACD;YACE,KAAI,CAAC,aAAa,GAAG,IAAI;YACzB,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAK,CAAC,+BAA+B,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,qCAAY,GAAZ,UAAa,MAAM;QAAnB,iBASC;QARC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,kCAAS,GAAT,UAAU,SAAS,EAAC,YAAY,EAAC,MAAM;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAC,SAAS,EAAC,WAAW,EAAC,YAAY,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,CAAC,CAAC,CAAC;QACrG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAzHwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;qDAAC;IAftC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAiB2B,2DAAS,EAAsB,kEAAW;YACnD,sDAAM;YACrB,8DAAc,EAAwB,oEAAY,EAAwB,sEAAa;OAlB/E,cAAc,CAyI1B;IAAD,qBAAC;CAAA;AAzI0B;AAgK3B;IACE,uBAAmB,SAAsC,EACvB,IAAgB;QAD/B,cAAS,GAAT,SAAS,CAA6B;QACvB,SAAI,GAAJ,IAAI,CAAY;IAElD,CAAC;IACD,qCAAa,GAAb,UAAc,MAAM;QAClB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAPU,aAAa;QAJzB,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;;SAEvC,CAAC;QAGG,uEAAM,CAAC,iEAAe,CAAC;yCADI,8DAAY;OAD/B,aAAa,CAQzB;IAAD,oBAAC;CAAA;AARyB;AAc1B;IAME,iCAAmB,YAAyB,EAAQ,SAAsC,EACxD,IAAgB;QAD/B,iBAAY,GAAZ,YAAY,CAAa;QAAQ,cAAS,GAAT,SAAS,CAA6B;QACxD,SAAI,GAAJ,IAAI,CAAY;IAClD,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/C,CAAC;IACD,sDAAoB,GAApB,UAAqB,MAAM;QACzB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,wDAAsB,GAAtB,UAAuB,MAAM;QAA7B,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,KAAI,CAAC,kBAAkB,GAAE,IAAI,CAAC,UAAU,CAAC;YACzC,KAAI,CAAC,gBAAgB,GAAK,CAAC,kBAAkB,EAAE,QAAQ,EAAE,kBAAkB,EAAE,MAAM,EAAG,aAAa,CAAC,CAAC;YACrG,IAAM,YAAY,GAAwB,IAAI,CAAC,UAAU,CAAC;YAC1D,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAqB,YAAY,CAAC,CAAC;YAC3E,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;QAC7C,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IA1BwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;8DAAC;IAJtC,uBAAuB;QAJnC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;SAEpC,CAAC;QAQG,uEAAM,CAAC,iEAAe,CAAC;yCADO,kEAAW,EAAmB,8DAAY;OANhE,uBAAuB,CA+BnC;IAAD,8BAAC;CAAA;AA/BmC;;;;;;;;;;;;AC7LpC,mB;;;;;;;;;;;ACAA,mTAAmT,YAAY,2CAA2C,WAAW,05FAA05F,OAAO,ooB;;;;;;;;;;;;;;;;;;;;;;;;;ACAhsG;AAC7B;AAOzD;IAeE,iCAAmB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAb5C,eAAU,GAAG,IAAI,CAAC;QAClB,qBAAgB,GAAG;YACjB,IAAI,EAAC,CAAC;YACN,KAAK,EAAC,CAAC;YACP,WAAW,EAAC,CAAC;YACb,OAAO,EAAC,CAAC;YACT,KAAK,EAAC,CAAC;SACR;QAID,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAG9B,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAClE,CAAC;IAGD,gDAAc,GAAd;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAC,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC;QACnF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACzB,CAAC;IAED,yCAAO,GAAP,UAAQ,MAAM;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAcC;QAbC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAC5D,IAAM,0BAA0B,GAAG,iCAAiC;QACpE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAC9D,KAAI,CAAC,gBAAgB,CAAC,KAAK,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAC9D,KAAI,CAAC,gBAAgB,CAAC,WAAW,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC;YAC5E,KAAI,CAAC,gBAAgB,CAAC,OAAO,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;YACvE,KAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAE,KAAI,CAAC,gBAAgB,CAAC,KAAK,GAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,GAAC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;QACzJ,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAhCD;QADC,2DAAK,EAAE;;0EACc;IAEtB;QADC,4DAAM,EAAE;;+DACuB;IAbrB,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAgBiC,kEAAW;OAfjC,uBAAuB,CA6CnC;IAAD,8BAAC;CAAA;AA7CmC;;;;;;;;;;;;ACRpC,oCAAoC,sBAAsB,wBAAwB,8CAA8C,qFAAqF,oFAAoF,iFAAiF,KAAK,C;;;;;;;;;;;ACA/X,o6CAAo6C,6CAA6C,0jBAA0jB,gDAAgD,iwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzgE;AACO;AAEJ;AACI;AAOzD;IAME,wBAAoB,KAAqB,EAAS,GAAe,EAAU,aAA2B,EAAS,MAAc;QAAzG,UAAK,GAAL,KAAK,CAAgB;QAAS,QAAG,GAAH,GAAG,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QAL7H,UAAK,GAAQ,EAAE,CAAC;QAChB,aAAQ,GAAG,aAAa,CAAC;QACzB,aAAQ,GAAG,QAAQ,CAAC;IAG6G,CAAC;IAElI,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,kBAAkB,CAAC;IAC1F,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,GAAG,CAAC,KAAK,CACZ,IAAI,CAAC,KAAK,CAAC,KAAK,EAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,CACpB;aACE,SAAS,CACR,WAAC;YACC,IAAI,CAAC,CAAC,KAAK,EAAE;gBACZ,kBAAkB;gBACjB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBACrC,IAAG,KAAI,CAAC,WAAW,IAAI,kBAAkB,EAAC;oBACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,QAAQ,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC,CAAC;iBACvF;qBAAM;oBACL,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;iBAC7C;gBAED,uDAAuD;gBACvD,iDAAiD;aAClD;QACH,CAAC,EACD,aAAG;YACD,KAAK,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACT,CAAC;IApCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAO2B,8DAAc,EAAc,gEAAU,EAAyB,oEAAY,EAAiB,sDAAM;OANlH,cAAc,CAqC1B;IAAD,qBAAC;CAAA;AArC0B;;;;;;;;;;;;ACX3B,iDAAiD,sBAAsB,0BAA0B,OAAO,C;;;;;;;;;;;ACAxG,4YAA4Y,uDAAuD,+HAA+H,kCAAkC,GAAG,0DAA0D,mJAAmJ,eAAe,8ZAA8Z,yDAAyD,oIAAoI,mCAAmC,GAAG,2DAA2D,2KAA2K,uBAAuB,oSAAoS,iDAAiD,oIAAoI,+BAA+B,GAAG,uDAAuD,6JAA6J,eAAe,2Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj1E;AACvB;AACI;AACD;AACjB;AACE;AAM3C;IAaE,WAAW;IACX,+BAA+B;IAE/B,wBAAmB,YAAyB,EAAS,MAAc,EAC1D,cAA8B,EAAS,cAA4B;QADzD,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAC1D,mBAAc,GAAd,cAAc,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAc;QAV5E,oBAAe,GAAG,IAAI,0DAAW,EAAE,CAAC;QACpC,qBAAgB,GAAG,IAAI,0DAAW,EAAE,CAAC;QACrC,iBAAY,GAAG,IAAI,0DAAW,EAAE,CAAC;IAUjC,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAgCC;QA/BC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC5C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,mBAAS;YACnD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,SAAS,CAAC,CAAC;YACxC,KAAI,CAAC,GAAG,GAAC,SAAS,CAAC;YACnB,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACtD,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;YACtC,CAAC,EACC,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;YACpC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,sBAAY;YACvD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,YAAY,CAAC,CAAC;YAC3C,KAAI,CAAC,YAAY,GAAC,YAAY,CAAC;YAC/B,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBAClE,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,CAAC,EACC,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;IAEN,CAAC;IAED,iCAAiC;IACjC,oEAAoE;IACpE,uCAAuC;IACvC,OAAO;IACP,iBAAiB;IACjB,4BAA4B;IAC5B,uCAAuC;IACvC,UAAU;IACV,IAAI;IAEJ,iCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAG,IAAI,CAAC,SAAS,IAAE,WAAW,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAC,IAAI,CAAC,GAAG,EAAC,WAAW,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC7C;aACI,IAAG,IAAI,CAAC,SAAS,IAAE,OAAO,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAC,IAAI,CAAC,GAAG,EAAC,WAAW,EAAC,IAAI,CAAC,YAAY,EAAC,OAAO,CAAC,CAAC,CAAC;YAC1F,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC5C;aACI,IAAG,IAAI,CAAC,SAAS,IAAE,QAAQ,EAAE;YAC/B,sDAAsD;YACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAC,IAAI,CAAC,GAAG,EAAC,WAAW,EAAC,IAAI,CAAC,YAAY,EAAC,QAAQ,CAAC,CAAC,CAAC;YAC3F,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC5C,mBAAmB;YACnB,iKAAiK;YACjK,WAAW;SAEb;IACJ,CAAC;IAzED;QADC,2DAAK,EAAE;;qDACW;IAXR,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAiBiC,kEAAW,EAAiB,sDAAM;YACzC,qEAAa,EAAwB,sEAAa;OAjBjE,cAAc,CAqF1B;IAAD,qBAAC;CAAA;AArF0B;;;;;;;;;;;;ACX3B,mB;;;;;;;;;;;ACAA,wQAAwQ,aAAa,ulBAAulB,eAAe,2BAA2B,iBAAiB,2BAA2B,eAAe,2BAA2B,wBAAwB,2BAA2B,kBAAkB,2BAA2B,gBAAgB,2BAA2B,mBAAmB,2BAA2B,cAAc,2BAA2B,gBAAgB,2BAA2B,gBAAgB,mG;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvtC;AACI;AACa;AACT;AAO1D;IAIE,yBAAmB,YAA0B,EAAS,MAAc,EAAU,KAC9D,EAAS,cAA4B;QADlC,iBAAY,GAAZ,YAAY,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CACnE;QAAS,mBAAc,GAAd,cAAc,CAAc;QAFrD,gBAAW,GAAE,EAAE,CAAC;IAEyC,CAAC;IAEvD,kCAAQ,GAAR;QACC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,qCAAW,GAAX;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEH,sCAAY,GAAZ;QAAA,iBAqBC;QApBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;YAChC,IAAI,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY;YAC5E,IAAI,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY;YACrF,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY;YACnE,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAC/B,KAAI,CAAC,WAAW,GAAG,IAAI;YACvB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,OAAO,EAAE;gBACX,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;oBACrD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC,CAAC;aACH;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,SAAS,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oBACzF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC,CAAC;aACH;QAGH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAc,GAAd,UAAe,IAAI;QACjB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACpC,IAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC;YACnD,IAAI,CAAC,WAAW,GAAC,iBAAiB;SACnC;QACD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IA5CU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAKkC,kEAAW,EAAiB,sDAAM;YAClE,8DAAc,EAAwB,sEAAa;OAL1C,eAAe,CA8C3B;IAAD,sBAAC;CAAA;AA9C2B;;;;;;;;;;;;ACV5B,mB;;;;;;;;;;;ACAA,oVAAoV,YAAY,iCAAiC,WAAW,4kBAA4kB,eAAe,4yB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr7B;AACU;AACL;AAOvD;IAYE,8BAAmB,YAA0B,EAAS,gBAAkC;QAArE,iBAAY,GAAZ,YAAY,CAAc;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAVxF,eAAU,GAAG,mBAAmB,CAAC;QACjC,cAAS,GAAG,6HAA6H,CAAC;QAI1I,gBAAW,GAAC;YACV,SAAS,EAAC,EAAE;YACZ,YAAY,EAAC,EAAE;SAChB;IAE2F,CAAC;IAE7F,uCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC5C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACtE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC;YACnC,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IA9BU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAakC,kEAAW,EAA4B,iEAAe;OAZ7E,oBAAoB,CAgChC;IAAD,2BAAC;CAAA;AAhCgC;;;;;;;;;;;;ACTjC,mB;;;;;;;;;;;ACAA,wUAAwU,YAAY,iCAAiC,WAAW,gwCAAgwC,eAAe,mmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7lD;AACU;AACL;AAQvD;IAcE,0BAAmB,YAA0B,EAAS,gBAAkC;QAArE,iBAAY,GAAZ,YAAY,CAAc;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAZxF,eAAU,GAAG,eAAe,CAAC;QAC7B,cAAS,GAAG,6HAA6H,CAAC;QAI1I,YAAO,GAAC;YACN,QAAQ,EAAC,EAAE;YACX,YAAY,EAAC,EAAE;YACf,SAAS,EAAC,EAAE;YACZ,aAAa;YACb,aAAa;SACd;IAC2F,CAAC;IAE7F,mCAAQ,GAAR;QAAA,iBASC;QAPC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC5C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,mCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC9D,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAC,IAAI,CAAC,CAAC;YAC1C,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAlCU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAekC,kEAAW,EAA4B,iEAAe;OAd7E,gBAAgB,CAoC5B;IAAD,uBAAC;CAAA;AApC4B;;;;;;;;;;;;ACV7B,mB;;;;;;;;;;;ACAA,oVAAoV,YAAY,mCAAmC,WAAW,0pCAA0pC,GAAG,0lFAA0lF,eAAe,ihB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlmI;AACM;AACI;AAO5D;IAkBE,2BAAmB,YAA0B,EAAQ,gBAAkC;QAApE,iBAAY,GAAZ,YAAY,CAAc;QAAQ,qBAAgB,GAAhB,gBAAgB,CAAkB;QAhBvF,eAAU,GAAG,gBAAgB,CAAC;QAC9B,cAAS,GAAG,6HAA6H,CAAC;QAE1I,aAAQ,GAAC;YACP,SAAS,EAAC,EAAE;YACZ,KAAK,EAAC,EAAE;YACR,WAAW,EAAC,EAAE;YACd,GAAG,EAAC,EAAE;YACN,MAAM,EAAC,CAAC;YACR,IAAI,EAAC,CAAC;YACN,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;YACX,YAAY,EAAC,EAAE;YACf,SAAS,EAAC,EAAE;SACb;IAE0F,CAAC;IAE5F,oCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC5C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAc,GAAd,UAAe,WAAW;QACxB,WAAW,EAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,GAAC,CAAC,EAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,GAAC,CAAC,CAAC;IACxD,CAAC;IAED,oCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAChE,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;YAC5B,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAxCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAmBkC,kEAAW,EAA2B,iEAAe;OAlB5E,iBAAiB,CA2C7B;IAAD,wBAAC;CAAA;AA3C6B;;;;;;;;;;;;ACT9B,wCAAwC,2CAA2C,KAAK,2BAA2B,gCAAgC,uBAAuB,2FAA2F,oFAAoF,iFAAiF,SAAS,S;;;;;;;;;;;ACAnb,iVAAiV,WAAW,gDAAgD,UAAU,2iG;;;;;;;;;;;;;;;;;;;;;ACApW;AAQlD;IALA;QAOE,UAAK,GAAQ,EAAE,CAAC;QAChB,eAAU,GAAc,EAAE,CAAC;QAC3B,cAAS,GAAW,KAAK,CAAC;QAC1B,kBAAa,GAAW,KAAK,CAAC;QAE9B,cAAS,GAAG,UAAU,CAAC;QACvB,aAAQ,GAAG,6HAA6H,CAAC;QACzI,mBAAc,GAAG;YACf,MAAM,EAAE,aAAa;YACrB,UAAU,EAAG,kBAAkB;YAC/B,UAAU,EAAG,iBAAiB;YAC9B,KAAK,EAAG,cAAc;YACtB,aAAa,EAAE,gBAAgB;YAC/B,kBAAkB,EAAG,CAAC,MAAM,EAAC,mBAAmB,EAAC,QAAQ,CAAC;YAC1D,aAAa,EAAE,gBAAgB;YAC/B,UAAU,EAAE,aAAa;YACzB,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,UAAU;YACnB,aAAa,EAAE,kBAAkB;SAClC;IAiBH,CAAC;IAfC,0CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAC,CAAC,IAAI,CAAC,SAAS;IAChC,CAAC;IAED,6CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAG,UAAU,IAAE,KAAK;YACnB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;;YAEvB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;IAC7B,CAAC;IAtCU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;OACW,uBAAuB,CAuCnC;IAAD,8BAAC;CAAA;AAvCmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRO;AACkB;AAClB;AAK3C;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,mBAAc,GAAE,yCAAc,CAAC,SAAS,GAAC,0BAA0B,CAAC;QACpE,iBAAY,GAAE,yCAAc,CAAC,SAAS,GAAC,wBAAwB,CAAC;QAChE,gBAAW,GAAE,yCAAc,CAAC,SAAS,GAAC,uBAAuB,CAAC;QAC9D,oBAAe,GAAE,yCAAc,CAAC,SAAS,GAAC,2BAA2B,CAAC;IAL9B,CAAC;IAQzC,yCAAe,GAAf,UAAgB,UAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IACzD,CAAC;IAED,uCAAa,GAAb,UAAc,QAAQ;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,sCAAY,GAAZ,UAAa,OAAO;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,0CAAgB,GAAhB,UAAiB,WAAW;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;IAC3D,CAAC;IAxBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,eAAe,CA0B3B;IAAD,sBAAC;CAAA;AA1B2B;;;;;;;;;;;;ACP5B,mB;;;;;;;;;;;ACAA,wUAAwU,WAAW,iCAAiC,UAAU,2iD;;;;;;;;;;;;;;;;;;;;;;;;;ACA5U;AACM;AAQxD;IAWE,6BAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QATrD,cAAS,GAAG,kBAAkB,CAAC;QAC/B,aAAQ,GAAG,6HAA6H,CAAC;QAEzI,eAAU,GAAC;YACT,WAAW,EAAC,EAAE;YACd,OAAO,EAAC,EAAE;YACV,OAAO,EAAC,EAAE;SACX;IAEwD,CAAC;IAE1D,sCAAQ,GAAR;IACA,CAAC;IAED,sCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACpE,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAC,IAAI,CAAC,CAAC;YAC1C,KAAK,CAAC,gCAAgC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAtBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAYsC,iEAAe;OAX1C,mBAAmB,CAwB/B;IAAD,0BAAC;CAAA;AAxB+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACToB;AACX;AACI;AACI;AAKjD;IAEE,uBAAoB,aAA2B,EAAU,MAAc;QAAnD,kBAAa,GAAb,aAAa,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IACvE,CAAC;IAED,mCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QAArE,iBAuCG;QArCD,IAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;QAElD;;;;;;;;;;;;;aAaK;QAGF,OAAO,IAAI,+CAAU,CAAU,UAAC,QAAQ;YACtC,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,iBAAO;gBAC7C,IAAG,OAAO,EAAE;oBACV,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;oBACnC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACrB;qBAAM;oBACL,KAAI,CAAC,MAAM,CAAC,aAAa,CACvB,KAAI,CAAC,MAAM,CAAC,aAAa,CACvB,CAAC,OAAO,CAAC,EAAE;wBACT,WAAW,EAAE;4BACX,WAAW,EAAC,WAAW;yBACxB;qBACF,CACF,CACF,CAAC;oBACF,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACtB;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IA5CQ,aAAa;QADzB,gEAAU,EAAE;yCAGwB,2DAAY,EAAkB,sDAAM;OAF5D,aAAa,CA+CzB;IAAD,oBAAC;CAAA;AA/CyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRe;AACoB;AAElB;AAK3C;IAEE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGpC,UAAK,GAAG,OAAO;IADf,CAAC;IAED,0BAAK,GAAL,UAAM,KAAa,EAAE,QAAgB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yCAAc,CAAC,SAAS,GAAC,cAAc,EAAE;YAC7D,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IACL,CAAC;IAED,4BAAO,GAAP;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,OAAO,EAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAc,CAAC,SAAS,GAAC,gBAAgB,EAAC;YAC7D,OAAO,EAAC,OAAO;SAChB,CAAC;IAEJ,CAAC;IAnBU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,UAAU,CAuBtB;IAAD,iBAAC;CAAA;AAvBsB;;;;;;;;;;;;;;;;;;;;;;;;;;ACR0C;AAC1B;AAKvC;IAUE;QARA,iBAAY,GAAC,IAAI,0DAAY,EAAO,CAAC;QACrC,sBAAiB,GAAC,IAAI,0DAAY,EAAO,CAAC;QAC1C,kBAAa,GAAC,IAAI,0DAAY,EAAO,CAAC;QACtC,sBAAiB,GAAG,IAAI,0DAAY,EAAO,CAAC;QACpC,qBAAgB,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QACrD,kBAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IAGrC,CAAC;IAEjB,wCAAgB,GAAhB,UAAiB,cAAc;QAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC;IACxC,CAAC;IAED,6CAAqB,GAArB,UAAsB,aAAa;QACjC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC;IAC5C,CAAC;IAED,yCAAiB,GAAjB,UAAkB,aAAa;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;IACxC,CAAC;IAED,sCAAc,GAAd,UAAe,IAAI;QACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,+CAAuB,GAAvB,UAAwB,GAAG;QACzB,IAAI,CAAC,oBAAoB,GAAG,GAAG;IACjC,CAAC;IAED,wCAAgB,GAAhB,UAAiB,OAAe;QAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;IACrC,CAAC;IAhCD;QADC,4DAAM,EAAE;;uDAC4B;IAF1B,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CAmCzB;IAAD,oBAAC;CAAA;AAnCyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AACyC;AACpC;AACF;AACK;AACN;AAE3C,IAAM,KAAK,GAAG,OAAO,CAAC;AAKtB;IAEE,sBAAoB,IAAgB,EAAU,cAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAc;QAD1E,qBAAgB,GAAG,yCAAc,CAAC,SAAS,GAAC,sBAAsB,CAAC;IAEnE,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAa;QACpB,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,mCAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,gBAAkB,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,gBAAkB,EAAC;YAC9C,OAAO,EAAC,OAAO;SAChB,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAClE,CAAC,CAAC;IACJ,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAuBC;QAtBC,OAAO,IAAI,+CAAU,CAAC,kBAAQ;YAC5B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC;YACvC,IAAG,KAAK,EAAE;gBACR,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;oBACrC,IAAG,IAAI,CAAC,KAAK,IAAI,CAAC,EAAC;wBACnB,iBAAiB;wBACjB,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;wBACzC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACrB;yBAAM;wBACL,KAAK,CAAC,mBAAmB,CAAC,CAAC;wBAC3B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBACtB;gBACH,CAAC,EAAE,eAAK;oBACN,wCAAwC;oBACxC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,CAAC,CAAC;aACH;iBAAM;gBACN,8BAA8B;gBAC9B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrB;QACH,CAAC,CAAC;IAEJ,CAAC;IAzCU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU,EAAyB,6DAAa;OAF/D,YAAY,CA0CxB;IAAD,mBAAC;CAAA;AA1CwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZkB;AACuC;AACpC;AACF;AACD;AAK3C;IAEE,qBAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADnC,UAAK,GAAG,OAAO,CAAC;QAGhB,kBAAa,GAAG,yCAAc,CAAC,SAAS,GAAG,kBAAkB,CAAC;QAC9D,oBAAe,GAAG,yCAAc,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACjE,gBAAW,GAAG,yCAAc,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAC1D,eAAU,GAAG,yCAAc,CAAC,SAAS,GAAG,eAAe,CAAC;QACxD,eAAU,GAAG,yCAAc,CAAC,SAAS,GAAG,8BAA8B,CAAC;QACvE,uBAAkB,GAAG,yCAAc,CAAC,SAAS,GAAG,yBAAyB,CAAC;QAC1E,oBAAe,GAAG,yCAAc,CAAC,SAAS,GAAG,uBAAuB,CAAC;QACrE,qBAAgB,GAAG,yCAAc,CAAC,SAAS,GAAG,qBAAqB,CAAC;QACpE,sBAAiB,GAAG,yCAAc,CAAC,SAAS,GAAG,qBAAqB,CAAC;IAV9B,CAAC;IAYxC,8BAAQ,GAAR,UAAS,KAAK;QACZ,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,WAAW,6BAAwB,KAAK,CAAC,YAAY,MAAG,CAAC,CAAC;QAC9E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,WAAW,6BAAwB,KAAK,CAAC,YAAY,MAAG,CAAC;aACnF,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAED,kCAAY,GAAZ,UAAa,OAAO;QAClB,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,WAAW,yBAAoB,OAAO,MAAG,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,WAAW,wBAAmB,OAAS,CAAC;aAClE,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAED,kCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,WAAa,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,WAAa,CAAC;aACxC,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IACD,gCAAU,GAAV;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,aAAe,CAAC;aAC1C,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IACD,oCAAc,GAAd,UAAe,EAAE;QACf,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,0BAAqB,EAAI,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,0BAAqB,EAAI,CAAC;aACjE,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IACD,iCAAW,GAAX,UAAY,KAAK;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,eAAe,0BAAqB,KAAO,CAAC;aACtE,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IACD,iCAAW,GAAX,UAAY,SAAS,EAAE,YAAY;QACjC,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,UAAU,6BAAwB,YAAc,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6GAA2G,SAAS,kBAAY,YAAY,OAAG,CAAC;aAClK,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAED,sCAAgB,GAAhB,UAAiB,OAAO;QACtB,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,UAAU,wBAAmB,OAAS,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,UAAU,wBAAmB,OAAS,CAAC;aACjE,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAED,kCAAY,GAAZ,UAAa,OAAO;QAClB,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,WAAW,wBAAmB,OAAS,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,WAAW,yBAAoB,OAAO,MAAG,CAAC;aACpE,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAED,oCAAc,GAAd,UAAe,OAAO;QACpB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/E,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,SAAS,GAAG;YACd,gBAAgB,EAAE,OAAO,CAAC,cAAc;YACxC,SAAS,EAAE,OAAO,CAAC,OAAO;YAC1B,QAAQ,EAAE,OAAO,CAAC,MAAM;SACzB,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACnE,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IACD,2CAAqB,GAArB,UAAsB,MAAM;QAC1B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAK,IAAI,CAAC,kBAAkB,uBAAkB,MAAQ,CAAC,CAAC;QAC9E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,kBAAkB,uBAAkB,MAAQ,CAAC;aACvE,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IACD,sCAAgB,GAAhB,UAAiB,SAAS;QACxB,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,eAAe,2BAAsB,SAAS,MAAG,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,eAAe,2BAAsB,SAAS,MAAG,CAAC;aAC5E,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAED,oCAAc,GAAd,UAAe,gBAAgB;QAC7B,IAAM,OAAO,GAAG;YACZ,UAAU,EAAC,gBAAgB;SAC9B;QACD,OAAO,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,iBAAmB,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,IAAI,CAAC,iBAAmB,EAAC,OAAO,CAAC;aACvD,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAED,yCAAmB,GAAnB,UAAoB,UAAU,EAAE,aAAa,EAAE,OAAO;QACpD,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/E,IAAI,YAAY,GAAG;YACjB,YAAY,EAAE,UAAU;YACxB,eAAe,EAAE,aAAa;YAC9B,SAAS,EAAE,OAAO;SACnB;QACD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,YAAY,EAAE;YACzD,OAAO,EAAE,OAAO;SACjB,CAAC;aACC,IAAI,CAAC,iEAAU,CAAC,UAAC,KAAwB,IAAK,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC/D,CAAC,CAAC;IACP,CAAC;IAxHU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGyB,+DAAU;OAFxB,WAAW,CAyHvB;IAAD,kBAAC;CAAA;AAzHuB;;;;;;;;;;;;ACTxB,mB;;;;;;;;;;;ACAA,48E;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAOzC;IAEE,gCAAoB,SAAmB;QAAnB,cAAS,GAAT,SAAS,CAAU;IAAI,CAAC;IAE5C,yCAAQ,GAAR;IACA,CAAC;IACD,qCAAI,GAAJ;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IARU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAG+B,wDAAQ;OAF5B,sBAAsB,CAUlC;IAAD,6BAAC;CAAA;AAVkC;;;;;;;;;;;;ACRnC,2BAA2B,wBAAwB,KAAK,C;;;;;;;;;;;ACAxD,yLAAyL,oBAAoB,oBAAoB,kBAAkB,gBAAgB,qBAAqB,gBAAgB,qBAAqB,gBAAgB,mBAAmB,w1I;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9S;AACK;AACE;AACA;AAOzD;IAmBE,8BAAoB,cACJ,EAAQ,aAA4B,EAAS,MAAc,EAAS,cAA4B;QAD5F,mBAAc,GAAd,cAAc,CAClB;QAAQ,kBAAa,GAAb,aAAa,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAc;QAlBhH,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAC,IAAI,CAAC;QAEd,oBAAe,GAAE,CAAC,CAAC;QACnB,mBAAc,GAAC;YACb,OAAO,EAAC,KAAK;YACb,QAAQ,EAAC,KAAK;YACd,IAAI,EAAC,KAAK;YACV,KAAK,EAAC,KAAK;SACZ,CAAC;QACF,kBAAa,GAAG;YACd,IAAI,EAAC,EAAE;YACP,EAAE,EAAC,EAAE;YACL,KAAK,EAAC,EAAE;YACR,KAAK,EAAC,EAAE;SACT;IAGoH,CAAC;IAEtH,uCAAQ,GAAR;QAAA,iBAqBC;QApBC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YAC1C,IAAG,IAAI,EAAC;gBACN,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,SAAS;YAClD,IAAG,SAAS,EAAE;gBACV,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE3B,CAAC;IAED,+CAAgB,GAAhB;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,QAAQ;YACnD,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;YAClD,KAAI,CAAC,aAAa,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9C,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;YACrD,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAED,gDAAiB,GAAjB;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,KAAK;YACpD,IAAG,KAAK,IAAE,QAAQ,EAAE;gBAClB,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;aACzC;iBAAM,IAAG,KAAK,IAAE,OAAO,EAAE;gBACxB,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAC,IAAI,CAAC,CAAC;aACpC;iBAAM,IAAG,KAAK,IAAE,WAAW,EAAE;gBAC5B,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC/B;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACzB;QACH,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,wCAAS,GAAT,UAAU,IAAI;QAAd,iBAsCC;QArCC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAG,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,QAAQ,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;gBAC1C,IAAG,IAAI,EAAC;oBACN,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;oBAC/C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC1B,yBAAyB;iBACzB;qBAAM;oBACL,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,KAAK,CAAC,oBAAoB,CAAC,CAAC;oBAC5B,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBACpC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAC;YACH,IAAG,IAAI,IAAI,OAAO,EAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAC,IAAI,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;aACzC;SACF;aAAM,IAAG,IAAI,IAAI,WAAW,EAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9B,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;gBAC/C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,EAAC,CAAC,CAAC;SAEL;aAAM;YACL,UAAU,CAAC;gBACT,KAAI,CAAC,eAAe,GAAC,EAAE,CAAC;gBACxB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,EAAC,CAAC,CAAC;SACL;IACH,CAAC;IAED,2CAAY,GAAZ,UAAa,OAAa,EAAC,QAAc,EAAC,IAAU,EAAC,KAAW;QAAnD,yCAAa;QAAC,2CAAc;QAAC,mCAAU;QAAC,qCAAW;QAC9D,IAAI,CAAC,eAAe,GAAG,KAAK,EAAC,CAAC,GAAG,EAAC,EAAC,IAAI,EAAC,CAAC,EAAE,EAAC,SAAQ,EAAC,CAAC,EAAE,EAAC,CAAC,OAAO,EAAC,CAAC,EAAE,EAAC,EAAC,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,OAAO,GAAC,OAAO,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,KAAK,GAAC,KAAK,CAAC;IAClC,CAAC;IAED,qCAAM,GAAN;QACE,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IA7HU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAqBE,8DAAc,EAAwB,oEAAY,EAAiB,sDAAM,EAAwB,sEAAa;OApBrG,oBAAoB,CA8HhC;IAAD,2BAAC;CAAA;AA9HgC;;;;;;;;;;;;ACVjC,yBAAyB,oBAAoB,OAAO,uBAAuB,yBAAyB,QAAQ,C;;;;;;;;;;;ACA5G,qVAAqV,mBAAmB,kOAAkO,qBAAqB,2NAA2N,iBAAiB,2NAA2N,iBAAiB,u1CAAu1C,2BAA2B,6S;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA52E;AACP;AACa;AAEE;AACX;AAO1D;IAME,0BAAmB,YAAyB,EAAS,MAAc,EACzD,KAAqB,EAAS,cAA6B;QADlD,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QACzD,UAAK,GAAL,KAAK,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAe;QAH/C,gBAAW,GAAQ,SAAS,CAAC;IAGsB,CAAC;IAE1E,mCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC5C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;YAC/B,KAAI,CAAC,gBAAgB,GAAK,CAAC,WAAW,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,EAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;YACtG,IAAM,YAAY,GAAkB,IAAI,CAAC,UAAU,CAAC;YACpD,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAe,YAAY,CAAC,CAAC;YACrE,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAQ,GAAR,UAAS,SAAS;QAAlB,iBAeC;QAdC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,aAAa;YACpE,KAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,aAAa,CAAC,UAAU,CAAC;QACrE,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACzD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,uCAAY,GAAZ,UAAa,SAAS;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAxCwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;uDAAC;IAHtC,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAOiC,kEAAW,EAAiB,sDAAM;YAClD,8DAAc,EAAyB,sEAAa;OAP1D,gBAAgB,CA6C5B;IAAD,uBAAC;CAAA;AA7C4B;;;;;;;;;;;;ACZ7B,mB;;;;;;;;;;;ACAA,+C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;ACP5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n<!-- <calendar-component></calendar-component> -->\\r\\n<!-- <event-calendar-component></event-calendar-component> -->\"","import { Component } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Better World';\r\n  constructor(public router : Router) { }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MaterialModule } from './material-module';\r\nimport { AppComponent } from './app.component';\r\nimport { SocietyMgmtComponent } from './society-mgmt/society-mgmt.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BuildingComponent } from './society-mgmt/building/building.component';\r\nimport { FlatsComponent } from './society-mgmt/flats/flats.component';\r\nimport { FlatDialogBox } from './society-mgmt/flats/flats.component';\r\nimport { PaymentHistoryDialogBox } from './society-mgmt/flats/flats.component';\r\nimport { PendingpaymentComponent } from './society-mgmt/flats/pendingpayment/pendingpayment.component';\r\nimport { OwnersComponent } from './society-mgmt/owners/owners.component';\r\nimport { TenantComponent } from './society-mgmt/tenant/tenant.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { SocietyHeaderComponent } from './society-mgmt/society-header/society-header.component';\r\nimport { RegisterMemberComponent } from './society-mgmt/register/register-member.component';\r\nimport { LoginComponent } from './society-mgmt/login/login.component';\r\nimport { SocietyComponent } from './society-mgmt/society/society.component';\r\nimport { ModalComponent } from './society-mgmt/modal/modal.component';\r\nimport { NeedAuthGuard } from './society-mgmt/services/NeedAuthGuard';\r\nimport { CalendarComponent } from './society-mgmt/calendar/calendar.component';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { EventCalendarComponent } from './society-mgmt/event-calendar/event-calendar.component';\r\nimport { SocietyRegComponent } from './society-mgmt/register/society-reg/society-reg.component';\r\nimport { BuildingRegComponent } from './society-mgmt/register/building-reg/building-reg.component';\r\nimport { FlatRegComponent } from './society-mgmt/register/flat-reg/flat-reg.component';\r\nimport { OwnerRegComponent } from './society-mgmt/register/owner-reg/owner-reg.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: '/home', pathMatch: \"full\" },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"register\", component: RegisterMemberComponent ,\r\n  children:[\r\n  { path: \"society-reg\", component: SocietyRegComponent },\r\n  { path: \"building-reg\", component: BuildingRegComponent },\r\n  { path: \"flat-reg\", component: FlatRegComponent },\r\n  { path: \"owner-reg\", component: OwnerRegComponent }\r\n  ]  \r\n},\r\n  \r\n  { path: \"home\", component: HomeComponent },\r\n  {\r\n    path: \"societyManagment\", component: SocietyMgmtComponent,\r\n\r\n    children: [\r\n      { path: \"society\", component: SocietyComponent },\r\n      { path: \":societyid/buildings\", component: BuildingComponent },\r\n      {\r\n        path: \":societyid/buildings/:buildingName/flats\",\r\n        component: FlatsComponent,\r\n        canActivate: [NeedAuthGuard]\r\n      },\r\n      {\r\n        path: \":societyid/buildings/:buildingName/flats/:flatId/owner\",\r\n        component: OwnersComponent,\r\n        canActivate: [NeedAuthGuard]\r\n      },  \r\n      {\r\n        path: \":societyid/buildings/:buildingName/owners\",\r\n        component: OwnersComponent,\r\n        canActivate: [NeedAuthGuard]\r\n      },\r\n      { path: \"owners\", component: OwnersComponent, canActivate: [NeedAuthGuard] },\r\n      { path: \"owners/:ownerId\", component: OwnersComponent, canActivate: [NeedAuthGuard] },\r\n      { path: \"owners/:ownerId/flats\", component: FlatsComponent, canActivate: [NeedAuthGuard] },\r\n      { path: \"tenats\", component: TenantComponent, canActivate: [NeedAuthGuard] },\r\n    ]\r\n\r\n  },\r\n  { path: \"error\", component: ErrorComponent },\r\n  { path: \"**\", component: ErrorComponent }\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SocietyMgmtComponent,\r\n    HomeComponent,\r\n    BuildingComponent,\r\n    FlatsComponent,\r\n    OwnersComponent,\r\n    TenantComponent,\r\n    ErrorComponent,\r\n    SocietyHeaderComponent,\r\n    RegisterMemberComponent,\r\n    LoginComponent,\r\n    SocietyComponent,\r\n    ModalComponent,\r\n    CalendarComponent,\r\n    EventCalendarComponent,\r\n    SocietyRegComponent,\r\n    BuildingRegComponent,\r\n    FlatRegComponent,\r\n    OwnerRegComponent,\r\n    PendingpaymentComponent,\r\n    FlatDialogBox,\r\n    PaymentHistoryDialogBox   \r\n  ],\r\n  entryComponents: [FlatDialogBox, PaymentHistoryDialogBox],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes),\r\n    NgbModalModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule\r\n  ],\r\n  providers: [NeedAuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h1>Page not found!!!</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".homeIconList{\\n    background-color: rgba(242, 242,242, .45);\\n    min-width: 220px;\\n    min-height: 80px;\\n    margin: 10px;\\n}\\n.m-r-20 {\\n    margin-right: 20px; }\"","module.exports = \"<div class=\\\"container mainContainer\\\">\\r\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 text-center\\\">\\r\\n      <img src=\\\"assets/logo.png\\\" class=\\\"img-fluid logo-img\\\" />\\r\\n    </div>\\r\\n    <div *ngIf=\\\"loginUserInfo && loginUserInfo.name\\\">\\r\\n      Welcome {{loginUserInfo.name}}<br>\\r\\n      Id: {{loginUserInfo.id}}<br>\\r\\n      {{loginUserInfo.email}}<br>\\r\\n      {{loginUserInfo.phone}}<br>\\r\\n      {{loginUserInfo.age}}<br>\\r\\n      <button (click)=\\\"logout()\\\" mat-raised-button color=\\\"primary\\\">Logout</button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!(loginUserInfo && loginUserInfo.name)\\\">\\r\\n      <button routerLink=\\\"/login\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\r\\n    </div>\\r\\n    <!--<div class=\\\"col-xs-6 col-sm-6 text-right\\\">\\r\\n      <a routerLink=\\\"/home\\\" class=''>\\r\\n        <img src=\\\"assets/logo.png\\\" class=\\\"img-fluid\\\" />\\r\\n      </a>\\r\\n    </div>-->\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"col-sm-12 text-center\\\">\\r\\n      <h2><b>WELCOME TO SOCIETY MANAGEMENT</b></h2>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-6 text-center contentContainer\\\">\\r\\n      <button style=\\\"width: 180px\\\" (click)=\\\"redirectToFlatPage()\\\" mat-raised-button color=\\\"primary\\\">My Flats</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-6 text-center contentContainer\\\">\\r\\n      <a routerLink=\\\"/societyManagment/society\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\">Society Management</button></a>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\r\\n      <img src=\\\"assets/banner.png\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from './../society-mgmt/services/token.service';\r\nimport { CommonService } from '../society-mgmt/services/common.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  loginUserInfo = {\r\n    name:\"\",\r\n    id:\"\",\r\n    email:\"\",\r\n    phone:\"\"\r\n  }\r\n  constructor(private _tokenService:TokenService, private _commonService:CommonService, public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._tokenService.isLogged().subscribe(isValid => {\r\n      this.getLoginUserData();\r\n    })\r\n  }\r\n\r\n  getLoginUserData(){\r\n    this._commonService.loginUserInfo.subscribe((userInfo)=>{\r\n      this.loginUserInfo.name = userInfo.data.ownername;\r\n      this.loginUserInfo.id = userInfo.data.ownerid;\r\n      this.loginUserInfo.phone = userInfo.data.phoneNumber;\r\n      this.loginUserInfo.email = userInfo.data.email;\r\n    })\r\n  }\r\n  redirectToFlatPage(){\r\n    if(this.loginUserInfo.id){\r\n      this.router.navigate(['societyManagment','owners',this.loginUserInfo.id,'flats']);\r\n    } else {\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n  logout(){\r\n    localStorage.setItem('TOKEN', \"\");\r\n    this.router.navigateByUrl('/home');\r\n    window.location.reload();\r\n  }\r\n}\r\n","import {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2018 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"row\\\" *ngIf=\\\"societyInfo\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 text-left contentContainer\\\">    \\r\\n        Society ID:  {{societyInfo && societyInfo[0]?.societyid}} <BR>\\r\\n      Society Name: {{societyInfo && societyInfo[0]?.societyname}}<br>\\r\\n      Society Address: {{societyInfo && societyInfo[0]?.address}},{{societyInfo && societyInfo[0]?.pincode}}<br>\\r\\n    </div>\\r\\n  </div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\r\\n        <div *ngIf=\\\"showSpinner\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\r\\n          </div>\\r\\n        <h3>{{displayText}}</h3>\\r\\n      <table *ngIf=\\\"!showSpinner && buildingList[0] && buildingList[0].buildingid\\\" class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>buildingid</th>\\r\\n              <th>buildingname</th>\\r\\n              <th>Flats</th>\\r\\n              <th>delete</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let building of buildingList\\\">\\r\\n              <td>{{building.buildingid}}</td>\\r\\n              <td>{{building.buildingname}}</td>\\r\\n              <td><button mat-stroked-button (click)=\\\"showFlats(societyInfo[0]?.societyid,building.buildingname)\\\">  <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n                <path d=\\\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\\\" /></svg>Show Flats\\r\\n                </button></td>\\r\\n              <td><button mat-stroked-button (click)=\\\"goToBuilding(element.societyid)\\\"> <svg\\r\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                <path d=\\\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\\\" />\\r\\n                <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\r\\n            </button></td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n    </div>  \\r\\n  </div>\\r\\n<div *ngFor=\\\"\\\">\\r\\n    {{building | json}}\\r\\n</div>\\r\\n<div [hidden]=\\\"!buildingList\\\">\\r\\n  <!-- <event-calendar-component></event-calendar-component> -->\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"../services/user.service\"\r\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\r\nimport { OnChanges } from '@angular/core';\r\nimport { CommonService } from '../services/common.service'\r\n\r\n@Component({\r\n  selector: 'app-building',\r\n  templateUrl: './building.component.html',\r\n  styleUrls: ['./building.component.css']\r\n})\r\nexport class BuildingComponent implements OnInit, OnChanges {\r\n  society; buildingList;\r\n  societyid; societyInfo: any;\r\n  showSpinner;\r\n  displayText;\r\n  constructor(public _userService: UserService, \r\n    public router: Router, private route: ActivatedRoute, public _commonService: CommonService ) { }\r\n\r\n  ngOnInit() {\r\n    this.getBuildingList();\r\n  }\r\n  ngOnChanges() {\r\n    this.getBuildingList();\r\n  }\r\n  getBuildingList() {\r\n    //this.societyid = this.route.snapshot.paramMap.get('societyid');\r\n    this.displayText=\"\"\r\n    this.route.params.subscribe((value) => {\r\n      this.societyid = value[\"societyid\"]; // get param\r\n      console.log(\"this.societyid:::\" + JSON.stringify(value));\r\n      this.updateCalendar(this.societyid);\r\n      this.showSpinner=true;\r\n      this.displayText=\"\"\r\n      this._userService.getBuilding(this.societyid).subscribe((data) => {\r\n        this.buildingList = data.dbResponse;\r\n        this.showSpinner=false;\r\n        if(!(this.buildingList[0] && this.buildingList[0].buildingid)){\r\n          this.displayText=\"No Record Found\"\r\n        }\r\n        this._commonService.emitActiveType('buildings');\r\n      },\r\n        error => {\r\n          console.log(error);\r\n          this.society = error.message;\r\n          this.showSpinner=false;\r\n        });\r\n\r\n      this._userService.getSocietyInfo(this.societyid).subscribe((data) => {\r\n        this.societyInfo = data.dbResponse;\r\n      },\r\n        error => {\r\n          console.log(error);\r\n          this.society = error.message;\r\n        });\r\n    });\r\n  }\r\n\r\n  updateCalendar(societyid){\r\n    this._userService.getSocietyEvents(societyid).subscribe((societyEvevts) => {\r\n      this._commonService.emitEventCalanderData(societyEvevts.dbResponse)\r\n    },\r\n    error => {\r\n      console.log(error);\r\n      this.society = error.message;\r\n    });\r\n  }\r\n\r\n  showFlats(societyId, buildingName){\r\n    this.router.navigate(['societyManagment', societyId, 'buildings', buildingName, 'flats']);\r\n    this._commonService.emitShowListEvent(true);\r\n  }\r\n\r\n}\r\n","module.exports = \"h3 {\\n    margin: 0 0 10px;\\n  }\\n  \\n  pre {\\n    background-color: #f5f5f5;\\n    padding: 15px;\\n  }\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      Action:\\r\\n      <pre>{{ modalData?.action }}</pre>\\r\\n    </div>\\r\\n    <div>\\r\\n      Event:\\r\\n      <pre>{{ modalData?.event | json }}</pre>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"text-center\\\">\\r\\n  <div>\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        mwlCalendarPreviousView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\r\\n        Previous\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-secondary\\\"\\r\\n        mwlCalendarToday\\r\\n        [(viewDate)]=\\\"viewDate\\\">\\r\\n        Today\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        mwlCalendarNextView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\r\\n        Next\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\r\\n  </div>\\r\\n  <div>\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"view = CalendarView.Month\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Month\\\">\\r\\n        Month\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"view = CalendarView.Week\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Week\\\">\\r\\n        Week\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"view = CalendarView.Day\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Day\\\">\\r\\n        Day\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n<div [ngSwitch]=\\\"view\\\">\\r\\n  <mwl-calendar-month-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n  </mwl-calendar-month-view>\\r\\n  <mwl-calendar-week-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n  </mwl-calendar-week-view>\\r\\n  <mwl-calendar-day-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n  </mwl-calendar-day-view>\\r\\n</div>\\r\\n\\r\\n<br><br><br>\\r\\n\\r\\n<h3>\\r\\n  Edit events\\r\\n  <button\\r\\n    class=\\\"btn btn-primary pull-right\\\"\\r\\n    (click)=\\\"addEvent()\\\">\\r\\n    Add new\\r\\n  </button>\\r\\n  <div class=\\\"clearfix\\\"></div>\\r\\n</h3>\\r\\n\\r\\n<!-- <table class=\\\"table table-bordered\\\">\\r\\n\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Title</th>\\r\\n      <th>Primary color</th>\\r\\n      <th>Secondary color</th>\\r\\n      <th>Starts at</th>\\r\\n      <th>Ends at</th>\\r\\n      <th>Remove</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let event of events; let index = index\\\">\\r\\n      <td>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          [(ngModel)]=\\\"event.title\\\"\\r\\n          (keyup)=\\\"refresh.next()\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          type=\\\"color\\\"\\r\\n          [(ngModel)]=\\\"event.color.primary\\\"\\r\\n          (change)=\\\"refresh.next()\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          type=\\\"color\\\"\\r\\n          [(ngModel)]=\\\"event.color.secondary\\\"\\r\\n          (change)=\\\"refresh.next()\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          mwlFlatpickr\\r\\n          [(ngModel)]=\\\"event.start\\\"\\r\\n          (ngModelChange)=\\\"refresh.next()\\\"\\r\\n          [altInput]=\\\"true\\\"\\r\\n          [convertModelValue]=\\\"true\\\"\\r\\n          [enableTime]=\\\"true\\\"\\r\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\r\\n          altFormat=\\\"F j, Y H:i\\\"\\r\\n          placeholder=\\\"Not set\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          mwlFlatpickr\\r\\n          [(ngModel)]=\\\"event.end\\\"\\r\\n          (ngModelChange)=\\\"refresh.next()\\\"\\r\\n          [altInput]=\\\"true\\\"\\r\\n          [convertModelValue]=\\\"true\\\"\\r\\n          [enableTime]=\\\"true\\\"\\r\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\r\\n          altFormat=\\\"F j, Y H:i\\\"\\r\\n          placeholder=\\\"Not set\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <button\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          (click)=\\\"events.splice(index, 1); refresh.next()\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n\\r\\n</table> -->\"","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours\r\n} from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView\r\n} from 'angular-calendar';\r\nimport { CommonService } from './../services/common.service';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'calendar-component',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./calendar.component.css'],\r\n  templateUrl: './calendar.component.html'\r\n})\r\nexport class CalendarComponent {\r\n  @ViewChild('modalContent')\r\n  modalContent: TemplateRef<any>;\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n\r\n  modalData: {\r\n    action: string;\r\n    event: CalendarEvent;\r\n  };\r\n\r\n  actions: CalendarEventAction[] = [\r\n    {\r\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Edited', event);\r\n      }\r\n    },\r\n    {\r\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.events = this.events.filter(iEvent => iEvent !== event);\r\n        this.handleEvent('Deleted', event);\r\n      }\r\n    }\r\n  ];\r\n\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  events: CalendarEvent[] = [\r\n    {\r\n      start: subDays(startOfDay(new Date()), 1),\r\n      end: addDays(new Date(), 1),\r\n      title: 'A 3 day event',\r\n      color: colors.red,\r\n      actions: this.actions,\r\n      allDay: true,\r\n      resizable: {\r\n        beforeStart: true,\r\n        afterEnd: true\r\n      },\r\n      draggable: true\r\n    },\r\n    {\r\n      start: startOfDay(new Date()),\r\n      title: 'An event with no end date',\r\n      color: colors.yellow,\r\n      actions: this.actions\r\n    },\r\n    {\r\n      start: subDays(endOfMonth(new Date()), 3),\r\n      end: addDays(endOfMonth(new Date()), 3),\r\n      title: 'A long event that spans 2 months',\r\n      color: colors.blue,\r\n      allDay: true\r\n    },\r\n    {\r\n      start: addHours(startOfDay(new Date()), 2),\r\n      end: new Date(),\r\n      title: 'A draggable and resizable event',\r\n      color: colors.yellow,\r\n      actions: this.actions,\r\n      resizable: {\r\n        beforeStart: true,\r\n        afterEnd: true\r\n      },\r\n      draggable: true\r\n    }\r\n  ];\r\n\r\n  activeDayIsOpen: boolean = true;\r\n\r\n  constructor(private modal: NgbModal, private _commonService:CommonService) { }\r\n  ngOnInit() {\r\n    this._commonService.calenderData.subscribe((data)=>{\r\n      this.events = [];\r\n      data.forEach(element => {\r\n        console.log(\"****\",element);\r\n        this.events.push({\r\n          title: 'payment of rs '+ element.paid+' for flat id'+element.flatid+' Reciept Number is '+element.id+' and ownerid is '+element.ownerid,\r\n          start: new Date(element.createddate),\r\n          color: colors.red,\r\n        });\r\n        this.refresh.next();\r\n      });\r\n    })\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      this.viewDate = date;\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    event.start = newStart;\r\n    event.end = newEnd;\r\n    this.handleEvent('Dropped or resized', event);\r\n    this.refresh.next();\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    this.modalData = { event, action };\r\n    this.modal.open(this.modalContent, { size: 'lg' });\r\n  }\r\n\r\n  addEvent(): void {\r\n    this.events.push({\r\n      title: 'New event',\r\n      start: startOfDay(new Date()),\r\n      end: endOfDay(new Date()),\r\n      color: colors.red,\r\n      draggable: true,\r\n      resizable: {\r\n        beforeStart: true,\r\n        afterEnd: true\r\n      }\r\n    });\r\n    this.refresh.next();\r\n  }\r\n}","module.exports = \"h3 {\\r\\n    margin: 0 0 10px;\\r\\n  }\\r\\n  \\r\\n  pre {\\r\\n    background-color: #f5f5f5;\\r\\n    padding: 15px;\\r\\n  }\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      Action:\\r\\n      <pre>{{ modalData?.action }}</pre>\\r\\n    </div>\\r\\n    <div>\\r\\n      Event:\\r\\n      <pre>{{ modalData?.event | json }}</pre>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"text-center\\\">\\r\\n  <div>\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        mwlCalendarPreviousView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\r\\n        Previous\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-secondary\\\"\\r\\n        mwlCalendarToday\\r\\n        [(viewDate)]=\\\"viewDate\\\">\\r\\n        Today\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        mwlCalendarNextView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\r\\n        Next\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\r\\n  </div>\\r\\n  <div>\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"view = CalendarView.Month\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Month\\\">\\r\\n        Month\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"view = CalendarView.Week\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Week\\\">\\r\\n        Week\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"view = CalendarView.Day\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Day\\\">\\r\\n        Day\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n<div [ngSwitch]=\\\"view\\\">\\r\\n  <mwl-calendar-month-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n  </mwl-calendar-month-view>\\r\\n  <mwl-calendar-week-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n  </mwl-calendar-week-view>\\r\\n  <mwl-calendar-day-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\r\\n  </mwl-calendar-day-view>\\r\\n</div>\\r\\n\\r\\n<br><br><br>\\r\\n\\r\\n<h3>\\r\\n  Edit events\\r\\n  <button\\r\\n    class=\\\"btn btn-primary pull-right\\\"\\r\\n    (click)=\\\"addEvent()\\\">\\r\\n    Add new\\r\\n  </button>\\r\\n  <div class=\\\"clearfix\\\"></div>\\r\\n</h3>\\r\\n\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Title</th>\\r\\n      <th>Primary color</th>\\r\\n      <th>Secondary color</th>\\r\\n      <th>Starts at</th>\\r\\n      <th>Ends at</th>\\r\\n      <th>Remove</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let event of events; let index = index\\\">\\r\\n      <td>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          [(ngModel)]=\\\"event.title\\\"\\r\\n          (keyup)=\\\"refresh.next()\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          type=\\\"color\\\"\\r\\n          [(ngModel)]=\\\"event.color.primary\\\"\\r\\n          (change)=\\\"refresh.next()\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          type=\\\"color\\\"\\r\\n          [(ngModel)]=\\\"event.color.secondary\\\"\\r\\n          (change)=\\\"refresh.next()\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          mwlFlatpickr\\r\\n          [(ngModel)]=\\\"event.start\\\"\\r\\n          (ngModelChange)=\\\"refresh.next()\\\"\\r\\n          [altInput]=\\\"true\\\"\\r\\n          [convertModelValue]=\\\"true\\\"\\r\\n          [enableTime]=\\\"true\\\"\\r\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\r\\n          altFormat=\\\"F j, Y H:i\\\"\\r\\n          placeholder=\\\"Not set\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          mwlFlatpickr\\r\\n          [(ngModel)]=\\\"event.end\\\"\\r\\n          (ngModelChange)=\\\"refresh.next()\\\"\\r\\n          [altInput]=\\\"true\\\"\\r\\n          [convertModelValue]=\\\"true\\\"\\r\\n          [enableTime]=\\\"true\\\"\\r\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\r\\n          altFormat=\\\"F j, Y H:i\\\"\\r\\n          placeholder=\\\"Not set\\\">\\r\\n      </td>\\r\\n      <td>\\r\\n        <button\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          (click)=\\\"events.splice(index, 1); refresh.next()\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n\\r\\n</table>\"","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours\r\n} from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView\r\n} from 'angular-calendar';\r\nimport { CommonService } from '../services/common.service';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'event-calendar-component',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./event-calendar.component.css'],\r\n  templateUrl: './event-calendar.component.html'\r\n})\r\nexport class EventCalendarComponent {\r\n  @ViewChild('modalContent')\r\n  modalContent: TemplateRef<any>;\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n\r\n  modalData: {\r\n    action: string;\r\n    event: CalendarEvent;\r\n  };\r\n\r\n  actions: CalendarEventAction[] = [\r\n    {\r\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Edited', event);\r\n      }\r\n    },\r\n    {\r\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.events = this.events.filter(iEvent => iEvent !== event);\r\n        this.handleEvent('Deleted', event);\r\n      }\r\n    }\r\n  ];\r\n\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  events: CalendarEvent[] = [\r\n   /* {\r\n      start: subDays(startOfDay(new Date()), 1),\r\n      end: addDays(new Date(), 1),\r\n      title: 'A 3 day event',\r\n      color: colors.red,\r\n      actions: this.actions,\r\n      allDay: true,\r\n      resizable: {\r\n        beforeStart: true,\r\n        afterEnd: true\r\n      },\r\n      draggable: true\r\n    },\r\n    {\r\n      start: startOfDay(new Date()),\r\n      title: 'An event with no end date',\r\n      color: colors.yellow,\r\n      actions: this.actions\r\n    },\r\n    {\r\n      start: new Date('2018-11-10 07:46:03'),\r\n      title: 'custome varun event',\r\n      color: colors.yellow,\r\n      actions: this.actions\r\n    },\r\n    {\r\n      start: subDays(endOfMonth(new Date()), 3),\r\n      end: addDays(endOfMonth(new Date()), 3),\r\n      title: 'A long event that spans 2 months',\r\n      color: colors.blue,\r\n      allDay: true\r\n    },\r\n    {\r\n      start: addHours(startOfDay(new Date()), 2),\r\n      end: new Date(),\r\n      title: 'A draggable and resizable event',\r\n      color: colors.yellow,\r\n      actions: this.actions,\r\n      resizable: {\r\n        beforeStart: true,\r\n        afterEnd: true\r\n      },\r\n      draggable: true\r\n    }*/\r\n  ];\r\n\r\n  activeDayIsOpen: boolean = true;\r\n\r\n  constructor(private modal: NgbModal, private _commonService:CommonService) { }\r\n  ngOnInit() {\r\n    this._commonService.eventCalenderData.subscribe((data)=>{\r\n      this.events = [];\r\n      data.forEach(element => {\r\n        console.log(\"****\",element);     \r\n        this.events.push({\r\n          title:element.eventheading+' Event Description '+element.eventdiscription,\r\n          start: new Date(element.eventstartdate),\r\n          \r\n          color: colors.red,\r\n        });\r\n\r\n        this.refresh.next();\r\n      });\r\n      this.refresh.next();\r\n    })\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      this.viewDate = date;\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    event.start = newStart;\r\n    event.end = newEnd;\r\n    this.handleEvent('Dropped or resized', event);\r\n    this.refresh.next();\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    this.modalData = { event, action };\r\n    this.modal.open(this.modalContent, { size: 'lg' });\r\n  }\r\n\r\n  addEvent(): void {\r\n    this.events.push({\r\n      title: 'New event',\r\n      start: startOfDay(new Date()),\r\n      end: endOfDay(new Date()),\r\n      color: colors.red,\r\n      draggable: true,\r\n      resizable: {\r\n        beforeStart: true,\r\n        afterEnd: true\r\n      }\r\n    });\r\n    this.refresh.next();\r\n  }\r\n}","module.exports = \"<h1 mat-dialog-title>Payment History for flat id {{data.flatId}}</h1>\\r\\n<div mat-dialog-content style=\\\"overflow: auto\\\">\\r\\n    <div class=\\\"tableClass\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <table class=\\\"tableClass\\\"  mat-table [dataSource]=\\\"dataSource\\\">\\r\\n          \\r\\n              <!-- Position Column -->\\r\\n              <ng-container matColumnDef=\\\"idpaymenthistory\\\">\\r\\n                <th mat-cell *matHeaderCellDef> Payment Id </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.idpaymenthistory}} </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <!-- Name Column -->\\r\\n              <ng-container matColumnDef=\\\"amount\\\">\\r\\n                <th mat-cell *matHeaderCellDef> Amount </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\r\\n              </ng-container>\\r\\n\\r\\n               <!-- Name Column -->\\r\\n              <ng-container matColumnDef=\\\"type\\\">\\r\\n                <th mat-cell *matHeaderCellDef> Type </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paymentType}} </td>\\r\\n              </ng-container>\\r\\n          \\r\\n              <!-- Weight Column -->\\r\\n              <ng-container matColumnDef=\\\"remainingbalance\\\">\\r\\n                <th mat-cell *matHeaderCellDef> Remaining Balance </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.remainingbalance}} </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"createddate\\\">\\r\\n                  <th mat-cell *matHeaderCellDef> Payment Date </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.createddate}} </td>\\r\\n                </ng-container>\\r\\n          \\r\\n          \\r\\n              <tr mat-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n          \\r\\n            <mat-paginator class=\\\"tableClass\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n          </div>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Payment Form</h1>\\r\\n<div mat-dialog-content style=\\\"overflow: auto\\\">\\r\\n    <app-pendingpayment [pendingPaymentFlatObj]=\\\"data.flatObj\\\" (paidAmount)=\\\"paymentMethod($event)\\\">\\r\\n    </app-pendingpayment>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-button mat-dialog-close cdkFocusInitial>close</button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 text-left contentContainer\\\">    \\r\\n        Society ID:  {{societyInfo && societyInfo[0]?.societyid}} <br>\\r\\n      Society Name: {{societyInfo && societyInfo[0]?.societyname}} ,  <br>     \\r\\n      Society Address: {{societyInfo && societyInfo[0]?.address}},{{societyInfo && societyInfo[0]?.pincode}}<br><br>\\r\\n      buildingname : {{buildingName}}<br>\\r\\n    </div>\\r\\n  </div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\r\\n        <div *ngIf=\\\"showSpinner\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\r\\n          </div>\\r\\n        <h3>{{displayText}}</h3>\\r\\n      <table *ngIf=\\\"!showSpinner && flatList[0] && flatList[0].flatid\\\" class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>flatid</th>\\r\\n              <th>flatname</th>\\r\\n              <th>ownerid</th>\\r\\n              <th>pendingpayment</th>\\r\\n              <th>payment button</th>\\r\\n              <!-- <th>Calender</th> -->\\r\\n              <th>Show Owner</th>\\r\\n              <th>Payment History</th>\\r\\n              <th>Flat</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let flat of flatList\\\">\\r\\n              <td>{{flat.flatid}}</td>\\r\\n              <td>{{flat.flatname}}</td>\\r\\n              <td>{{flat.ownerid}}</td>\\r\\n              <td>{{flat.pendingpayment}}</td>\\r\\n              <td>\\r\\n                <button mat-raised-button (click)=\\\"openPaymentDialog(flat)\\\">Pay</button>\\r\\n              </td>\\r\\n              <td>\\r\\n                  <button mat-raised-button (click)=\\\"openPaymentHistoryDialog(flat.flatid)\\\">Payment History</button>\\r\\n              </td>\\r\\n              <td>\\r\\n                  <button mat-raised-button (click)=\\\"showOwner(societyid, buildingName,flat.flatid)\\\">Show Owner</button>\\r\\n              </td>\\r\\n              <td>\\r\\n                  <button mat-raised-button (click)=\\\"deleteFlat(flat.flatid)\\\">Delete</button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n  </div>\\r\\n<div>\\r\\n  <!-- <calendar-component></calendar-component> -->\\r\\n</div>\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { UserService } from \"../services/user.service\"\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { OnChanges } from '@angular/core';\r\nimport { TokenService } from '../services/token.service'\r\nimport { CommonService } from '../services/common.service'\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-flats',\r\n  templateUrl: './flats.component.html',\r\n  styleUrls: ['./flats.component.css']\r\n})\r\nexport class FlatsComponent implements OnInit, OnChanges {\r\n  \r\n  society; flatList;\r\n  isClosedValue = false;\r\n  model: any = {};\r\n  errmsg;\r\n  payAmount;\r\n  societyid;buildingName; societyInfo: any;responseData:any;\r\n  flatObj:any;\r\n  showSpinner;\r\n  displayText;\r\n  paymentHistoryData;\r\n  showPaymentModal=false;\r\n  displayedColumns: string[];\r\n  dataSource;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(public dialog: MatDialog,public _userService: UserService,\r\n     public router: Router, private route: \r\n     ActivatedRoute, public _tokenService: TokenService, public _commonService:CommonService) { }\r\n\r\n  ngOnInit() {\r\n    this.getflatList();\r\n  }\r\n  ngOnChanges() {\r\n    this.getflatList();\r\n  }\r\n  getflatList() {\r\n    this.displayText=\"\"\r\n    this.route.params.subscribe((value) => {\r\n      this.societyid = value[\"societyid\"]; // get param\r\n      this.buildingName = value[\"buildingName\"]; // get param\r\n      let ownerId = value[\"ownerId\"];\r\n      this.showSpinner=true;\r\n      this.displayText=\"\"\r\n      if(ownerId){\r\n        this._userService.getOwnerFlatList(ownerId).subscribe((data) => {\r\n          this.commonResponse(data);\r\n          this.societyid = this.flatList[0].societyid;\r\n          this.buildingName = this.flatList[0].buildingname;\r\n          this.setSocietyInfo(this.societyid);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.society = error.message;\r\n        });\r\n      } else {\r\n        this._userService.getFlatList(this.societyid, this.buildingName).subscribe((data) => {\r\n          this.commonResponse(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.society = error.message;\r\n        });\r\n      }\r\n      this.setSocietyInfo(this.societyid);\r\n    });\r\n  }\r\n\r\n  setSocietyInfo(societyid){\r\n    if(societyid){\r\n      this._userService.getSocietyInfo(societyid).subscribe((data) => {\r\n        this.societyInfo = data.dbResponse;\r\n      },\r\n        error => {\r\n          console.log(error);\r\n          this.society = error.message;\r\n        });\r\n    }\r\n  }\r\n\r\n  commonResponse(data){\r\n    this.showSpinner=false;\r\n    this.flatList = data.dbResponse;\r\n    if(!(this.flatList[0] && this.flatList[0].flatid)){\r\n      this.displayText=\"No Record Found\"\r\n    }\r\n    this._commonService.emitActiveType('flats');\r\n  }\r\n\r\n  openPaymentDialog(flat) {\r\n    this.flatObj = flat;\r\n    const dialogRef = this.dialog.open(FlatDialogBox, {\r\n      data: {\r\n        flatObj:flat\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(amount => {\r\n      console.log('The dialog was closed');\r\n      if(amount)\r\n      this.paymentMethod(amount);\r\n    });\r\n  }\r\n\r\n  openPaymentHistoryDialog(flatId){\r\n    this.dialog.open(PaymentHistoryDialogBox, {\r\n      data: {\r\n        flatId:flatId\r\n      }\r\n    });\r\n  }\r\n\r\n  paymentMethod(payAmount){\r\n    this.flatObj.pendingPayment = payAmount;\r\n    console.log(payAmount , this.flatObj.pendingPayment);\r\n    console.log(this.flatObj);\r\n    \r\n    this._userService.putFlatPayment(this.flatObj).subscribe(\r\n      (data) => {\r\n      this.responseData = data.dbResponse;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.errmsg=error.message;\r\n        alert(\"Please login first\"+JSON.stringify(error));\r\n      },\r\n      () => {\r\n        this.isClosedValue = true\r\n        this.getflatList();\r\n        alert(\"Payment successfully updated!\");\r\n      });\r\n  }\r\n  showCalender(flatId){\r\n    this._userService.getFlatPaymentHistory(flatId).subscribe((data) => {\r\n      console.log(data.dbResponse);\r\n      this._commonService.emitCalanderData(data.dbResponse);\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.society = error.message;\r\n      });\r\n  }\r\n\r\n\r\n  showOwner(societyid,buildingName,flatId){\r\n    this.router.navigate(['societyManagment',societyid,'buildings',buildingName,\"flats\",flatId,\"owner\"]); \r\n    this._commonService.emitShowListEvent(true);\r\n  }\r\n}\r\n\r\n\r\nexport interface flatPaymentHistory {\r\n  createddate: string;\r\n  flatid: number;\r\n  idpaymenthistory: number;\r\n  paymentType:number;\r\n  ownerid: number;\r\n  paid: number;\r\n  remainingbalance:number;\r\n  updateddate:string\r\n}\r\n\r\nexport interface DialogData {\r\n  flatObj: any;\r\n  flatId:any\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-data-example-dialog',\r\n  templateUrl: 'flat-dialogBox.html',\r\n})\r\nexport class FlatDialogBox {\r\n  constructor(public dialogRef: MatDialogRef<FlatDialogBox>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n  }\r\n  paymentMethod(amount){\r\n    this.dialogRef.close(amount);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'PaymentHistoryDialogBox',\r\n  templateUrl: 'PaymentHistoryDialogBox.html',\r\n})\r\nexport class PaymentHistoryDialogBox implements OnInit {\r\n  paymentHistoryData;\r\n  displayedColumns;\r\n  dataSource;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  \r\n  constructor(public _userService: UserService,public dialogRef: MatDialogRef<FlatDialogBox>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.showFlatPatmentHistory(this.data.flatId)\r\n  }\r\n  paymentHistoryMethod(amount){\r\n    this.dialogRef.close(amount);\r\n  }\r\n\r\n  showFlatPatmentHistory(flatId){\r\n    this._userService.getFlatPaymentHistory(flatId).subscribe((data) => {\r\n      console.log(data.dbResponse);\r\n      this.paymentHistoryData= data.dbResponse;\r\n      this.displayedColumns   = ['idpaymenthistory', 'amount', 'remainingbalance', 'type' , 'createddate'];\r\n      const ELEMENT_DATA: flatPaymentHistory[] =data.dbResponse;\r\n      this.dataSource = new MatTableDataSource<flatPaymentHistory>(ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        alert(\"something went wrong\");\r\n      });\r\n  }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"formStyle row justify-content-center childContainer s-bg\\\">\\r\\n        <div class=\\\" col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col text-center\\\">\\r\\n                    <h1><b>{{pageTitle3}}</b></h1>\\r\\n                    <!-- <p>{{pageDesc3}}</p> -->\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row align-items-center text-center\\\" ng-app>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <form class=\\\"formStyle\\\" name=\\\"form\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <mat-form-field *ngIf=\\\"pendingPaymentFlatObj\\\" class=\\\"col-xs-12 col-sm-2 example-full-width\\\">\\r\\n                                <label>Pending Amount</label>\\r\\n                                <input [disabled]=\\\"isEditable\\\" matInput type=\\\"number\\\" name=\\\"pendingAmt\\\"\\r\\n                                    class=\\\"form-control\\\" [(ngModel)]=\\\"pendingPaymentFlatObj.pendingpayment\\\">\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"col-xs-12 col-sm-2 example-full-width\\\">\\r\\n                                <label>All Municipal Dues</label>\\r\\n                                <input [disabled]=\\\"isEditable\\\" matInput type=\\\"number\\\" name=\\\"dues\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"paymentStructure.dues\\\">\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"col-xs-12 col-sm-2 example-full-width\\\">\\r\\n                                <label>Sinking Funds</label>\\r\\n                                <input [disabled]=\\\"isEditable\\\" matInput type=\\\"number\\\" name=\\\"funds\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"paymentStructure.funds\\\">\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"col-xs-12 col-sm-2 example-full-width\\\">\\r\\n                                <label>Periodic Building Maintenance</label>\\r\\n                                <input [disabled]=\\\"isEditable\\\" matInput type=\\\"number\\\" name=\\\"maintenance\\\"\\r\\n                                    class=\\\"form-control\\\" [(ngModel)]=\\\"paymentStructure.maintenance\\\">\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"col-xs-12 col-sm-2 example-full-width\\\">\\r\\n                                <label>Common Area Maintenance & Parking</label>\\r\\n                                <input [disabled]=\\\"isEditable\\\" matInput type=\\\"number\\\" name=\\\"parking\\\"\\r\\n                                    class=\\\"form-control\\\" [(ngModel)]=\\\"paymentStructure.parking\\\">\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\" col-xs-12 col-sm-2 example-full-width\\\">\\r\\n                                <label>\\r\\n                                    <div class=\\\"btn btn-primary\\\" (click)=\\\"calculateTotal()\\\">Calculate Total</div>\\r\\n                                </label>\\r\\n                                <input [disabled]=\\\"isEditable\\\" matInput type=\\\"number\\\" name=\\\"d\\\" class=\\\"form-control\\\"\\r\\n                                    value=\\\"{{total}}\\\">\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"col-xs-12 col-sm-2 example-full-width\\\">\\r\\n                                <label>Paying Amount</label>\\r\\n                                <input matInput type=\\\"number\\\" name=\\\"pay\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"payamt\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"btn btn-primary\\\" (click)=\\\"payment(payamt)\\\">Pay</div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter,Inject } from '@angular/core';\r\nimport { UserService } from \"../../services/user.service\"\r\n\r\n@Component({\r\n  selector: 'app-pendingpayment',\r\n  templateUrl: './pendingpayment.component.html',\r\n  styleUrls: ['./pendingpayment.component.css']\r\n})\r\nexport class PendingpaymentComponent implements OnInit {\r\n  total: number;\r\n  isEditable = true;\r\n  paymentStructure = {\r\n    dues:0,\r\n    funds:0,\r\n    maintenance:0,\r\n    parking:0,\r\n    total:0\r\n  }\r\n  @Input()\r\n  pendingPaymentFlatObj;\r\n  @Output()\r\n  paidAmount = new EventEmitter();\r\n\r\n  constructor(public _userService: UserService) { \r\n    console.log(\"constructor..........\",this.pendingPaymentFlatObj);\r\n  }\r\n\r\n\r\n  calculateTotal() {\r\n    this.total = this.paymentStructure.total+this.pendingPaymentFlatObj.pendingpayment;\r\n    console.log(this.total)\r\n  }\r\n\r\n  payment(amount) {\r\n    this.paidAmount.emit(amount);\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"payment..........\",this.pendingPaymentFlatObj);\r\n    const getCurrentPaymentStructure = \"get_current_payment_structure()\"\r\n    this._userService.callStoredProc(getCurrentPaymentStructure).subscribe((data) => {\r\n      console.log(data.dbResponse[0][0]);\r\n      this.paymentStructure.dues=data.dbResponse[0][0].municipalDue;\r\n      this.paymentStructure.funds=data.dbResponse[0][0].sinkingFund;\r\n      this.paymentStructure.maintenance=data.dbResponse[0][0].buildingMaintenance;\r\n      this.paymentStructure.parking=data.dbResponse[0][0].parkingMaintenance;\r\n      this.paymentStructure.total = this.paymentStructure.dues+ this.paymentStructure.funds+ this.paymentStructure.maintenance+this.paymentStructure.parking;\r\n    },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n.loginBox{\\r\\n    padding: 20px;\\r\\n    margin-top:20px;\\r\\n    border: 1px solid rgba(0, 0, 0, 0.16);\\r\\n    -ms-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n    -o-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n}\"","module.exports = \"<!-- main app container -->\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row mainContainer\\\">\\r\\n        <div class=\\\"d-none d-sm-block col-sm-8 align-self-center text-center\\\">\\r\\n                <img src=\\\"assets/logo.png\\\" class=\\\"img-fluid logo-img\\\" />\\r\\n                <br>\\r\\n            <h4>Login Here</h4>\\r\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n                magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n                consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\r\\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-sm-4 align-self-top\\\">\\r\\n            <br> <br>\\r\\n            <div class=\\\"loginBox\\\">\\r\\n                <h4 class=\\\" text-center\\\">Member login</h4>\\r\\n                <br>\\r\\n                <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"uname\\\" placeholder=\\\"User Name\\\" [(ngModel)]=\\\"model.uname\\\" #uname=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && uname.invalid }\\\"\\r\\n                            required />\\r\\n                        <div *ngIf=\\\"f.submitted && uname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"uname.errors.required\\\">username is required</div>\\r\\n                        </div>\\r\\n                    </div> \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\r\\n                            [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required />\\r\\n                        <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"password.errors.required\\\">password is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button class=\\\"btn btn-block btn-primary\\\">Login</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group text-center\\\">\\r\\n                        <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Not a member? Sign up</a>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <br> <br>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { ApiService } from '../services/api.service';\r\nimport { TokenService } from '../services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  model: any = {};\r\n  username = \"sdfsdf29112\";\r\n  password = \"soword\";\r\n  redirectUrl;\r\n\r\n  constructor(private route: ActivatedRoute,private api: ApiService, private _tokenService: TokenService, public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.redirectUrl = this.route.snapshot.queryParams['redirectUrl'] || 'societyManagment';\r\n  }\r\n\r\n  onSubmit() {\r\n    this.api.login(\r\n      this.model.uname,\r\n      this.model.password\r\n    )\r\n      .subscribe(\r\n        r => {\r\n          if (r.token) {\r\n           // alert(r.token);\r\n            console.log(\"token set success fully\");\r\n            this._tokenService.setToken(r.token);\r\n            if(this.redirectUrl == 'societyManagment'){\r\n              this.router.navigate(['societyManagment', 'owners' ,r.dbResponse[0].ownerid,'flats']);\r\n            } else {\r\n              this.router.navigateByUrl(this.redirectUrl);\r\n            }\r\n            \r\n            //this.router.navigate(['societyManagment','society']);\r\n            //this.router.navigateByUrl('/societyManagment');\r\n          }\r\n        },\r\n        err => {\r\n          alert(err);\r\n        });\r\n  }\r\n}\r\n","module.exports = \".example-additional-selection {\\r\\n    opacity: 0.75;\\r\\n    font-size: 0.75em;\\r\\n  }\"","module.exports = \"\\r\\n\\r\\n<div>\\r\\n    <mat-form-field  *ngIf=\\\"(modalName == 'flats' || modalName == 'buildings' || modalName == 'owners')\\\">\\r\\n        <!-- <mat-select placeholder=\\\"Select Society\\\" [formControl]=\\\"societyFormCtrl\\\" multiple> -->\\r\\n        <mat-select placeholder=\\\"Select Society\\\"  [formControl]=\\\"societyFormCtrl\\\">\\r\\n          <!-- <mat-select-trigger>\\r\\n            {{societyFormCtrl.value ? societyFormCtrl.value[0] : ''}}\\r\\n            <span *ngIf=\\\"societyFormCtrl.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\r\\n              (+{{societyFormCtrl.value.length - 1}} {{societyFormCtrl.value?.length === 2 ? 'other' : 'others'}})\\r\\n            </span>\\r\\n          </mat-select-trigger> -->\\r\\n          <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\">{{s.societyname}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field *ngIf=\\\"(modalName == 'flats' || modalName == 'owners')\\\">\\r\\n          <!-- <mat-select placeholder=\\\"Select Society\\\" [formControl]=\\\"buildingFormCtrl\\\" multiple> -->\\r\\n          <mat-select placeholder=\\\"Select building\\\"  [formControl]=\\\"buildingFormCtrl\\\">\\r\\n            <!-- <mat-select-trigger>\\r\\n              {{buildingFormCtrl.value ? buildingFormCtrl.value[0] : ''}}\\r\\n              <span *ngIf=\\\"buildingFormCtrl.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\r\\n                (+{{buildingFormCtrl.value.length - 1}} {{buildingFormCtrl.value?.length === 2 ? 'other' : 'others'}})\\r\\n              </span>\\r\\n            </mat-select-trigger> -->\\r\\n            <mat-option *ngFor=\\\"let building of buildingList\\\" [value]=\\\"building.buildingname\\\">{{building.buildingname}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-form-field  *ngIf=\\\"modalName == 'owners'\\\">\\r\\n            <mat-select placeholder=\\\"Select flat\\\"  [formControl]=\\\"flatFormCtrl\\\" multiple>\\r\\n              <mat-select-trigger>\\r\\n                {{flatFormCtrl.value ? flatFormCtrl.value[0] : ''}}\\r\\n                <span *ngIf=\\\"flatFormCtrl.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\r\\n                  (+{{flatFormCtrl.value.length - 1}} {{flatFormCtrl.value?.length === 2 ? 'other' : 'others'}})\\r\\n                </span>\\r\\n              </mat-select-trigger>\\r\\n              <mat-option *ngFor=\\\"let flat of flatList\\\" [value]=\\\"flat.flatname\\\">{{flat.flatname}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field> -->\\r\\n</div>\\r\\n<button *ngIf=\\\"(modalName == 'flats' || modalName == 'buildings' || modalName == 'owners' )\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Submit</button>\"","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\r\nimport { UserService } from \"../services/user.service\";\r\nimport { CommonService } from \"../services/common.service\";\r\nimport { NeedAuthGuard } from \"../services/NeedAuthGuard\";\r\nimport { Router } from '@angular/router';\r\nimport {FormControl} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.css']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  societyList;\r\n  sid;\r\n  buildingName;\r\n  buildingList;\r\n  flatList;\r\n  buildingObj;\r\n  societyFormCtrl = new FormControl();\r\n  buildingFormCtrl = new FormControl();\r\n  flatFormCtrl = new FormControl();\r\n  @Input()\r\n  modalName : string;\r\n\r\n  //@Output()\r\n  //eventEm = new EventEmitter();\r\n  \r\n  constructor(public _userService: UserService, public router: Router, \r\n    public _needAuthGuard : NeedAuthGuard, public _commonService:CommonService) { \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this._userService.getSociety().subscribe((data) => {\r\n      this.societyList = data.dbResponse;\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.societyList = error.message;\r\n      });\r\n\r\n      this.societyFormCtrl.valueChanges.subscribe(societyid => {\r\n        console.log(\"on changes....\",societyid);\r\n        this.sid=societyid;\r\n        this._userService.getBuilding(societyid).subscribe((data) => {\r\n          this.buildingList = data.dbResponse;\r\n        },\r\n          error => {\r\n            console.log(error);\r\n            this.buildingList = error.message;\r\n          });\r\n      });\r\n      this.buildingFormCtrl.valueChanges.subscribe(buildingName => {\r\n        console.log(\"on changes....\",buildingName);\r\n        this.buildingName=buildingName;\r\n        this._userService.getFlatList(this.sid,buildingName).subscribe((data) => {\r\n          this.flatList = data.dbResponse;\r\n        },\r\n          error => {\r\n            console.log(error);\r\n            this.flatList = error.message;\r\n          });\r\n      })\r\n    \r\n  }\r\n\r\n  // onBuildingChange(buildingId) {\r\n  //   this._userService.getFlatList(buildingId).subscribe((data) => {\r\n  //     this.flatList = data.dbResponse;\r\n  //   },\r\n  //     error => {\r\n  //       console.log(error);\r\n  //       this.flatList = error.message;\r\n  //     });\r\n  // }\r\n\r\n  onSubmit(){\r\n    console.log(this.modalName);\r\n    if(this.modalName=='buildings') {\r\n      this.router.navigate(['societyManagment',this.sid,'buildings']); \r\n      this._commonService.emitShowListEvent(true);\r\n    }\r\n    else if(this.modalName=='flats') {\r\n      this.router.navigate(['societyManagment',this.sid,'buildings',this.buildingName,'flats']);\r\n      this._commonService.emitShowListEvent(true);\r\n     }\r\n     else if(this.modalName=='owners') {   \r\n        //this.router.navigate(['societyManagment','owners']);\r\n        this.router.navigate(['societyManagment',this.sid,'buildings',this.buildingName,'owners']);\r\n        this._commonService.emitShowListEvent(true);\r\n        // setTimeout(()=>{\r\n        //   this._commonService.emitOwnerListRequestobj({societyId:this.societyFormCtrl.value,buildingName:this.buildingFormCtrl.value,flatid:this.flatFormCtrl.value});\r\n        // },1000) \r\n        \r\n     }  \r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-md-12 contentContainer\\\">\\r\\n\\r\\n    <h3>Owner Details</h3>\\r\\n    <div *ngIf=\\\"showSpinner\\\">\\r\\n        <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\r\\n      </div>\\r\\n    <h3>{{displayText}}</h3>\\r\\n    <div *ngIf=\\\"!showSpinner && ownerData[0] && ownerData[0].idOwner\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Owner ID</th>\\r\\n            <th>Name</th>\\r\\n            <th>IsAdmin</th>\\r\\n            <th>Phone No</th>\\r\\n            <th>Email</th>\\r\\n            <th>Age</th>\\r\\n            <th>Gender</th>\\r\\n            <th>Flat ID</th>\\r\\n            <th>Flat Name</th>\\r\\n            <th>Tenant Id</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let owner of ownerData\\\">\\r\\n            <td>{{owner.idOwner}}</td>\\r\\n            <td>{{owner.ownerName}}</td>\\r\\n            <td>{{owner.isAdmin}}</td>\\r\\n            <td>{{owner.ownerPhoneNumber}}</td>\\r\\n            <td>{{owner.ownerEmail}}</td>\\r\\n            <td>{{owner.ownerAge}}</td>\\r\\n            <td>{{owner.ownerGender}}</td>\\r\\n            <td>{{owner.idFlat}}</td>\\r\\n            <td>{{owner.flatName}}</td>\\r\\n            <td>{{owner.tenantId}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"../services/user.service\"\r\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\r\nimport {CommonService} from './../services/common.service'\r\n\r\n@Component({\r\n  selector: 'app-owners',\r\n  templateUrl: './owners.component.html',\r\n  styleUrls: ['./owners.component.css']\r\n})\r\nexport class OwnersComponent implements OnInit {\r\n  ownerData;\r\n  showSpinner;\r\n  displayText= \"\";\r\n  constructor(public _userService : UserService, public router: Router, private route: \r\n    ActivatedRoute, public _commonService:CommonService) { }\r\n\r\n     ngOnInit() {\r\n      this.getOwnerList();\r\n    }\r\n    ngOnChanges() {\r\n      this.getOwnerList();\r\n    }\r\n\r\n  getOwnerList() {\r\n    this.displayText = \"\";\r\n    this.route.params.subscribe((value) => {\r\n      let societyid = value[\"societyid\"] ? [value[\"societyid\"]] : []; // get param\r\n      let buildingName = value[\"buildingName\"] ? [value[\"buildingName\"]] : []; // get param\r\n      let flatId = value[\"flatId\"] ? [value[\"flatId\"]] : []; // get param\r\n      let ownerId = value[\"ownerId\"];\r\n      this.showSpinner = true\r\n      this.displayText = \"\";\r\n      if (ownerId) {\r\n        this._userService.getOwnerByID(ownerId).subscribe((data) => {\r\n          this.commonResponse(data);\r\n        })\r\n      } else {\r\n        this._userService.getSelectedTypelist(societyid, buildingName, flatId).subscribe((data: any) => {\r\n          this.commonResponse(data);\r\n        })\r\n      }\r\n\r\n      \r\n    });\r\n  }\r\n\r\n  commonResponse(data){\r\n    this.showSpinner=false;\r\n    this.ownerData = data.dbResponse[0];\r\n    if(!(this.ownerData[0] && this.ownerData[0].idOwner)){\r\n      this.displayText=\"No Record Found\"\r\n    }\r\n    this._commonService.emitActiveType('owners');\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\" container\\\">\\r\\n  <div class=\\\"formStyle row justify-content-center childContainer s-bg\\\">\\r\\n    <div class=\\\" col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\r\\n        <!-- <app-society-header></app-society-header> -->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col text-center\\\">\\r\\n          <h1><b>{{pageTitle3}}</b></h1>\\r\\n          <!-- <p>{{pageDesc3}}</p> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"row align-items-center text-center\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <form class=\\\"formStyle\\\" name=\\\"form\\\" #sf=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                      <mat-select name=\\\"societyIdName\\\" placeholder=\\\"Select Society\\\"  [(ngModel)]=\\\"buildingreg.societyid\\\">\\r\\n                        <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\" >\\r\\n                          {{s.societyname}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput name=\\\"buildingName\\\" class=\\\"form-control\\\" placeholder=\\\"Building Name\\\" #bname=\\\"ngModel\\\" [(ngModel)]=\\\"buildingreg.buildingName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                  <button mat-raised-button color=\\\"primary\\\">Register</button>\\r\\n                </div>\\r\\n            </form>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from './../../services/user.service';\r\nimport { RegisterService } from './../register.service'\r\n\r\n@Component({\r\n  selector: 'app-building-reg',\r\n  templateUrl: './building-reg.component.html',\r\n  styleUrls: ['./building-reg.component.css']\r\n})\r\nexport class BuildingRegComponent implements OnInit {\r\n\r\n  pageTitle3 = \"Building Register\";\r\n  pageDesc3 = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\r\n\r\n  societyList;\r\n\r\n  buildingreg={\r\n    societyid:\"\",\r\n    buildingName:\"\"\r\n  }\r\n\r\n  constructor(public _userService : UserService, public _registerservice : RegisterService) { }\r\n\r\n  ngOnInit() {\r\n    this._userService.getSociety().subscribe((data) => {\r\n      this.societyList = data.dbResponse;\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.societyList = error.message;\r\n      });\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(\"**on submit method**\",this.buildingreg);\r\n    this._registerservice.registerBuilding(this.buildingreg).subscribe((data)=> {\r\n      console.log(\"api reponse is\",data);\r\n      alert(\"building info added succesfully\");\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center childContainer s-bg\\\">\\r\\n    <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\r\\n        <!-- <app-society-header></app-society-header> -->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col text-center\\\">\\r\\n          <h1><b>{{pageTitle2}}</b></h1>\\r\\n          <!-- <p>{{pageDesc2}}</p> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"row align-items-center text-center\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <form class=\\\"formStyle\\\" name=\\\"form\\\" #sf=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput name=\\\"flatName\\\" class=\\\"form-control\\\" placeholder=\\\"Flat Name\\\" #fname=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.flatName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput name=\\\"buildingName\\\" class=\\\"form-control\\\" placeholder=\\\"Building Name\\\" #bname=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.buildingName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"societyIdName\\\" placeholder=\\\"Select Society\\\" #sname=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.societyId\\\">\\r\\n                      <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\" >\\r\\n                        {{s.societyname}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput name=\\\"ownerId\\\" class=\\\"form-control\\\" placeholder=\\\"Owner ID\\\" #oid=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.ownerid\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput name=\\\"tenantId\\\" class=\\\"form-control\\\" placeholder=\\\"Tenant ID\\\" #oid=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.tenantid\\\">\\r\\n                  </mat-form-field>\\r\\n                </div> -->\\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                  <button mat-raised-button color=\\\"primary\\\">Register</button>\\r\\n                </div>\\r\\n            </form>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from './../../services/user.service';\r\nimport { RegisterService } from './../register.service'\r\n  import { from } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-flat-reg',\r\n  templateUrl: './flat-reg.component.html',\r\n  styleUrls: ['./flat-reg.component.css']\r\n})\r\nexport class FlatRegComponent implements OnInit {\r\n\r\n  pageTitle2 = \"Flat Register\";\r\n  pageDesc2 = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\r\n\r\n  societyList;\r\n\r\n  flatreg={\r\n    flatName:\"\",\r\n    buildingName:\"\",\r\n    societyId:\"\"\r\n    //ownerid:\"\",\r\n    //tenantid:\"\"\r\n  }\r\n  constructor(public _userService : UserService, public _registerservice : RegisterService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this._userService.getSociety().subscribe((data) => {\r\n      this.societyList = data.dbResponse;\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.societyList = error.message;\r\n      });\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    console.log(\"**on submit**\",this.flatreg);\r\n    this._registerservice.registerFlat(this.flatreg).subscribe((data)=> {\r\n      console.log(\"**response from api**\",data);\r\n      alert(\"flat info submitted sucessfully\");\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center childContainer s-bg\\\">\\r\\n      <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\r\\n          <!-- <app-society-header></app-society-header> -->\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col text-center\\\">\\r\\n            <h1><b>{{pageTitle1}}</b></h1>\\r\\n            <!-- <p>{{pageDesc1}}</p> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"row align-items-center text-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <form class=\\\"formStyle\\\" #form1=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <div class=\\\"form-group\\\"> \\r\\n                      <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input matInput name=\\\"name\\\" class=\\\"form-control\\\" #owner=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.ownerName\\\" placeholder=\\\"Owner Name\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"> \\r\\n                      <mat-form-field class=\\\"example-full-width\\\">\\r\\n                          <input matInput name=\\\"email\\\" class=\\\"form-control\\\" #emailid=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.email\\\" placeholder=\\\"Email\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"> \\r\\n                      <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input matInput  name=\\\"phoneno\\\" class=\\\"form-control\\\" pattern=\\\"\\\\d{10}$\\\" #telno=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.phoneNumber\\\" placeholder=\\\"Phone\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"> \\r\\n                      <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input matInput  name=\\\"age\\\" class=\\\"form-control\\\" #ageno=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.age\\\" placeholder=\\\"Age\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <h5>Gender</h5>\\r\\n                    <div class=\\\"form-group\\\"> \\r\\n                    <mat-radio-group name=\\\"gender\\\" [(ngModel)]=\\\"ownerreg.gender\\\">\\r\\n                        <mat-radio-button value=1>Male</mat-radio-button>\\r\\n                        <mat-radio-button value=2>Female</mat-radio-button>\\r\\n                      </mat-radio-group>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"> \\r\\n                      <mat-form-field class=\\\"example-full-width\\\">\\r\\n                          <input matInput  name=\\\"password\\\" class=\\\"form-control\\\" #cname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.password\\\" placeholder=\\\"Password\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"from-check\\\">\\r\\n                        <mat-checkbox name=\\\"isAdmin\\\" (change)=\\\"checkAdminFlag(isSocietyAdmin)\\\" [(ngModel)]=\\\"isSocietyAdmin\\\">Is Society Admin?</mat-checkbox>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\">\\r\\n                          <input matInput name=\\\"flatName\\\" class=\\\"form-control\\\" placeholder=\\\"Flat Name\\\" #fname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.flatName\\\">\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\">\\r\\n                          <input matInput name=\\\"buildingName\\\" class=\\\"form-control\\\" placeholder=\\\"Building Name\\\" #bname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.buildingName\\\">\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field>\\r\\n                          <mat-select name=\\\"societyIdName\\\" placeholder=\\\"Select Society\\\" #sname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.societyId\\\">\\r\\n                            <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\" >\\r\\n                              {{s.societyname}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    <div class=\\\"form-group text-center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\">Register</button>\\r\\n                    </div>\\r\\n                \\r\\n                  </form>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <router-outlet></router-outlet>\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterService } from './../register.service';\r\nimport { UserService } from './../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-owner-reg',\r\n  templateUrl: './owner-reg.component.html',\r\n  styleUrls: ['./owner-reg.component.css']\r\n})\r\nexport class OwnerRegComponent implements OnInit {\r\n\r\n  pageTitle1 = \"Owner Register\";\r\n  pageDesc1 = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\r\n  societyList;\r\n  ownerreg={\r\n    ownerName:\"\",\r\n    email:\"\",\r\n    phoneNumber:\"\",\r\n    age:\"\",\r\n    gender:1,\r\n    type:3,\r\n    password:\"\",\r\n    flatName:\"\",\r\n    buildingName:\"\",\r\n    societyId:\"\"\r\n  }\r\n  isSocietyAdmin:false;\r\n  constructor(public _userService : UserService,public _registerservice : RegisterService) { }\r\n\r\n  ngOnInit() {\r\n    this._userService.getSociety().subscribe((data) => {\r\n      this.societyList = data.dbResponse;\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.societyList = error.message;\r\n      });\r\n  }\r\n\r\n  checkAdminFlag(isAdminFlag){\r\n    isAdminFlag?this.ownerreg.type=2:this.ownerreg.type=3;\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(this.ownerreg);\r\n    this._registerservice.registerOwner(this.ownerreg).subscribe((data)=> {\r\n      console.log(\"data is\",data);\r\n      alert(\"owner info added sucessfully\");\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n.societyImage{\\r\\n    background-image:url('banner.png');\\r\\n}\\r\\n\\r\\n\\r\\n.mainContainer{\\r\\n    background-color: white;\\r\\n    margin-top:1em;\\r\\n    -ms-box-shadow: 0 3px 6px rgba(184, 157, 157, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n    -o-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);    \\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center mainContainer\\\">\\r\\n        \\r\\n      <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\r\\n          <app-society-header></app-society-header>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col text-center\\\">\\r\\n            <h1><b>{{pageTitle}}</b></h1>\\r\\n            <p class=\\\"text-h3\\\">{{pageDesc}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n                    <div routerLink=\\\"society-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\r\\n                      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                        <path d=\\\"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\\\" />\\r\\n                        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\r\\n                      Society</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n                    <div routerLink=\\\"building-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\r\\n                      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n                        <path d=\\\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\\\" /></svg>\\r\\n                      Buildings</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n                    <div routerLink=\\\"flat-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\r\\n                        <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n                            <path d=\\\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\\\" /></svg>\\r\\n                      Flats</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n                    <div routerLink=\\\"owner-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\r\\n                        <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n                            <path d=\\\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\\\" /></svg>\\r\\n                      owners</div>\\r\\n                  </div>\\r\\n                </div>   \\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"text-center contentContainer\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register-member',\r\n  templateUrl: './register-member.component.html',\r\n  styleUrls: ['./register-member.component.css']\r\n})\r\nexport class RegisterMemberComponent {\r\n\r\n  model: any = {};\r\n  StoreArray:Array<any> = [];\r\n  Debitcard:boolean = false;\r\n  tenantDetails:boolean = false;\r\n  \r\n  pageTitle = \"Register\";\r\n  pageDesc = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\r\n  formLabelNames = {\r\n    flatno: \"Flat Number\",\r\n    ownerFname : \"Owner First Name\",\r\n    ownerLname : \"Owner Last Name\",\r\n    phone : \"Phone Number\",\r\n    paymentmethod :\"Payment Method\",\r\n    paymentmethodValue : ['Cash','Debit/Credit Card','Cheque'],\r\n    paymentamount :\"Payment amount\",\r\n    flatrented: \"Flat Rented\",\r\n    rentedYes: \"Yes\",\r\n    rentedNo: \"No\",\r\n    memPswd: \"Password\",\r\n    memConfrmPswd: \"Confirm Password\",\r\n  }\r\n\r\n  onSubmit() {   \r\n    this.StoreArray.push(JSON.stringify(this.model));\r\n  }\r\n\r\n  clickCard(){\r\n    this.Debitcard=!this.Debitcard\r\n  }\r\n  \r\n  radioChange($event) {\r\n    var RadioValue = $event.target.value;\r\n    if(RadioValue==\"Yes\")\r\n     this.tenantDetails=true;\r\n    else \r\n      this.tenantDetails=false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport * as config from \"./../config.json\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postSocietyUrl= config.default.HOST_NAME+\"/society/registerSociety\";\r\n  postOwnerUrl= config.default.HOST_NAME+\"/society/registerOwner\";\r\n  postFlatUrl= config.default.HOST_NAME+\"/society/registerFlat\";\r\n  postBuildingUrl= config.default.HOST_NAME+\"/society/registerBuilding\";\r\n  \r\n\r\n  registerSociety(societyreg){\r\n    return this.http.post(this.postSocietyUrl, societyreg);\r\n  }\r\n\r\n  registerOwner(ownerreg){\r\n    return this.http.post(this.postOwnerUrl, ownerreg);\r\n  }\r\n\r\n  registerFlat(flatreg){\r\n    return this.http.post(this.postFlatUrl, flatreg);\r\n  }\r\n\r\n  registerBuilding(buildingreg){\r\n    return this.http.post(this.postBuildingUrl, buildingreg);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center childContainer s-bg\\\">\\r\\n    <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\r\\n        <!-- <app-society-header></app-society-header> -->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col text-center\\\">\\r\\n          <h1><b>{{pageTitle}}</b></h1>\\r\\n          <!-- <p>{{pageDesc}}</p> -->\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <div class=\\\"row align-items-center text-center\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <form class=\\\"formStyle\\\" name=\\\"form\\\" #sf=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput name=\\\"societyName\\\" class=\\\"form-control\\\" placeholder=\\\"Society Name\\\" #sname=\\\"ngModel\\\" [(ngModel)]=\\\"societyreg.societyName\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <textarea matInput name=\\\"societyAddress\\\" class=\\\"form-control\\\" placeholder=\\\"Society Address\\\" #sadd=\\\"ngModel\\\" [(ngModel)]=\\\"societyreg.address\\\"></textarea>\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input matInput name=\\\"societyNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Pincode\\\" #pcode=\\\"ngModel\\\" [(ngModel)]=\\\"societyreg.pincode\\\">\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"form-group text-center\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\">Register</button>\\r\\n              </div>\\r\\n          </form>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterService } from './../register.service';\r\nimport { from } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-society-reg',\r\n  templateUrl: './society-reg.component.html',\r\n  styleUrls: ['./society-reg.component.css']\r\n})\r\nexport class SocietyRegComponent implements OnInit {\r\n\r\n  pageTitle = \"Society Register\";\r\n  pageDesc = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\r\n\r\n  societyreg={\r\n    societyName:\"\",\r\n    address:\"\",\r\n    pincode:\"\"\r\n  }\r\n\r\n  constructor(public _registerservice : RegisterService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(\"**Before calling api**\",this.societyreg);\r\n    this._registerservice.registerSociety(this.societyreg).subscribe((data)=> {\r\n      console.log(\"**response from api**\",data);\r\n      alert(\"society info added sucessfully\")\r\n    });\r\n  }\r\n\r\n}\r\n","import {CanActivate, Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {TokenService} from './token.service';\r\nimport { throwError, Observable,of } from 'rxjs';\r\nimport {ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router/src/router_state';\r\n\r\n\r\n@Injectable()\r\nexport class NeedAuthGuard implements CanActivate {\r\n\r\n  constructor(private _tokenService: TokenService, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean|Observable<boolean>{\r\n\r\n    const redirectUrl = route['_routerState']['url'];\r\n\r\n   /* if (this._tokenService.isLogged()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigateByUrl(\r\n        this.router.createUrlTree(\r\n          ['/login'], {\r\n            queryParams: {\r\n              redirectUrl\r\n            }\r\n          }\r\n        )\r\n      );\r\n      return false;\r\n    } */\r\n\r\n\r\n      return new Observable<boolean>((observer) => {\r\n        this._tokenService.isLogged().subscribe(isValid => {\r\n          if(isValid) {\r\n            console.log(\"token is valid*****\");\r\n            observer.next(true);\r\n          } else {\r\n            this.router.navigateByUrl(\r\n              this.router.createUrlTree(\r\n                ['login'], {\r\n                  queryParams: {\r\n                    redirectUrl:redirectUrl\r\n                  }\r\n                }\r\n              )\r\n            );\r\n            observer.next(false);\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n  \r\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport * as config from \"./../config.json\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  TOKEN = \"TOKEN\"\r\n  login(email: string, password: string): Observable<any>{\r\n    return this.http.post(config.default.HOST_NAME+'/users/login', {\r\n      email: email,\r\n      password: password\r\n    });\r\n  }\r\n\r\n  getUser(){\r\n    let headers = new HttpHeaders().set('token',localStorage.getItem(this.TOKEN));\r\n    return this.http.get(config.default.HOST_NAME+\"/users/getUser\",{\r\n      headers:headers\r\n    })\r\n\r\n  }\r\n\r\n  \r\n\r\n}","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n  @Output()\r\n  calenderData=new EventEmitter<any>();\r\n  eventCalenderData=new EventEmitter<any>();\r\n  eventShowList=new EventEmitter<any>();\r\n  eventIsActiveType = new EventEmitter<any>();\r\n  private loginUserSubject = new BehaviorSubject(null);\r\n  loginUserInfo = this.loginUserSubject.asObservable();\r\n  // eventOwnerRequestObj = new EventEmitter<any>();\r\n  eventOwnerRequestObj;\r\n  constructor() { }\r\n\r\n  emitCalanderData(paymentHistory){\r\n    this.calenderData.emit(paymentHistory)  \r\n  }\r\n\r\n  emitEventCalanderData(societyEvents){\r\n    this.eventCalenderData.emit(societyEvents)  \r\n  }\r\n\r\n  emitShowListEvent(showListEvent){\r\n    this.eventShowList.emit(showListEvent)  \r\n  }\r\n\r\n  emitActiveType(type){\r\n    this.eventIsActiveType.emit(type) \r\n  }\r\n\r\n  emitOwnerListRequestobj(obj){\r\n    this.eventOwnerRequestObj = obj\r\n  }\r\n\r\n  setLoginUserInfo(message: string) {\r\n    this.loginUserSubject.next(message)\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { CommonService } from './common.service';\r\nimport * as config from \"./../config.json\";\r\n\r\nconst TOKEN = 'TOKEN';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n  validateTokenUrl = config.default.HOST_NAME+\"/users/validateToken\";\r\n  constructor(private http: HttpClient, private _commonService:CommonService) {\r\n  }\r\n\r\n  setToken(token: string): void {\r\n    localStorage.setItem(TOKEN, token);\r\n  }\r\n\r\n  isValidToken(token): Observable<any> {\r\n    let headers = new HttpHeaders().set('token',token);\r\n    console.log(`${this.validateTokenUrl}`);\r\n    return this.http.get(`${this.validateTokenUrl}`,{\r\n      headers:headers\r\n    }).pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n   ));\r\n  }\r\n\r\n  isLogged() :Observable<any> {\r\n    return new Observable(observer => {\r\n      let token = localStorage.getItem(TOKEN)\r\n      if(token) {\r\n        this.isValidToken(token).subscribe(data=>{\r\n          if(data.error == 0){\r\n          //  alert(token);\r\n          this._commonService.setLoginUserInfo(data);\r\n            observer.next(true);\r\n          } else {\r\n            alert(\"User is not Valid\");\r\n            observer.next(false);\r\n          }\r\n        }, error=>{\r\n          //alert(\"Error:\"+JSON.stringify(error));\r\n          observer.next(false);\r\n        })\r\n      } else {\r\n       //alert(\"Please login first\");\r\n       observer.next(false);\r\n      }\r\n    })\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as config from \"./../config.json\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  TOKEN = 'TOKEN';\r\n  constructor(public http: HttpClient) { }\r\n\r\n  getSocietyURL = config.default.HOST_NAME + \"/society/society\";\r\n  getBuildingsURL = config.default.HOST_NAME + \"/society/building\";\r\n  getOwnerURL = config.default.HOST_NAME + \"/society/owner\";\r\n  getFlatURL = config.default.HOST_NAME + \"/society/flat\";\r\n  putPayment = config.default.HOST_NAME + \"/society/flat/pendingPayment\";\r\n  flatPaymentHistory = config.default.HOST_NAME + \"/society/paymenthistory\";\r\n  societyEventURL = config.default.HOST_NAME + \"/society/societyEvent\";\r\n  selectedTypeList = config.default.HOST_NAME + \"/society/owner/list\";\r\n  callStoredProcUrl = config.default.HOST_NAME + \"/society/storedProc\";\r\n\r\n  getOwner(query): Observable<any> {\r\n    console.log(`${this.getOwnerURL}/phonenumber/?value='${query.oPhoneNumber}'`);\r\n    return this.http.get(`${this.getOwnerURL}/phonenumber/?value='${query.oPhoneNumber}'`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  getOwnerByID(ownerId): Observable<any> {\r\n    console.log(`${this.getOwnerURL}/ownerid/?value='${ownerId}'`);\r\n    return this.http.get(`${this.getOwnerURL}/ownerid/?value=${ownerId}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  getAllOwners(): Observable<any> {\r\n    console.log(`${this.getOwnerURL}`);\r\n    return this.http.get(`${this.getOwnerURL}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getSociety(): Observable<any> {\r\n    return this.http.get(`${this.getSocietyURL}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getSocietyInfo(id): Observable<any> {\r\n    console.log(`${this.getSocietyURL}/societyid/?value=${id}`);\r\n    return this.http.get(`${this.getSocietyURL}/societyid/?value=${id}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getBuilding(socID): Observable<any> {\r\n    return this.http.get(`${this.getBuildingsURL}/societyid/?value=${socID}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getFlatList(societyId, buildingname): Observable<any> {\r\n    console.log(`${this.getFlatURL}/buildingname/?value=${buildingname}`);\r\n    return this.http.get(`http://nodebw-env.xctnnannuz.us-east-1.elasticbeanstalk.com/society/flat/societyid/buildingname/?value1=${societyId}&value2=\"${buildingname}\"`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  getOwnerFlatList(ownerId): Observable<any> {\r\n    console.log(`${this.getFlatURL}/ownerid/?value=${ownerId}`);\r\n    return this.http.get(`${this.getFlatURL}/ownerid/?value=${ownerId}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  getOwnerList(flatIds): Observable<any> {\r\n    console.log(`${this.getOwnerURL}/flatIds/?value=${flatIds}`);\r\n    return this.http.get(`${this.getOwnerURL}/flatIds/?value='${flatIds}'`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  putFlatPayment(flatObj): Observable<any> {\r\n    let headers = new HttpHeaders().set('token', localStorage.getItem(this.TOKEN));\r\n    console.log(flatObj);\r\n    let paramList = {\r\n      \"pendingPayment\": flatObj.pendingPayment,\r\n      \"ownerid\": flatObj.ownerid,\r\n      \"flatid\": flatObj.flatid\r\n    };\r\n    console.log(paramList);\r\n    return this.http.put(this.putPayment, paramList, { headers: headers })\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getFlatPaymentHistory(flatId): Observable<any> {\r\n    console.log(\"uuuuuuuu\", `${this.flatPaymentHistory}/flatid/?value=${flatId}`);\r\n    return this.http.get(`${this.flatPaymentHistory}/flatid/?value=${flatId}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getSocietyEvents(societyId): Observable<any> {\r\n    console.log(`${this.societyEventURL}/societyid/?value='${societyId}'`);\r\n    return this.http.get(`${this.societyEventURL}/societyid/?value='${societyId}'`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  callStoredProc(storedProcString): Observable<any> {\r\n    const postObj = {\r\n        storedProc:storedProcString\r\n    }\r\n    console.log(`${this.callStoredProcUrl}`);\r\n    return this.http.post(`${this.callStoredProcUrl}`,postObj)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  getSelectedTypelist(societyIds, buildingNames, flatIds) {\r\n    let headers = new HttpHeaders().set('token', localStorage.getItem(this.TOKEN));\r\n    let searchObject = {\r\n      \"societyIds\": societyIds,\r\n      \"buildingNames\": buildingNames,\r\n      \"flatIds\": flatIds\r\n    }\r\n    console.log(\"searchObject \", searchObject);\r\n    return this.http.post(this.selectedTypeList, searchObject, {\r\n      headers: headers\r\n    })\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-3 text-left\\\">\\r\\n    <img routerLink=\\\"/home\\\" src=\\\"assets/logo.png\\\" class=\\\"img-fluid logo-img\\\" />\\r\\n  </div>\\r\\n<!-- <div class=\\\"col-xs-3 col-sm-3 text-right\\\">\\r\\n  <div class=\\\"home-btn\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"back()\\\">Back</button>\\r\\n  </div>\\r\\n</div> -->\\r\\n<!-- <div class=\\\"col-xs-3 col-sm-3 text-right\\\">\\r\\n  <div routerLink=\\\"/societyManagment/society\\\" class=\\\"home-btn\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\">Go To Society Page</button>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n  <!-- <div class=\\\"col-xs-3 col-sm-3 text-right\\\">\\r\\n    <div routerLink=\\\"/home\\\" class=\\\"home-btn\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\">Home</button>\\r\\n    </div>\\r\\n  </div> -->\\r\\n  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n      <button mat-stroked-button (click)=\\\"back()\\\">\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\\\"/></svg>\\r\\n        Back\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n    <button mat-stroked-button routerLink=\\\"/home\\\">\\r\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n        <path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\" />\\r\\n        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\r\\n      Home\\r\\n    </button>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n \\r\\n<!-- </div>\\r\\n<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\r\\n    \\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Logo</a>\\r\\n  \\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 1</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 2</a>\\r\\n      </li>\\r\\n  \\r\\n      \\r\\n      <li class=\\\"nav-item dropdown\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbardrop\\\" data-toggle=\\\"dropdown\\\">\\r\\n          Dropdown link\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\">\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 1</a>\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 2</a>\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 3</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport {Location} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-society-header',\r\n  templateUrl: './society-header.component.html',\r\n  styleUrls: ['./society-header.component.css']\r\n})\r\nexport class SocietyHeaderComponent implements OnInit {\r\n\r\n  constructor(private _location: Location) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  back(){\r\n    this._location.back();\r\n  }\r\n\r\n}\r\n","module.exports = \"#content{\\r\\n    overflow:scroll;\\r\\n}\"","module.exports = \"<div class=\\\"container mainContainer\\\">\\r\\n    <app-society-header></app-society-header>\\r\\n    <div *ngIf=\\\"loginUserInfo && loginUserInfo.name\\\">\\r\\n      Welcome {{loginUserInfo.name}}<br>\\r\\n      Id: {{loginUserInfo.id}}<br>\\r\\n      {{loginUserInfo.email}}<br>\\r\\n      {{loginUserInfo.phone}}<br>\\r\\n      {{loginUserInfo.age}}\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"row col-md-12 text-center\\\">\\r\\n      <div class=\\\"col-md-3\\\"></div>\\r\\n      <div *ngIf=\\\"!isLogged\\\" class=\\\"col-md-3\\\"> \\r\\n        <div routerLink=\\\"/login\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">Login</div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isLogged\\\" class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"btn btn-outline-warning homeicons w-100\\\" (click)=\\\"logout()\\\">Logout</div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div routerLink=\\\"/register\\\" class=\\\"btn btn-outline-danger homeicons w-100\\\"> Register</div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\"></div>\\r\\n    </div>\\r\\n    <!--<mat-divider></mat-divider>-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 text-center contentContainer\\\">\\r\\n      <br>\\r\\n      <h2><b>I Love My Society</b></h2>\\r\\n      \\r\\n      <mat-progress-bar mode=\\\"determinate\\\" [value]=\\\"progressPercent\\\"></mat-progress-bar>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n          <div routerLink=\\\"/societyManagment/society\\\" class=\\\"btn  homeicons w-100\\\" [class.btn-success]=\\\"buttonClickObj.society\\\" [class.btn-outline-warning]=\\\"!buttonClickObj.society\\\" (click)=\\\"ShowModal('society')\\\">\\r\\n            <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n              <path d=\\\"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\\\" />\\r\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\r\\n            Society</div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n          <div (click)=\\\"ShowModal('buildings')\\\"\\r\\n            class=\\\"btn homeicons w-100\\\" [class.btn-success]=\\\"buttonClickObj.building\\\" [class.btn-outline-warning]=\\\"!buttonClickObj.building\\\">\\r\\n            <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n              <path d=\\\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\\\" /></svg>\\r\\n            Buildings</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n          <div (click)=\\\"ShowModal('flats')\\\" class=\\\"btn homeicons w-100\\\"  [class.btn-success]=\\\"buttonClickObj.flat\\\" [class.btn-outline-warning]=\\\"!buttonClickObj.flat\\\">\\r\\n              <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                  <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n                  <path d=\\\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\\\" /></svg>\\r\\n            Flats</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\r\\n          <div (click)=\\\"ShowModal('owners')\\\" class=\\\"btn homeicons w-100\\\"  [class.btn-success]=\\\"buttonClickObj.owner\\\" [class.btn-outline-warning]=\\\"!buttonClickObj.owner\\\">\\r\\n              <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                  <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n                  <path d=\\\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\\\" /></svg>\\r\\n            owners</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"showSpinner\\\">\\r\\n          <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"modalVar\\\" [hidden]=\\\"showSpinner\\\">\\r\\n        <app-modal [modalName]=\\\"modalVar\\\"></app-modal>\\r\\n      </div>\\r\\n\\r\\n      <div id=\\\"content\\\" *ngIf=\\\"showList\\\" [hidden]=\\\"showSpinner\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\r\\n        <img src=\\\"assets/banner.png\\\">\\r\\n      </div> -->\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from './services/token.service'\r\nimport { CommonService } from './services/common.service'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-society-mgmt',\r\n  templateUrl: './society-mgmt.component.html',\r\n  styleUrls: ['./society-mgmt.component.css']\r\n})\r\nexport class SocietyMgmtComponent implements OnInit {\r\n  modalVar;\r\n  isLogged = false;\r\n  showList=true;\r\n  showSpinner;\r\n  progressPercent =0;\r\n  buttonClickObj={\r\n    society:false,\r\n    building:false,\r\n    flat:false,\r\n    owner:false\r\n  };\r\n  loginUserInfo = {\r\n    name:\"\",\r\n    id:\"\",\r\n    email:\"\",\r\n    phone:\"\"\r\n  }\r\n\r\n  constructor(private _activateroute: \r\n    ActivatedRoute,public _tokenService : TokenService, public router: Router, public _commonService:CommonService ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"tttttttt\",localStorage.getItem('TOKEN'));\r\n    this._tokenService.isLogged().subscribe(flag=>{\r\n      if(flag){\r\n        this.isLogged = true; \r\n        this.getLoginUserData();\r\n      } else {\r\n        this.isLogged = false; \r\n      }\r\n    });\r\n    \r\n    this._commonService.eventShowList.subscribe((showEvent)=>{\r\n        if(showEvent) {\r\n            this.showList = true;\r\n        } else {\r\n          this.showList = false;\r\n        }\r\n    })\r\n\r\n    this.changeButtonColor();\r\n    \r\n  }\r\n\r\n  getLoginUserData(){\r\n    this._commonService.loginUserInfo.subscribe((userInfo)=>{\r\n      this.loginUserInfo.name = userInfo.data.ownername;\r\n      this.loginUserInfo.id = userInfo.data.ownerid;\r\n      this.loginUserInfo.phone = userInfo.data.phoneNumber;\r\n      this.loginUserInfo.email = userInfo.data.email;\r\n    })\r\n  }\r\n\r\n  changeButtonColor() {\r\n    this._commonService.eventIsActiveType.subscribe((value) => {\r\n      if(value==\"owners\") {\r\n        this.enableFields(true, true,true,true);\r\n      } else if(value==\"flats\") {\r\n        this.enableFields(true, true,true);\r\n      } else if(value==\"buildings\") {\r\n        this.enableFields(true, true);\r\n      } else {\r\n        this.enableFields(true);\r\n      }\r\n    },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  ShowModal(type){\r\n    this.showSpinner = true;\r\n    if(type == 'flats' || type == 'owners') {\r\n      this._tokenService.isLogged().subscribe(flag=>{\r\n        if(flag){\r\n          this.router.navigateByUrl('/societyManagment');\r\n          this.modalVar = type;\r\n          this.showSpinner = false;\r\n         // this.showList = false;\r\n        } else {\r\n          this.showList = false;\r\n          alert(\"Please login first\");\r\n          this.router.navigateByUrl('/login');\r\n          this.showSpinner = false;\r\n        }\r\n      });\r\n      if(type == 'flats'){\r\n        this.enableFields(true, true,true);\r\n      } else {\r\n        this.enableFields(true, true,true,true);\r\n      }\r\n    } else if(type == 'buildings'){\r\n      this.enableFields(true, true);\r\n      setTimeout(()=>{\r\n        this.router.navigateByUrl('/societyManagment');\r\n        this.modalVar = type; \r\n        this.showSpinner = false;\r\n      },0)\r\n\r\n    } else {\r\n      setTimeout(()=>{\r\n        this.progressPercent=25;\r\n        this.enableFields(true);\r\n        this.showList = true;\r\n        this.modalVar = type; \r\n        this.showSpinner = false;\r\n      },0)\r\n    }   \r\n  }\r\n\r\n  enableFields(society=false,building=false,flat=false,owner=false){\r\n    this.progressPercent = owner? 100:(flat? 75:building? 50: society? 25:0);\r\n    this.buttonClickObj.society=society;\r\n    this.buttonClickObj.building=building;\r\n    this.buttonClickObj.flat = flat;\r\n    this.buttonClickObj.owner=owner;\r\n  }\r\n  \r\n  logout(){\r\n    localStorage.setItem('TOKEN', \"\");\r\n    this.isLogged = false; \r\n    this.router.navigateByUrl('/societyManagment');\r\n    window.location.reload();\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .tableClass {\\r\\n   font-weight: bold; \\r\\n  }\"","module.exports = \"<div class=\\\"tableClass\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <table class=\\\"tableClass\\\"  mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"societyid\\\">\\r\\n      <th mat-cell *matHeaderCellDef> Society Id </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.societyid}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"societyname\\\">\\r\\n      <th mat-cell *matHeaderCellDef> Society Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.societyname}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"address\\\">\\r\\n      <th mat-cell *matHeaderCellDef> Address </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"pincode\\\">\\r\\n      <th mat-cell *matHeaderCellDef> Pincode </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.pincode}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"showBuilding\\\">\\r\\n      <th mat-cell *matHeaderCellDef> Show Buildings </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-stroked-button (click)=\\\"goToBuilding(element.societyid)\\\">             <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\r\\n        <path d=\\\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\\\" /></svg>Buildings\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"delete\\\">\\r\\n      <th mat-cell *matHeaderCellDef>delete </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-stroked-button (click)=\\\"deleteBuilding(element.societyid)\\\"> <svg\\r\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n            <path d=\\\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\\\" />\\r\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator class=\\\"tableClass\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\\r\\n<!-- <div [hidden]=\\\"!(societyInfo && societyInfo[0]?.societyid)\\\">\\r\\n    <event-calendar-component></event-calendar-component>\\r\\n</div>  -->\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from \"../services/user.service\"\r\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\r\nimport { OnChanges } from '@angular/core';\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { CommonService } from '../services/common.service'\r\n\r\n@Component({\r\n  selector: 'app-society',\r\n  templateUrl: './society.component.html',\r\n  styleUrls: ['./society.component.css']\r\n})\r\nexport class SocietyComponent implements OnInit {\r\n  displayedColumns: string[];\r\n  dataSource;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  society: any; param1; societyInfo: any = undefined;\r\n\r\n  constructor(public _userService: UserService, public router: Router,\r\n    private route: ActivatedRoute, public _commonService: CommonService) { }\r\n\r\n  ngOnInit() { \r\n    this._userService.getSociety().subscribe((data) => {\r\n      this.society = data.dbResponse;\r\n      this.displayedColumns   = ['societyid', 'societyname', 'address', 'pincode','showBuilding', 'delete'];\r\n      const ELEMENT_DATA: societyField[] =data.dbResponse;\r\n      this.dataSource = new MatTableDataSource<societyField>(ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this._commonService.emitActiveType('society');\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.society = error.message;\r\n      });\r\n  }\r\n\r\n  onSelect(societyid) {\r\n    this._userService.getSocietyEvents(societyid).subscribe((societyEvevts) => {\r\n      this._commonService.emitEventCalanderData(societyEvevts.dbResponse)\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.society = error.message;\r\n      });\r\n    this._userService.getSocietyInfo(societyid).subscribe((data) => {\r\n      this.societyInfo = data.dbResponse;\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        this.society = error.message;\r\n      });\r\n  }\r\n  goToBuilding(societyId){\r\n      this.router.navigate(['societyManagment', societyId, 'buildings']);\r\n      this._commonService.emitShowListEvent(true);\r\n  }\r\n\r\n}\r\n\r\nexport interface societyField {\r\n  societyid: string;\r\n  societyname: number;\r\n  address: number;\r\n  pincode: string;\r\n}","module.exports = \"\"","module.exports = \"<p>\\n  tenant works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tenant',\n  templateUrl: './tenant.component.html',\n  styleUrls: ['./tenant.component.css']\n})\nexport class TenantComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}