{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/material-module.ts","webpack:///./src/app/society-mgmt/building/building.component.css","webpack:///./src/app/society-mgmt/building/building.component.html","webpack:///./src/app/society-mgmt/building/building.component.ts","webpack:///./src/app/society-mgmt/calendar/calendar.component.css","webpack:///./src/app/society-mgmt/calendar/calendar.component.html","webpack:///./src/app/society-mgmt/calendar/calendar.component.ts","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.css","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.html","webpack:///./src/app/society-mgmt/event-calendar/event-calendar.component.ts","webpack:///./src/app/society-mgmt/flats/flats.component.css","webpack:///./src/app/society-mgmt/flats/flats.component.html","webpack:///./src/app/society-mgmt/flats/flats.component.ts","webpack:///./src/app/society-mgmt/login/login.component.css","webpack:///./src/app/society-mgmt/login/login.component.html","webpack:///./src/app/society-mgmt/login/login.component.ts","webpack:///./src/app/society-mgmt/modal/modal.component.css","webpack:///./src/app/society-mgmt/modal/modal.component.html","webpack:///./src/app/society-mgmt/modal/modal.component.ts","webpack:///./src/app/society-mgmt/owners/owners.component.css","webpack:///./src/app/society-mgmt/owners/owners.component.html","webpack:///./src/app/society-mgmt/owners/owners.component.ts","webpack:///./src/app/society-mgmt/register/building-reg/building-reg.component.css","webpack:///./src/app/society-mgmt/register/building-reg/building-reg.component.html","webpack:///./src/app/society-mgmt/register/building-reg/building-reg.component.ts","webpack:///./src/app/society-mgmt/register/flat-reg/flat-reg.component.css","webpack:///./src/app/society-mgmt/register/flat-reg/flat-reg.component.html","webpack:///./src/app/society-mgmt/register/flat-reg/flat-reg.component.ts","webpack:///./src/app/society-mgmt/register/owner-reg/owner-reg.component.css","webpack:///./src/app/society-mgmt/register/owner-reg/owner-reg.component.html","webpack:///./src/app/society-mgmt/register/owner-reg/owner-reg.component.ts","webpack:///./src/app/society-mgmt/register/register-member.component.css","webpack:///./src/app/society-mgmt/register/register-member.component.html","webpack:///./src/app/society-mgmt/register/register-member.component.ts","webpack:///./src/app/society-mgmt/register/register.service.ts","webpack:///./src/app/society-mgmt/register/society-reg/society-reg.component.css","webpack:///./src/app/society-mgmt/register/society-reg/society-reg.component.html","webpack:///./src/app/society-mgmt/register/society-reg/society-reg.component.ts","webpack:///./src/app/society-mgmt/services/NeedAuthGuard.ts","webpack:///./src/app/society-mgmt/services/api.service.ts","webpack:///./src/app/society-mgmt/services/common.service.ts","webpack:///./src/app/society-mgmt/services/token.service.ts","webpack:///./src/app/society-mgmt/services/user.service.ts","webpack:///./src/app/society-mgmt/society-header/society-header.component.css","webpack:///./src/app/society-mgmt/society-header/society-header.component.html","webpack:///./src/app/society-mgmt/society-header/society-header.component.ts","webpack:///./src/app/society-mgmt/society-mgmt.component.css","webpack:///./src/app/society-mgmt/society-mgmt.component.html","webpack:///./src/app/society-mgmt/society-mgmt.component.ts","webpack:///./src/app/society-mgmt/society/society.component.css","webpack:///./src/app/society-mgmt/society/society.component.html","webpack:///./src/app/society-mgmt/society/society.component.ts","webpack:///./src/app/society-mgmt/tenant/tenant.component.css","webpack:///./src/app/society-mgmt/tenant/tenant.component.html","webpack:///./src/app/society-mgmt/tenant/tenant.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n<!-- <calendar-component></calendar-component> -->\\r\\n<!-- <event-calendar-component></event-calendar-component> -->\"","import { Component } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Better World';\r\n  constructor(public router : Router) { }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MaterialModule } from './material-module';\r\nimport { AppComponent } from './app.component';\r\nimport { SocietyMgmtComponent } from './society-mgmt/society-mgmt.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BuildingComponent } from './society-mgmt/building/building.component';\r\nimport { FlatsComponent } from './society-mgmt/flats/flats.component';\r\nimport { OwnersComponent } from './society-mgmt/owners/owners.component';\r\nimport { TenantComponent } from './society-mgmt/tenant/tenant.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { SocietyHeaderComponent } from './society-mgmt/society-header/society-header.component';\r\nimport { RegisterMemberComponent } from './society-mgmt/register/register-member.component';\r\nimport { LoginComponent } from './society-mgmt/login/login.component';\r\nimport { SocietyComponent } from './society-mgmt/society/society.component';\r\nimport { ModalComponent } from './society-mgmt/modal/modal.component';\r\nimport { NeedAuthGuard } from './society-mgmt/services/NeedAuthGuard';\r\nimport { CalendarComponent } from './society-mgmt/calendar/calendar.component';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { EventCalendarComponent } from './society-mgmt/event-calendar/event-calendar.component';\r\nimport { SocietyRegComponent } from './society-mgmt/register/society-reg/society-reg.component';\r\nimport { BuildingRegComponent } from './society-mgmt/register/building-reg/building-reg.component';\r\nimport { FlatRegComponent } from './society-mgmt/register/flat-reg/flat-reg.component';\r\nimport { OwnerRegComponent } from './society-mgmt/register/owner-reg/owner-reg.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: '/home', pathMatch: \"full\" },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"register\", component: RegisterMemberComponent ,\r\n  children:[\r\n  { path: \"society-reg\", component: SocietyRegComponent },\r\n  { path: \"building-reg\", component: BuildingRegComponent },\r\n  { path: \"flat-reg\", component: FlatRegComponent },\r\n  { path: \"owner-reg\", component: OwnerRegComponent }\r\n  ]  \r\n},\r\n  \r\n  { path: \"home\", component: HomeComponent },\r\n  {\r\n    path: \"societyManagment\", component: SocietyMgmtComponent,\r\n\r\n    children: [\r\n      { path: \"society\", component: SocietyComponent },\r\n      { path: \":societyid/buildings\", component: BuildingComponent },\r\n      {\r\n        path: \":societyid/buildings/:buildingName/flats\",\r\n        component: FlatsComponent,\r\n        canActivate: [NeedAuthGuard]\r\n      },\r\n      {\r\n        path: \":societyid/buildings/:buildingName/flats/:flatId/owner\",\r\n        component: OwnersComponent,\r\n        canActivate: [NeedAuthGuard]\r\n      },\r\n      { path: \"owners\", component: OwnersComponent, canActivate: [NeedAuthGuard] },\r\n      { path: \"tenats\", component: TenantComponent, canActivate: [NeedAuthGuard] },\r\n    ]\r\n\r\n  },\r\n  { path: \"error\", component: ErrorComponent },\r\n  { path: \"**\", component: ErrorComponent }\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SocietyMgmtComponent,\r\n    HomeComponent,\r\n    BuildingComponent,\r\n    FlatsComponent,\r\n    OwnersComponent,\r\n    TenantComponent,\r\n    ErrorComponent,\r\n    SocietyHeaderComponent,\r\n    RegisterMemberComponent,\r\n    LoginComponent,\r\n    SocietyComponent,\r\n    ModalComponent,\r\n    CalendarComponent,\r\n    EventCalendarComponent,\r\n    SocietyRegComponent,\r\n    BuildingRegComponent,\r\n    FlatRegComponent,\r\n    OwnerRegComponent   \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes),\r\n    NgbModalModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule\r\n  ],\r\n  providers: [NeedAuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h1>Page not found!!!</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".homeIconList{\\n    background-color: rgba(242, 242,242, .45);\\n    min-width: 220px;\\n    min-height: 80px;\\n    margin: 10px;\\n}\\n.m-r-20 {\\n    margin-right: 20px; }\"","module.exports = \"<div class=\\\"container mainContainer\\\">\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-center\\\">\\n      <img src=\\\"assets/logo.png\\\" class=\\\"img-fluid logo-img\\\" />\\n    </div>\\n    <!--<div class=\\\"col-xs-6 col-sm-6 text-right\\\">\\n      <a routerLink=\\\"/home\\\" class=''>\\n        <img src=\\\"assets/logo.png\\\" class=\\\"img-fluid\\\" />\\n      </a>\\n    </div>-->\\n  </div>\\n  <br>\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\n    <div class=\\\"col-sm-12 text-center\\\">\\n      <h2><b>WELCOME TO SOCIETY MANAGEMENT</b></h2>\\n      \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n      <a routerLink=\\\"/societyManagment\\\">\\n      <button mat-raised-button color=\\\"primary\\\">Society Management</button></a>\\n    </div>\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n      <img src=\\\"assets/banner.png\\\">\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\" *ngIf=\\\"societyInfo\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-left contentContainer\\\">    \\n        Society ID:  {{societyInfo && societyInfo[0]?.societyid}} <BR>\\n      Society Name: {{societyInfo && societyInfo[0]?.societyname}}<br>\\n      Society Address: {{societyInfo && societyInfo[0]?.address}},{{societyInfo && societyInfo[0]?.pincode}}<br>\\n    </div>\\n  </div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n      \\n      <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th>buildingid</th>\\n              <th>buildingname</th>\\n              <th>Flats</th>\\n              <th>delete</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let building of buildingList\\\">\\n              <td>{{building.buildingid}}</td>\\n              <td>{{building.buildingname}}</td>\\n              <td><button mat-stroked-button (click)=\\\"showFlats(societyInfo[0]?.societyid,building.buildingname)\\\">  <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n                <path d=\\\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\\\" /></svg>Show Flats\\n                </button></td>\\n              <td><button mat-stroked-button (click)=\\\"goToBuilding(element.societyid)\\\"> <svg\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\\\" />\\n                <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\n            </button></td>\\n            </tr>\\n          </tbody>\\n        </table>\\n    </div>  \\n  </div>\\n<div *ngFor=\\\"\\\">\\n    {{building | json}}\\n</div>\\n<div [hidden]=\\\"!buildingList\\\">\\n  <event-calendar-component></event-calendar-component>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../services/user.service\"\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\nimport { OnChanges } from '@angular/core';\nimport { CommonService } from '../services/common.service'\n\n@Component({\n  selector: 'app-building',\n  templateUrl: './building.component.html',\n  styleUrls: ['./building.component.css']\n})\nexport class BuildingComponent implements OnInit, OnChanges {\n  society; buildingList;\n  societyid; societyInfo: any;\n  constructor(public _userService: UserService, \n    public router: Router, private route: ActivatedRoute, public _commonService: CommonService ) { }\n\n  ngOnInit() {\n    this.getBuildingList();\n  }\n  ngOnChanges() {\n    this.getBuildingList();\n  }\n  getBuildingList() {\n    //this.societyid = this.route.snapshot.paramMap.get('societyid');\n    this.route.params.subscribe((value) => {\n      this.societyid = value[\"societyid\"]; // get param\n      console.log(\"this.societyid:::\" + JSON.stringify(value));\n      this.updateCalendar(this.societyid);\n      this._userService.getBuilding(this.societyid).subscribe((data) => {\n        this.buildingList = data.dbResponse;\n      },\n        error => {\n          console.log(error);\n          this.society = error.message;\n        });\n\n      this._userService.getSocietyInfo(this.societyid).subscribe((data) => {\n        this.societyInfo = data.dbResponse;\n      },\n        error => {\n          console.log(error);\n          this.society = error.message;\n        });\n    });\n  }\n\n  updateCalendar(societyid){\n    this._userService.getSocietyEvents(societyid).subscribe((societyEvevts) => {\n      this._commonService.emitEventCalanderData(societyEvevts.dbResponse)\n    },\n    error => {\n      console.log(error);\n      this.society = error.message;\n    });\n  }\n\n  showFlats(societyId, buildingName){\n    this.router.navigate(['societyManagment', societyId, 'buildings', buildingName, 'flats']);\n    this._commonService.emitShowListEvent(true);\n  }\n\n}\n","module.exports = \"h3 {\\n    margin: 0 0 10px;\\n  }\\n  \\n  pre {\\n    background-color: #f5f5f5;\\n    padding: 15px;\\n  }\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      Action:\\n      <pre>{{ modalData?.action }}</pre>\\n    </div>\\n    <div>\\n      Event:\\n      <pre>{{ modalData?.event | json }}</pre>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"text-center\\\">\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarPreviousView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Previous\\n      </div>\\n      <div\\n        class=\\\"btn btn-outline-secondary\\\"\\n        mwlCalendarToday\\n        [(viewDate)]=\\\"viewDate\\\">\\n        Today\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarNextView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Next\\n      </div>\\n    </div>\\n  </div>\\n  <div>\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\n  </div>\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Month\\\"\\n        [class.active]=\\\"view === CalendarView.Month\\\">\\n        Month\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Week\\\"\\n        [class.active]=\\\"view === CalendarView.Week\\\">\\n        Week\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Day\\\"\\n        [class.active]=\\\"view === CalendarView.Day\\\">\\n        Day\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div [ngSwitch]=\\\"view\\\">\\n  <mwl-calendar-month-view\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-month-view>\\n  <mwl-calendar-week-view\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-week-view>\\n  <mwl-calendar-day-view\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-day-view>\\n</div>\\n\\n<br><br><br>\\n\\n<h3>\\n  Edit events\\n  <button\\n    class=\\\"btn btn-primary pull-right\\\"\\n    (click)=\\\"addEvent()\\\">\\n    Add new\\n  </button>\\n  <div class=\\\"clearfix\\\"></div>\\n</h3>\\n\\n<!-- <table class=\\\"table table-bordered\\\">\\n\\n  <thead>\\n    <tr>\\n      <th>Title</th>\\n      <th>Primary color</th>\\n      <th>Secondary color</th>\\n      <th>Starts at</th>\\n      <th>Ends at</th>\\n      <th>Remove</th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let event of events; let index = index\\\">\\n      <td>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"event.title\\\"\\n          (keyup)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.primary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.secondary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.start\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.end\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <button\\n          class=\\\"btn btn-danger\\\"\\n          (click)=\\\"events.splice(index, 1); refresh.next()\\\">\\n          Delete\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table> -->\"","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView\n} from 'angular-calendar';\nimport { CommonService } from './../services/common.service';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'calendar-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./calendar.component.css'],\n  templateUrl: './calendar.component.html'\n})\nexport class CalendarComponent {\n  @ViewChild('modalContent')\n  modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter(iEvent => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  events: CalendarEvent[] = [\n    {\n      start: subDays(startOfDay(new Date()), 1),\n      end: addDays(new Date(), 1),\n      title: 'A 3 day event',\n      color: colors.red,\n      actions: this.actions,\n      allDay: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    },\n    {\n      start: startOfDay(new Date()),\n      title: 'An event with no end date',\n      color: colors.yellow,\n      actions: this.actions\n    },\n    {\n      start: subDays(endOfMonth(new Date()), 3),\n      end: addDays(endOfMonth(new Date()), 3),\n      title: 'A long event that spans 2 months',\n      color: colors.blue,\n      allDay: true\n    },\n    {\n      start: addHours(startOfDay(new Date()), 2),\n      end: new Date(),\n      title: 'A draggable and resizable event',\n      color: colors.yellow,\n      actions: this.actions,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    }\n  ];\n\n  activeDayIsOpen: boolean = true;\n\n  constructor(private modal: NgbModal, private _commonService:CommonService) { }\n  ngOnInit() {\n    this._commonService.calenderData.subscribe((data)=>{\n      this.events = [];\n      data.forEach(element => {\n        console.log(\"****\",element);\n        this.events.push({\n          title: 'payment of rs '+ element.paid+' for flat id'+element.flatid+' Reciept Number is '+element.id+' and ownerid is '+element.ownerid,\n          start: new Date(element.createddate),\n          color: colors.red,\n        });\n        this.refresh.next();\n      });\n    })\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  addEvent(): void {\n    this.events.push({\n      title: 'New event',\n      start: startOfDay(new Date()),\n      end: endOfDay(new Date()),\n      color: colors.red,\n      draggable: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      }\n    });\n    this.refresh.next();\n  }\n}","module.exports = \"h3 {\\n    margin: 0 0 10px;\\n  }\\n  \\n  pre {\\n    background-color: #f5f5f5;\\n    padding: 15px;\\n  }\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      Action:\\n      <pre>{{ modalData?.action }}</pre>\\n    </div>\\n    <div>\\n      Event:\\n      <pre>{{ modalData?.event | json }}</pre>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"text-center\\\">\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarPreviousView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Previous\\n      </div>\\n      <div\\n        class=\\\"btn btn-outline-secondary\\\"\\n        mwlCalendarToday\\n        [(viewDate)]=\\\"viewDate\\\">\\n        Today\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarNextView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n        Next\\n      </div>\\n    </div>\\n  </div>\\n  <div>\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\n  </div>\\n  <div>\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Month\\\"\\n        [class.active]=\\\"view === CalendarView.Month\\\">\\n        Month\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Week\\\"\\n        [class.active]=\\\"view === CalendarView.Week\\\">\\n        Week\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"view = CalendarView.Day\\\"\\n        [class.active]=\\\"view === CalendarView.Day\\\">\\n        Day\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div [ngSwitch]=\\\"view\\\">\\n  <mwl-calendar-month-view\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-month-view>\\n  <mwl-calendar-week-view\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-week-view>\\n  <mwl-calendar-day-view\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\n    [viewDate]=\\\"viewDate\\\"\\n    [events]=\\\"events\\\"\\n    [refresh]=\\\"refresh\\\"\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n  </mwl-calendar-day-view>\\n</div>\\n\\n<br><br><br>\\n\\n<h3>\\n  Edit events\\n  <button\\n    class=\\\"btn btn-primary pull-right\\\"\\n    (click)=\\\"addEvent()\\\">\\n    Add new\\n  </button>\\n  <div class=\\\"clearfix\\\"></div>\\n</h3>\\n\\n<table class=\\\"table table-bordered\\\">\\n\\n  <thead>\\n    <tr>\\n      <th>Title</th>\\n      <th>Primary color</th>\\n      <th>Secondary color</th>\\n      <th>Starts at</th>\\n      <th>Ends at</th>\\n      <th>Remove</th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let event of events; let index = index\\\">\\n      <td>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"event.title\\\"\\n          (keyup)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.primary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          type=\\\"color\\\"\\n          [(ngModel)]=\\\"event.color.secondary\\\"\\n          (change)=\\\"refresh.next()\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.start\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          mwlFlatpickr\\n          [(ngModel)]=\\\"event.end\\\"\\n          (ngModelChange)=\\\"refresh.next()\\\"\\n          [altInput]=\\\"true\\\"\\n          [convertModelValue]=\\\"true\\\"\\n          [enableTime]=\\\"true\\\"\\n          dateFormat=\\\"Y-m-dTH:i\\\"\\n          altFormat=\\\"F j, Y H:i\\\"\\n          placeholder=\\\"Not set\\\">\\n      </td>\\n      <td>\\n        <button\\n          class=\\\"btn btn-danger\\\"\\n          (click)=\\\"events.splice(index, 1); refresh.next()\\\">\\n          Delete\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\"","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView\n} from 'angular-calendar';\nimport { CommonService } from '../services/common.service';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'event-calendar-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./event-calendar.component.css'],\n  templateUrl: './event-calendar.component.html'\n})\nexport class EventCalendarComponent {\n  @ViewChild('modalContent')\n  modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter(iEvent => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  events: CalendarEvent[] = [\n   /* {\n      start: subDays(startOfDay(new Date()), 1),\n      end: addDays(new Date(), 1),\n      title: 'A 3 day event',\n      color: colors.red,\n      actions: this.actions,\n      allDay: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    },\n    {\n      start: startOfDay(new Date()),\n      title: 'An event with no end date',\n      color: colors.yellow,\n      actions: this.actions\n    },\n    {\n      start: new Date('2018-11-10 07:46:03'),\n      title: 'custome varun event',\n      color: colors.yellow,\n      actions: this.actions\n    },\n    {\n      start: subDays(endOfMonth(new Date()), 3),\n      end: addDays(endOfMonth(new Date()), 3),\n      title: 'A long event that spans 2 months',\n      color: colors.blue,\n      allDay: true\n    },\n    {\n      start: addHours(startOfDay(new Date()), 2),\n      end: new Date(),\n      title: 'A draggable and resizable event',\n      color: colors.yellow,\n      actions: this.actions,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      },\n      draggable: true\n    }*/\n  ];\n\n  activeDayIsOpen: boolean = true;\n\n  constructor(private modal: NgbModal, private _commonService:CommonService) { }\n  ngOnInit() {\n    this._commonService.eventCalenderData.subscribe((data)=>{\n      this.events = [];\n      data.forEach(element => {\n        console.log(\"****\",element);     \n        this.events.push({\n          title:element.eventheading+' Event Description '+element.eventdiscription,\n          start: new Date(element.eventstartdate),\n          \n          color: colors.red,\n        });\n\n        this.refresh.next();\n      });\n      this.refresh.next();\n    })\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  addEvent(): void {\n    this.events.push({\n      title: 'New event',\n      start: startOfDay(new Date()),\n      end: endOfDay(new Date()),\n      color: colors.red,\n      draggable: true,\n      resizable: {\n        beforeStart: true,\n        afterEnd: true\n      }\n    });\n    this.refresh.next();\n  }\n}","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-left contentContainer\\\">    \\n        Society ID:  {{societyInfo && societyInfo[0]?.societyid}} <br>\\n      Society Name: {{societyInfo && societyInfo[0]?.societyname}} ,  <br>     \\n      Society Address: {{societyInfo && societyInfo[0]?.address}},{{societyInfo && societyInfo[0]?.pincode}}<br><br>\\n      buildingname : {{buildingName}}<br>\\n    </div>\\n  </div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n      \\n      <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th>flatid</th>\\n              <th>flatname</th>\\n              <th>ownerid</th>\\n              <th>pendingpayment</th>\\n              <th>payment button</th>\\n              <th>Calender</th>\\n              <th>Show Owner</th>\\n              <th>Flat</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr  *ngFor=\\\"let flat of flatList\\\">\\n              <td>{{flat.flatid}}</td>\\n              <td>{{flat.flatname}}</td>\\n              <td>{{flat.ownerid}}</td>\\n              <td>{{flat.pendingpayment}}</td>\\n              <td> \\n                  <button type=\\\"button\\\"  class=\\\"btn btn-info\\\"  mat-stroked-button data-toggle=\\\"modal\\\" data-target=\\\"#pendingModal\\\" (click)=\\\"paymentID(flat)\\\">Pay</button>\\n              </td>\\n              <td> \\n                <button type=\\\"button\\\"  class=\\\"btn btn-info\\\"  mat-stroked-button (click)=\\\"showCalender(flat.flatid)\\\">Calender</button>\\n              </td>\\n              <td> \\n                  <button type=\\\"button\\\" class=\\\"btn btn-info\\\"  mat-stroked-button (click)=\\\"showOwner(societyid, buildingName,flat.flatid)\\\">Show Owner</button>\\n                </td>\\n                <td> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-info\\\"  mat-stroked-button (click)=\\\"deleteFlat(flat.flatid)\\\">Delete</button>\\n                  </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n    </div>\\n  </div>\\n<div *ngFor=\\\"\\\">\\n    {{building | json}}\\n</div>\\n\\n\\n\\n<!-- Modal -->\\n<div id=\\\"pendingModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Payment Option</h4>  \\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"payAmount\\\" placeholder=\\\"Enter Paynding Payment amount\\\" [(ngModel)]=\\\"payAmount\\\" \\n          required />\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"paymentMethod(payAmount)\\\" >Pay</button>\\n        <div *ngIf=\\\"isClosedValue\\\">\\n          <div data-dismiss=\\\"modal\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n</form>\\n  </div>\\n</div>\\n<div>\\n  <calendar-component></calendar-component>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../services/user.service\"\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\nimport { OnChanges } from '@angular/core';\nimport { TokenService } from '../services/token.service'\nimport { CommonService } from '../services/common.service'\n\n@Component({\n  selector: 'app-flats',\n  templateUrl: './flats.component.html',\n  styleUrls: ['./flats.component.css']\n})\nexport class FlatsComponent implements OnInit, OnChanges {\n  \n  society; flatList;\n  isClosedValue = false;\n  model: any = {};\n  errmsg;\n  payAmount;\n  societyid;buildingName; societyInfo: any;responseData:any;\n  flatObj:any;\n  constructor(public _userService: UserService,\n     public router: Router, private route: \n     ActivatedRoute, public _tokenService: TokenService, public _commonService:CommonService) { }\n\n  ngOnInit() {\n    this.getflatList();\n  }\n  ngOnChanges() {\n    this.getflatList();\n  }\n  getflatList() {\n    this.route.params.subscribe((value) => {\n      this.societyid = value[\"societyid\"]; // get param\n      this.buildingName = value[\"buildingName\"]; // get param\n      this._userService.getFlatList(this.societyid, this.buildingName).subscribe((data) => {\n        this.flatList = data.dbResponse;\n      },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n\n      this._userService.getSocietyInfo(this.societyid).subscribe((data) => {\n        this.societyInfo = data.dbResponse;\n      },\n        error => {\n          console.log(error);\n          this.society = error.message;\n        });\n    });\n  }\n  paymentMethod(payAmount){\n    this.flatObj.pendingPayment = payAmount;\n    console.log(payAmount , this.flatObj.pendingPayment);\n    console.log(this.flatObj);\n    \n    this._userService.putFlatPayment(this.flatObj).subscribe(\n      (data) => {\n      this.responseData = data.dbResponse;\n      },\n      error => {\n        console.log(error);\n        this.errmsg=error.message;\n        alert(\"Please login first\"+JSON.stringify(error));\n      },\n      () => {\n        this.isClosedValue = true\n        this.getflatList();\n        alert(\"Payment successfully updated!\");\n      });\n  }\n  paymentID(flatObj){\n    this.flatObj =flatObj;\n  }\n  showCalender(flatId){\n    this._userService.getFlatPaymentHistory(flatId).subscribe((data) => {\n      console.log(data.dbResponse);\n      this._commonService.emitCalanderData(data.dbResponse);\n    },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n  }\n  showOwner(societyid,buildingName,flatId){\n    this.router.navigate(['societyManagment',societyid,'buildings',buildingName,\"flats\",flatId,\"owner\"]); \n    this._commonService.emitShowListEvent(true);\n  }\n}\n","module.exports = \"\\n\\n.loginBox{\\n    padding: 20px;\\n    margin-top:20px;\\n    border: 1px solid rgba(0, 0, 0, 0.16);\\n    -ms-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n    -o-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n}\"","module.exports = \"<!-- main app container -->\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row mainContainer\\\">\\n        <div class=\\\"d-none d-sm-block col-sm-8 align-self-center text-center\\\">\\n                <img src=\\\"assets/logo.png\\\" class=\\\"img-fluid logo-img\\\" />\\n                <br>\\n            <h4>Login Here</h4>\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n                magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n                consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\\n           \\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-4 align-self-top\\\">\\n            <br> <br>\\n            <div class=\\\"loginBox\\\">\\n                <h4 class=\\\" text-center\\\">Member login</h4>\\n                <br>\\n                <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"uname\\\" placeholder=\\\"User Name\\\" [(ngModel)]=\\\"model.uname\\\" #uname=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && uname.invalid }\\\"\\n                            required />\\n                        <div *ngIf=\\\"f.submitted && uname.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"uname.errors.required\\\">username is required</div>\\n                        </div>\\n                    </div> \\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required />\\n                        <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"password.errors.required\\\">password is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button class=\\\"btn btn-block btn-primary\\\">Login</button>\\n                    </div>\\n                    <div class=\\\"form-group text-center\\\">\\n                        <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Not a member? Sign up</a>\\n                    </div>\\n                </form>\\n            </div>\\n            <br> <br>\\n        </div>\\n        \\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Route } from '@angular/compiler/src/core';\nimport { ApiService } from '../services/api.service';\nimport { TokenService } from '../services/token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  username = \"sdfsdf29112\";\n  password = \"soword\";\n\n  constructor(private api: ApiService, private _tokenService: TokenService, public router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.api.login(\n      this.model.uname,\n      this.model.password\n    )\n      .subscribe(\n        r => {\n          if (r.token) {\n           // alert(r.token);\n            this._tokenService.setToken(r.token);\n            this.router.navigateByUrl('/societyManagment');\n          }\n        },\n        err => {\n          alert(err);\n        });\n  }\n}\n","module.exports = \".example-additional-selection {\\n    opacity: 0.75;\\n    font-size: 0.75em;\\n  }\"","module.exports = \"\\n\\n<div>\\n    <mat-form-field  *ngIf=\\\"(modalName == 'flats' || modalName == 'buildings' || modalName == 'owners')\\\">\\n        <!-- <mat-select placeholder=\\\"Select Society\\\" [formControl]=\\\"societyFormCtrl\\\" multiple> -->\\n        <mat-select placeholder=\\\"Select Society\\\"  [formControl]=\\\"societyFormCtrl\\\">\\n          <!-- <mat-select-trigger>\\n            {{societyFormCtrl.value ? societyFormCtrl.value[0] : ''}}\\n            <span *ngIf=\\\"societyFormCtrl.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\n              (+{{societyFormCtrl.value.length - 1}} {{societyFormCtrl.value?.length === 2 ? 'other' : 'others'}})\\n            </span>\\n          </mat-select-trigger> -->\\n          <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\">{{s.societyname}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field *ngIf=\\\"(modalName == 'flats' || modalName == 'owners')\\\">\\n          <!-- <mat-select placeholder=\\\"Select Society\\\" [formControl]=\\\"buildingFormCtrl\\\" multiple> -->\\n          <mat-select placeholder=\\\"Select flat\\\"  [formControl]=\\\"buildingFormCtrl\\\">\\n            <!-- <mat-select-trigger>\\n              {{buildingFormCtrl.value ? buildingFormCtrl.value[0] : ''}}\\n              <span *ngIf=\\\"buildingFormCtrl.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\n                (+{{buildingFormCtrl.value.length - 1}} {{buildingFormCtrl.value?.length === 2 ? 'other' : 'others'}})\\n              </span>\\n            </mat-select-trigger> -->\\n            <mat-option *ngFor=\\\"let building of buildingList\\\" [value]=\\\"building.buildingname\\\">{{building.buildingname}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field  *ngIf=\\\"modalName == 'owners'\\\">\\n            <!-- <mat-select placeholder=\\\"Select Society\\\" [formControl]=\\\"buildingFormCtrl\\\" multiple> -->\\n            <mat-select placeholder=\\\"Select owners\\\"  [formControl]=\\\"ownerFormCtrl\\\" multiple>\\n              <mat-select-trigger>\\n                {{ownerFormCtrl.value ? ownerFormCtrl.value[0] : ''}}\\n                <span *ngIf=\\\"ownerFormCtrl.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\n                  (+{{ownerFormCtrl.value.length - 1}} {{ownerFormCtrl.value?.length === 2 ? 'other' : 'others'}})\\n                </span>\\n              </mat-select-trigger>\\n              <mat-option *ngFor=\\\"let flat of flatList\\\" [value]=\\\"flat.flatname\\\">{{flat.flatname}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n</div>\\n<button *ngIf=\\\"(modalName == 'flats' || modalName == 'buildings' || modalName == 'owners' )\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Submit</button>\"","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { UserService } from \"../services/user.service\";\nimport { CommonService } from \"../services/common.service\";\nimport { NeedAuthGuard } from \"../services/NeedAuthGuard\";\nimport { Router } from '@angular/router';\nimport {FormControl} from '@angular/forms';\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n  societyList;\n  sid;\n  buildingName;\n  buildingList;\n  flatList;\n  buildingObj;\n  societyFormCtrl = new FormControl();\n  buildingFormCtrl = new FormControl();\n  ownerFormCtrl = new FormControl();\n  @Input()\n  modalName : string;\n\n  //@Output()\n  //eventEm = new EventEmitter();\n  \n  constructor(public _userService: UserService, public router: Router, \n    public _needAuthGuard : NeedAuthGuard, public _commonService:CommonService) { \n    \n  }\n\n  ngOnInit() {\n    this._userService.getSociety().subscribe((data) => {\n      this.societyList = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.societyList = error.message;\n      });\n\n      this.societyFormCtrl.valueChanges.subscribe(societyid => {\n        console.log(\"on changes....\",societyid);\n        this.sid=societyid;\n        this._userService.getBuilding(societyid).subscribe((data) => {\n          this.buildingList = data.dbResponse;\n        },\n          error => {\n            console.log(error);\n            this.buildingList = error.message;\n          });\n      });\n      this.buildingFormCtrl.valueChanges.subscribe(buildingName => {\n        console.log(\"on changes....\",buildingName);\n        this.buildingName=buildingName;\n        this._userService.getFlatList(this.sid,buildingName).subscribe((data) => {\n          this.flatList = data.dbResponse;\n        },\n          error => {\n            console.log(error);\n            this.flatList = error.message;\n          });\n      })\n    \n  }\n\n  // onBuildingChange(buildingId) {\n  //   this._userService.getFlatList(buildingId).subscribe((data) => {\n  //     this.flatList = data.dbResponse;\n  //   },\n  //     error => {\n  //       console.log(error);\n  //       this.flatList = error.message;\n  //     });\n  // }\n\n  onSubmit(){\n    console.log(this.modalName);\n    if(this.modalName=='buildings') {\n      this.router.navigate(['societyManagment',this.sid,'buildings']); \n      this._commonService.emitShowListEvent(true);\n    }\n    else if(this.modalName=='flats') {\n      this.router.navigate(['societyManagment',this.sid,'buildings',this.buildingName,'flats']);\n      this._commonService.emitShowListEvent(true);\n     }\n     else if(this.modalName=='owners') {   \n        this.router.navigate(['societyManagment','owners']); \n        this._commonService.emitShowListEvent(true);\n     }  \n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 contentContainer\\\">\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Name</th>\\n            <th>IsAdmin</th>\\n            <th>Phone No</th>\\n            <th>Email</th>\\n            <th>Age</th>\\n            <th>Gender</th>\\n            <th>Password</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let owner of ownerData\\\">\\n            <td>{{owner.ownerid}}</td>\\n            <td>{{owner.ownername}}</td>\\n            <td>{{owner.isadmin}}</td>\\n            <td>{{owner.phonenumber}}</td>\\n            <td>{{owner.email}}</td>\\n            <td>{{owner.age}}</td>\\n            <td>{{owner.gender}}</td>\\n            <td>{{owner.password}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"../services/user.service\"\r\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-owners',\r\n  templateUrl: './owners.component.html',\r\n  styleUrls: ['./owners.component.css']\r\n})\r\nexport class OwnersComponent implements OnInit {\r\n  ownerData;\r\n  constructor(public _userService : UserService, public router: Router, private route: \r\n    ActivatedRoute) { }\r\n\r\n  societyIds;\r\n   buildingNames;\r\n    flatIds;\r\n    param1;\r\n    param2;\r\n    param3;\r\n     model: any = {};\r\n\r\n     ngOnInit() {\r\n      this.getOwnerList();\r\n    }\r\n    ngOnChanges() {\r\n      this.getOwnerList();\r\n    }\r\n\r\n  //getSelectedTypelist(){\r\n    //console.log();\r\n   // this._userService.getSelectedTypelist(this.societyIds, this.buildingNames, this.flatIds).subscribe((data)=> {\r\n     // console.log(\"data is\",this.ownerData)\r\n   // });\r\n  //}\r\n\r\n  getOwnerList(){\r\n\r\n    this.route.params.subscribe((value) => {\r\n     // this.param1 = value[\"societyid\"]; // get param\r\n     // this.param2 = value[\"buildingName\"]; // get param\r\n      this.param3 = value[\"flatId\"]; // get param\r\n      this._userService.getOwnerList(this.param3).subscribe((data) => {\r\n        this.ownerData = data.dbResponse;\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\" container\\\">\\n  <div class=\\\"formStyle row justify-content-center childContainer s-bg\\\">\\n    <div class=\\\" col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\n        <!-- <app-society-header></app-society-header> -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n          <h1><b>{{pageTitle3}}</b></h1>\\n          <!-- <p>{{pageDesc3}}</p> -->\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row align-items-center text-center\\\">\\n          <div class=\\\"col\\\">\\n            <form class=\\\"formStyle\\\" name=\\\"form\\\" #sf=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <mat-select name=\\\"societyIdName\\\" placeholder=\\\"Select Society\\\"  [(ngModel)]=\\\"buildingreg.societyid\\\">\\n                        <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\" >\\n                          {{s.societyname}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput name=\\\"buildingName\\\" class=\\\"form-control\\\" placeholder=\\\"Building Name\\\" #bname=\\\"ngModel\\\" [(ngModel)]=\\\"buildingreg.buildingName\\\">\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group text-center\\\">\\n                  <button mat-raised-button color=\\\"primary\\\">Register</button>\\n                </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './../../services/user.service';\nimport { RegisterService } from './../register.service'\n\n@Component({\n  selector: 'app-building-reg',\n  templateUrl: './building-reg.component.html',\n  styleUrls: ['./building-reg.component.css']\n})\nexport class BuildingRegComponent implements OnInit {\n\n  pageTitle3 = \"Building Register\";\n  pageDesc3 = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\n\n  societyList;\n\n  buildingreg={\n    societyid:\"\",\n    buildingName:\"\"\n  }\n\n  constructor(public _userService : UserService, public _registerservice : RegisterService) { }\n\n  ngOnInit() {\n    this._userService.getSociety().subscribe((data) => {\n      this.societyList = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.societyList = error.message;\n      });\n  }\n\n  onSubmit(){\n    console.log(\"**on submit method**\",this.buildingreg);\n    this._registerservice.registerBuilding(this.buildingreg).subscribe((data)=> {\n      console.log(\"api reponse is\",data);\n      alert(\"building info added succesfully\");\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center childContainer s-bg\\\">\\n    <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\n        <!-- <app-society-header></app-society-header> -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n          <h1><b>{{pageTitle2}}</b></h1>\\n          <!-- <p>{{pageDesc2}}</p> -->\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row align-items-center text-center\\\">\\n          <div class=\\\"col\\\">\\n            <form class=\\\"formStyle\\\" name=\\\"form\\\" #sf=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput name=\\\"flatName\\\" class=\\\"form-control\\\" placeholder=\\\"Flat Name\\\" #fname=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.flatName\\\">\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput name=\\\"buildingName\\\" class=\\\"form-control\\\" placeholder=\\\"Building Name\\\" #bname=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.buildingName\\\">\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <mat-select name=\\\"societyIdName\\\" placeholder=\\\"Select Society\\\" #sname=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.societyId\\\">\\n                      <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\" >\\n                        {{s.societyname}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <!-- <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput name=\\\"ownerId\\\" class=\\\"form-control\\\" placeholder=\\\"Owner ID\\\" #oid=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.ownerid\\\">\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput name=\\\"tenantId\\\" class=\\\"form-control\\\" placeholder=\\\"Tenant ID\\\" #oid=\\\"ngModel\\\" [(ngModel)]=\\\"flatreg.tenantid\\\">\\n                  </mat-form-field>\\n                </div> -->\\n                <div class=\\\"form-group text-center\\\">\\n                  <button mat-raised-button color=\\\"primary\\\">Register</button>\\n                </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './../../services/user.service';\nimport { RegisterService } from './../register.service'\n  import { from } from 'rxjs';\n\n@Component({\n  selector: 'app-flat-reg',\n  templateUrl: './flat-reg.component.html',\n  styleUrls: ['./flat-reg.component.css']\n})\nexport class FlatRegComponent implements OnInit {\n\n  pageTitle2 = \"Flat Register\";\n  pageDesc2 = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\n\n  societyList;\n\n  flatreg={\n    flatName:\"\",\n    buildingName:\"\",\n    societyId:\"\"\n    //ownerid:\"\",\n    //tenantid:\"\"\n  }\n  constructor(public _userService : UserService, public _registerservice : RegisterService) { }\n\n  ngOnInit() {\n\n    this._userService.getSociety().subscribe((data) => {\n      this.societyList = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.societyList = error.message;\n      });\n  }\n\n\n  onSubmit(){\n    console.log(\"**on submit**\",this.flatreg);\n    this._registerservice.registerFlat(this.flatreg).subscribe((data)=> {\n      console.log(\"**response from api**\",data);\n      alert(\"flat info submitted sucessfully\");\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center childContainer s-bg\\\">\\n      <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\n          <!-- <app-society-header></app-society-header> -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col text-center\\\">\\n            <h1><b>{{pageTitle1}}</b></h1>\\n            <!-- <p>{{pageDesc1}}</p> -->\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row align-items-center text-center\\\">\\n            <div class=\\\"col\\\">\\n                <form class=\\\"formStyle\\\" #form1=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-group\\\"> \\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput name=\\\"name\\\" class=\\\"form-control\\\" #owner=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.ownerName\\\" placeholder=\\\"Owner Name\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"form-group\\\"> \\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput name=\\\"email\\\" class=\\\"form-control\\\" #emailid=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.email\\\" placeholder=\\\"Email\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"form-group\\\"> \\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput  name=\\\"phoneno\\\" class=\\\"form-control\\\" pattern=\\\"\\\\d{10}$\\\" #telno=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.phoneNumber\\\" placeholder=\\\"Phone\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"form-group\\\"> \\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput  name=\\\"age\\\" class=\\\"form-control\\\" #ageno=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.age\\\" placeholder=\\\"Age\\\">\\n                      </mat-form-field>\\n                    </div>\\n                    <h5>Gender</h5>\\n                    <div class=\\\"form-group\\\"> \\n                    <mat-radio-group name=\\\"gender\\\" [(ngModel)]=\\\"ownerreg.gender\\\">\\n                        <mat-radio-button value=\\\"male\\\" >Male</mat-radio-button>\\n                        <mat-radio-button value=\\\"female\\\">Female</mat-radio-button>\\n                      </mat-radio-group>\\n                    </div>\\n                    <div class=\\\"form-group\\\"> \\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput  name=\\\"password\\\" class=\\\"form-control\\\" #cname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.password\\\" placeholder=\\\"Password\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"from-check\\\">\\n                        <mat-checkbox name=\\\"isAdmin\\\" [(ngModel)]=\\\"ownerreg.isAdmin\\\">Is Admin?</mat-checkbox>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput name=\\\"flatName\\\" class=\\\"form-control\\\" placeholder=\\\"Flat Name\\\" #fname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.flatName\\\">\\n                        </mat-form-field>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput name=\\\"buildingName\\\" class=\\\"form-control\\\" placeholder=\\\"Building Name\\\" #bname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.buildingName\\\">\\n                        </mat-form-field>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <mat-form-field>\\n                          <mat-select name=\\\"societyIdName\\\" placeholder=\\\"Select Society\\\" #sname=\\\"ngModel\\\" [(ngModel)]=\\\"ownerreg.societyId\\\">\\n                            <mat-option *ngFor=\\\"let s of societyList\\\" [value]=\\\"s.societyid\\\" >\\n                              {{s.societyname}}\\n                            </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n                    <div class=\\\"form-group text-center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\">Register</button>\\n                    </div>\\n                \\n                  </form>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <router-outlet></router-outlet>\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from './../register.service';\nimport { UserService } from './../../services/user.service';\n\n@Component({\n  selector: 'app-owner-reg',\n  templateUrl: './owner-reg.component.html',\n  styleUrls: ['./owner-reg.component.css']\n})\nexport class OwnerRegComponent implements OnInit {\n\n  pageTitle1 = \"Owner Register\";\n  pageDesc1 = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\n  societyList;\n  ownerreg={\n    ownerName:\"\",\n    email:\"\",\n    phoneNumber:\"\",\n    age:\"\",\n    gender:\"\",\n    isAdmin:\"\",\n    password:\"\",\n    flatName:\"\",\n    buildingName:\"\",\n    societyId:\"\"\n  }\n\n  constructor(public _userService : UserService,public _registerservice : RegisterService) { }\n\n  ngOnInit() {\n    this._userService.getSociety().subscribe((data) => {\n      this.societyList = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.societyList = error.message;\n      });\n  }\n\n  onSubmit(){\n    console.log(this.ownerreg);\n    this._registerservice.registerOwner(this.ownerreg).subscribe((data)=> {\n      console.log(\"data is\",data);\n      alert(\"owner info added sucessfully\");\n    });\n  }\n\n\n}\n","module.exports = \"\\r\\n\\r\\n.societyImage{\\r\\n    background-image:url('banner.png');\\r\\n}\\r\\n\\r\\n\\r\\n.mainContainer{\\r\\n    background-color: white;\\r\\n    margin-top:1em;\\r\\n    -ms-box-shadow: 0 3px 6px rgba(184, 157, 157, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n    -o-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\r\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);    \\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center mainContainer\\\">\\n        \\n      <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\n          <app-society-header></app-society-header>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col text-center\\\">\\n            <h1><b>{{pageTitle}}</b></h1>\\n            <p class=\\\"text-h3\\\">{{pageDesc}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"row align-items-center\\\">\\n          <div class=\\\"col\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n                    <div routerLink=\\\"society-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\n                      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\\\" />\\n                        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\n                      Society</div>\\n                  </div>\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n                    <div routerLink=\\\"building-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\n                      <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n                        <path d=\\\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\\\" /></svg>\\n                      Buildings</div>\\n                  </div>\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n                    <div routerLink=\\\"flat-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\n                        <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n                            <path d=\\\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\\\" /></svg>\\n                      Flats</div>\\n                  </div>\\n                  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n                    <div routerLink=\\\"owner-reg\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">\\n                        <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n                            <path d=\\\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\\\" /></svg>\\n                      owners</div>\\n                  </div>\\n                </div>   \\n          </div>\\n        </div>\\n        \\n        <div class=\\\"text-center contentContainer\\\">\\n          <router-outlet></router-outlet>\\n          </div>\\n\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-register-member',\n  templateUrl: './register-member.component.html',\n  styleUrls: ['./register-member.component.css']\n})\nexport class RegisterMemberComponent {\n\n  model: any = {};\n  StoreArray:Array<any> = [];\n  Debitcard:boolean = false;\n  tenantDetails:boolean = false;\n  \n  pageTitle = \"Register\";\n  pageDesc = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\n  formLabelNames = {\n    flatno: \"Flat Number\",\n    ownerFname : \"Owner First Name\",\n    ownerLname : \"Owner Last Name\",\n    phone : \"Phone Number\",\n    paymentmethod :\"Payment Method\",\n    paymentmethodValue : ['Cash','Debit/Credit Card','Cheque'],\n    paymentamount :\"Payment amount\",\n    flatrented: \"Flat Rented\",\n    rentedYes: \"Yes\",\n    rentedNo: \"No\",\n    memPswd: \"Password\",\n    memConfrmPswd: \"Confirm Password\",\n  }\n\n  onSubmit() {   \n    this.StoreArray.push(JSON.stringify(this.model));\n  }\n\n  clickCard(){\n    this.Debitcard=!this.Debitcard\n  }\n  \n  radioChange($event) {\n    var RadioValue = $event.target.value;\n    if(RadioValue==\"Yes\")\n     this.tenantDetails=true;\n    else \n      this.tenantDetails=false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport * as config from \"./../config.json\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n\n  postSocietyUrl= config.default.HOST_NAME+\"/society/registerSociety\";\n  postOwnerUrl= config.default.HOST_NAME+\"/society/registerOwner\";\n  postFlatUrl= config.default.HOST_NAME+\"/society/registerFlat\";\n  postBuildingUrl= config.default.HOST_NAME+\"/society/registerBuilding\";\n  \n\n  registerSociety(societyreg){\n    return this.http.post(this.postSocietyUrl, societyreg);\n  }\n\n  registerOwner(ownerreg){\n    return this.http.post(this.postOwnerUrl, ownerreg);\n  }\n\n  registerFlat(flatreg){\n    return this.http.post(this.postFlatUrl, flatreg);\n  }\n\n  registerBuilding(buildingreg){\n    return this.http.post(this.postBuildingUrl, buildingreg);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center childContainer s-bg\\\">\\n    <div class=\\\"col-xs-12 col-md-8 col-lg-8 col-xl-8\\\">\\n        <!-- <app-society-header></app-society-header> -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n          <h1><b>{{pageTitle}}</b></h1>\\n          <!-- <p>{{pageDesc}}</p> -->\\n        </div>\\n      </div>\\n\\n      \\n      <div class=\\\"row align-items-center text-center\\\">\\n          <div class=\\\"col\\\">\\n            <form class=\\\"formStyle\\\" name=\\\"form\\\" #sf=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput name=\\\"societyName\\\" class=\\\"form-control\\\" placeholder=\\\"Society Name\\\" #sname=\\\"ngModel\\\" [(ngModel)]=\\\"societyreg.societyName\\\">\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput name=\\\"societyAddress\\\" class=\\\"form-control\\\" placeholder=\\\"Society Address\\\" #sadd=\\\"ngModel\\\" [(ngModel)]=\\\"societyreg.address\\\"></textarea>\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput name=\\\"societyNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Pincode\\\" #pcode=\\\"ngModel\\\" [(ngModel)]=\\\"societyreg.pincode\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"form-group text-center\\\">\\n                <button mat-raised-button color=\\\"primary\\\">Register</button>\\n              </div>\\n          </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from './../register.service';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-society-reg',\n  templateUrl: './society-reg.component.html',\n  styleUrls: ['./society-reg.component.css']\n})\nexport class SocietyRegComponent implements OnInit {\n\n  pageTitle = \"Society Register\";\n  pageDesc = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\n\n  societyreg={\n    societyName:\"\",\n    address:\"\",\n    pincode:\"\"\n  }\n\n  constructor(public _registerservice : RegisterService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    console.log(\"**Before calling api**\",this.societyreg);\n    this._registerservice.registerSociety(this.societyreg).subscribe((data)=> {\n      console.log(\"**response from api**\",data);\n      alert(\"society info added sucessfully\")\n    });\n  }\n\n}\n","import {CanActivate, Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {TokenService} from './token.service';\nimport { throwError, Observable,of } from 'rxjs';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router/src/router_state';\n\n\n@Injectable()\nexport class NeedAuthGuard implements CanActivate {\n\n  constructor(private _tokenService: TokenService, private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean|Observable<boolean>{\n\n    const redirectUrl = route['_routerState']['url'];\n\n   /* if (this._tokenService.isLogged()) {\n      return true;\n    } else {\n      this.router.navigateByUrl(\n        this.router.createUrlTree(\n          ['/login'], {\n            queryParams: {\n              redirectUrl\n            }\n          }\n        )\n      );\n      return false;\n    } */\n\n\n      return new Observable<boolean>((observer) => {\n        this._tokenService.isLogged().subscribe(isValid => {\n          if(isValid) {\n            console.log(\"token is valid*****\");\n            observer.next(true);\n          } else {\n            this.router.navigateByUrl(\n              this.router.createUrlTree(\n                ['/login'], {\n                  queryParams: {\n                    redirectUrl\n                  }\n                }\n              )\n            );\n            observer.next(false);\n          }\n        })\n      })\n    }\n\n  \n}","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport * as config from \"./../config.json\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {\n\n  }\n  TOKEN = \"TOKEN\"\n  login(email: string, password: string): Observable<any>{\n    return this.http.post(config.default.HOST_NAME+'/users/login', {\n      email: email,\n      password: password\n    });\n  }\n\n  getUser(){\n    let headers = new HttpHeaders().set('token',localStorage.getItem(this.TOKEN));\n    return this.http.get(config.default.HOST_NAME+\"/users/getUser\",{\n      headers:headers\n    })\n\n  }\n\n  \n\n}","import { Injectable, EventEmitter, Output } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  @Output()\n  calenderData=new EventEmitter();\n  eventCalenderData=new EventEmitter();\n  eventShowList=new EventEmitter();\n  constructor() { }\n\n  emitCalanderData(paymentHistory){\n    this.calenderData.emit(paymentHistory)  \n  }\n\n  emitEventCalanderData(societyEvents){\n    this.eventCalenderData.emit(societyEvents)  \n  }\n\n  emitShowListEvent(showListEvent){\n    this.eventShowList.emit(showListEvent)  \n  }\n}\n","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as config from \"./../config.json\";\n\nconst TOKEN = 'TOKEN';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  validateTokenUrl = config.default.HOST_NAME+\"/users/validateToken\";\n  constructor(private http: HttpClient) {\n  }\n\n  setToken(token: string): void {\n    localStorage.setItem(TOKEN, token);\n  }\n\n  isValidToken(token): Observable<any> {\n    let headers = new HttpHeaders().set('token',token);\n    console.log(`${this.validateTokenUrl}`);\n    return this.http.get(`${this.validateTokenUrl}`,{\n      headers:headers\n    }).pipe(catchError((error: HttpErrorResponse) => throwError(error)\n   ));\n  }\n\n  isLogged() :Observable<any> {\n    let isValid;\n    return new Observable(observer => {\n      let token = localStorage.getItem(TOKEN)\n      if(token) {\n        this.isValidToken(token).subscribe(data=>{\n          if(data.error == 0){\n          //  alert(token);\n            observer.next(true);\n          } else {\n            alert(\"User is not Valid\");\n            observer.next(false);\n          }\n        }, error=>{\n          //alert(\"Error:\"+JSON.stringify(error));\n          observer.next(false);\n        })\n      } else {\n       //alert(\"Please login first\");\n       observer.next(false);\n      }\n    })\n\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as config from \"./../config.json\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  TOKEN = 'TOKEN';\r\n  constructor(public http: HttpClient) { }\r\n\r\n  getSocietyURL = config.default.HOST_NAME+\"/society/society\";\r\n  getBuildingsURL = config.default.HOST_NAME+\"/society/building\";\r\n  getOwnerURL = config.default.HOST_NAME+\"/society/owner\";\r\n  getFlatURL = config.default.HOST_NAME+\"/society/flat\";\r\n  putPayment = config.default.HOST_NAME+\"/society/flat/pendingPayment\";\r\n  flatPaymentHistory = config.default.HOST_NAME+\"/society/paymenthistory\";\r\n  societyEventURL = config.default.HOST_NAME+\"/society/societyEvent\";\r\n  selectedTypeList = config.default.HOST_NAME+\"/society/owner/list\";\r\n\r\n  getOwner(query): Observable<any> {\r\n    console.log(`${this.getOwnerURL}/phonenumber/?value='${query.oPhoneNumber}'`);\r\n    return this.http.get(`${this.getOwnerURL}/phonenumber/?value='${query.oPhoneNumber}'`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getAllOwners(): Observable<any> {\r\n    console.log(`${this.getOwnerURL}`);\r\n    return this.http.get(`${this.getOwnerURL}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getSociety(): Observable<any> {\r\n    return this.http.get(`${this.getSocietyURL}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getSocietyInfo(id): Observable<any> {\r\n    console.log(`${this.getSocietyURL}/societyid/?value=${id}`);\r\n    return this.http.get(`${this.getSocietyURL}/societyid/?value=${id}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getBuilding(socID): Observable<any> {\r\n    return this.http.get(`${this.getBuildingsURL}/societyid/?value=${socID}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getFlatList(societyId, buildingname): Observable<any> {\r\n    console.log(`${this.getFlatURL}/buildingname/?value=${buildingname}`);\r\n    return this.http.get(`http://nodebw-env.xctnnannuz.us-east-1.elasticbeanstalk.com/society/flat/societyid/buildingname/?value1=${societyId}&value2=\"${buildingname}\"`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  getOwnerList(flatIds): Observable<any> {\r\n    console.log(`${this.getOwnerURL}/flatIds/?value=${flatIds}`);\r\n    return this.http.get(`${this.getOwnerURL}/flatIds/?value='${flatIds}'`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  putFlatPayment(flatObj): Observable<any> {\r\n    let headers = new HttpHeaders().set('token',localStorage.getItem(this.TOKEN));\r\n    console.log(flatObj);\r\n    let paramList = {\r\n      \"pendingPayment\": flatObj.pendingPayment,\r\n           \"ownerid\": flatObj.ownerid,\r\n           \"flatid\": flatObj.flatid\r\n   };\r\n   console.log(paramList);\r\n    return this.http.put(this.putPayment, paramList, {\r\n      headers:headers\r\n    })\r\n    .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getFlatPaymentHistory(flatId): Observable<any> {\r\n    console.log(\"uuuuuuuu\",`${this.flatPaymentHistory}/flatid/?value=${flatId}`);\r\n    return this.http.get(`${this.flatPaymentHistory}/flatid/?value=${flatId}`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n  getSocietyEvents(societyId): Observable<any> {\r\n    console.log(`${this.societyEventURL}/societyid/?value='${societyId}'`);\r\n    return this.http.get(`${this.societyEventURL}/societyid/?value='${societyId}'`)\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n\r\n  getSelectedTypelist(societyIds, buildingNames, flatIds) {\r\n    let headers = new HttpHeaders().set('token', localStorage.getItem(this.TOKEN));\r\n    let searchObject = {\r\n      \"societyIds\": societyIds,\r\n      \"buildingNames\": buildingNames,\r\n      \"flatIds\": flatIds\r\n    }\r\n    console.log(\"searchObject \", searchObject);\r\n    return this.http.post(this.selectedTypeList, searchObject, {\r\n      headers: headers\r\n    })\r\n      .pipe(catchError((error: HttpErrorResponse) => throwError(error)\r\n      ));\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-sm-3 text-left\\\">\\n    <img src=\\\"assets/logo.png\\\" class=\\\"img-fluid logo-img\\\" />\\n  </div>\\n<!-- <div class=\\\"col-xs-3 col-sm-3 text-right\\\">\\n  <div class=\\\"home-btn\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"back()\\\">Back</button>\\n  </div>\\n</div> -->\\n<!-- <div class=\\\"col-xs-3 col-sm-3 text-right\\\">\\n  <div routerLink=\\\"/societyManagment/society\\\" class=\\\"home-btn\\\">\\n    <button mat-raised-button color=\\\"primary\\\">Go To Society Page</button>\\n  </div>\\n</div> -->\\n\\n  <!-- <div class=\\\"col-xs-3 col-sm-3 text-right\\\">\\n    <div routerLink=\\\"/home\\\" class=\\\"home-btn\\\">\\n      <button mat-raised-button color=\\\"primary\\\">Home</button>\\n    </div>\\n  </div> -->\\n  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n      <button mat-stroked-button (click)=\\\"back()\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\\\"/></svg>\\n        Back\\n      </button>\\n    </div>\\n\\n  <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n    <button mat-stroked-button routerLink=\\\"/home\\\">\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n        <path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\" />\\n        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\n      Home\\n    </button>\\n  </div>\\n  </div>\\n\\n \\n<!-- </div>\\n<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n    \\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Logo</a>\\n  \\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 1</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 2</a>\\n      </li>\\n  \\n      \\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbardrop\\\" data-toggle=\\\"dropdown\\\">\\n          Dropdown link\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 1</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 2</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Link 3</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </nav> -->\"","import { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-society-header',\n  templateUrl: './society-header.component.html',\n  styleUrls: ['./society-header.component.css']\n})\nexport class SocietyHeaderComponent implements OnInit {\n\n  constructor(private _location: Location) { }\n\n  ngOnInit() {\n  }\n  back(){\n    this._location.back();\n  }\n\n}\n","module.exports = \"#content{\\n    overflow:scroll;\\n}\"","module.exports = \"<div class=\\\"container mainContainer\\\">\\n    <app-society-header></app-society-header>\\n    <div class=\\\"row col-md-12 text-center\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div *ngIf=\\\"!isLogged\\\" class=\\\"col-md-3\\\"> \\n        <div routerLink=\\\"/login\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\">Login</div>\\n      </div>\\n      <div *ngIf=\\\"isLogged\\\" class=\\\"col-md-3\\\">\\n          <div class=\\\"btn btn-outline-warning homeicons w-100\\\" (click)=\\\"logout()\\\">Logout</div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div routerLink=\\\"/register\\\" class=\\\"btn btn-outline-danger homeicons w-100\\\"> Register</div>\\n      </div>\\n      <div class=\\\"col-md-3\\\"></div>\\n    </div>\\n    <!--<mat-divider></mat-divider>-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 text-center contentContainer\\\">\\n      <br>\\n      <h2><b>Know More About Society</b></h2>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <div routerLink=\\\"/societyManagment/society\\\" class=\\\"btn btn-outline-warning homeicons w-100\\\" (click)=\\\"ShowModal('society')\\\">\\n            <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n              <path d=\\\"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\\\" />\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\n            Society</div>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <div (click)=\\\"ShowModal('buildings')\\\"\\n            class=\\\"btn btn-outline-warning homeicons w-100\\\">\\n            <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n              <path d=\\\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\\\" /></svg>\\n            Buildings</div>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <div (click)=\\\"ShowModal('flats')\\\" class=\\\"btn btn-outline-danger homeicons w-100\\\">\\n              <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                  <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n                  <path d=\\\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\\\" /></svg>\\n            Flats</div>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-3 text-center contentContainer\\\">\\n          <div (click)=\\\"ShowModal('owners')\\\" class=\\\"btn btn-outline-danger homeicons w-100\\\">\\n              <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n                  <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n                  <path d=\\\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\\\" /></svg>\\n            owners</div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"showSpinner\\\">\\n          <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\n      </div>\\n      <div *ngIf=\\\"modalVar\\\" [hidden]=\\\"showSpinner\\\">\\n        <app-modal [modalName]=\\\"modalVar\\\"></app-modal>\\n      </div>\\n\\n      <div id=\\\"content\\\" *ngIf=\\\"showList\\\" [hidden]=\\\"showSpinner\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n\\n    <!-- <div class=\\\"col-xs-12 col-sm-12 text-center contentContainer\\\">\\n        <img src=\\\"assets/banner.png\\\">\\n      </div> -->\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from './services/token.service'\r\nimport { CommonService } from './services/common.service'\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-society-mgmt',\r\n  templateUrl: './society-mgmt.component.html',\r\n  styleUrls: ['./society-mgmt.component.css']\r\n})\r\nexport class SocietyMgmtComponent implements OnInit {\r\n  modalVar;\r\n  isLogged = false;\r\n  showList;\r\n  showSpinner;\r\n  constructor(public _tokenService : TokenService, public router: Router, public _commonService:CommonService ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"tttttttt\",localStorage.getItem('TOKEN'));\r\n    this._tokenService.isLogged().subscribe(flag=>{\r\n      if(flag){\r\n        this.isLogged = true; \r\n      } else {\r\n        this.isLogged = false; \r\n      }\r\n    });\r\n\r\n    this._commonService.eventShowList.subscribe((showEvent)=>{\r\n        if(showEvent) {\r\n            this.showList = true;\r\n        } else {\r\n          this.showList = false;\r\n        }\r\n    })\r\n    \r\n  }\r\n  \r\n\r\n  ShowModal(type){\r\n    this.showSpinner = true;\r\n    console.log(type);\r\n    if(type == 'flats' || type == 'owners') {\r\n      this._tokenService.isLogged().subscribe(flag=>{\r\n        if(flag){\r\n          this.router.navigateByUrl('/societyManagment');\r\n          this.modalVar = type;\r\n          this.showSpinner = false;\r\n         // this.showList = false;\r\n        } else {\r\n          this.showList = false;\r\n          alert(\"Please login first\");\r\n          this.router.navigateByUrl('/login');\r\n          this.showSpinner = false;\r\n        }\r\n      });\r\n    } else if(type == 'buildings'){\r\n      setTimeout(()=>{\r\n        this.router.navigateByUrl('/societyManagment');\r\n        this.modalVar = type; \r\n        this.showSpinner = false;\r\n      },0)\r\n\r\n    } else {\r\n      setTimeout(()=>{\r\n        this.showList = true;\r\n        this.modalVar = type; \r\n        this.showSpinner = false;\r\n      },0)\r\n    }   \r\n  }\r\n  \r\n  logout(){\r\n    localStorage.setItem('TOKEN', \"\");\r\n    console.log(\"tttttttt\",localStorage.getItem('TOKEN'));\r\n    this.isLogged = false; \r\n    \r\n    this.router.navigateByUrl('/societyManagment');\r\n    window.location.reload();\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .tableClass {\\r\\n   font-weight: bold; \\r\\n  }\"","module.exports = \"<div class=\\\"tableClass\\\" class=\\\"mat-elevation-z8\\\">\\n  <table class=\\\"tableClass\\\"  mat-table [dataSource]=\\\"dataSource\\\">\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"societyid\\\">\\n      <th mat-cell *matHeaderCellDef> Society Id </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.societyid}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"societyname\\\">\\n      <th mat-cell *matHeaderCellDef> Society Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.societyname}} </td>\\n    </ng-container>\\n\\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"address\\\">\\n      <th mat-cell *matHeaderCellDef> Address </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\n    </ng-container>\\n\\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"pincode\\\">\\n      <th mat-cell *matHeaderCellDef> Pincode </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.pincode}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"showBuilding\\\">\\n      <th mat-cell *matHeaderCellDef> Show Buildings </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-stroked-button (click)=\\\"goToBuilding(element.societyid)\\\">             <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n        <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n        <path d=\\\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\\\" /></svg>Buildings\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"delete\\\">\\n      <th mat-cell *matHeaderCellDef>delete </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-stroked-button (click)=\\\"deleteBuilding(element.societyid)\\\"> <svg\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\\\" />\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator class=\\\"tableClass\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n<!-- <div [hidden]=\\\"!(societyInfo && societyInfo[0]?.societyid)\\\">\\n    <event-calendar-component></event-calendar-component>\\n</div>  -->\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from \"../services/user.service\"\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\nimport { OnChanges } from '@angular/core';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { CommonService } from '../services/common.service'\n\n@Component({\n  selector: 'app-society',\n  templateUrl: './society.component.html',\n  styleUrls: ['./society.component.css']\n})\nexport class SocietyComponent implements OnInit {\n  displayedColumns: string[];\n  dataSource;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  society: any; param1; societyInfo: any = undefined;\n\n  constructor(public _userService: UserService, public router: Router,\n    private route: ActivatedRoute, public _commonService: CommonService) { }\n\n  ngOnInit() { \n    this._userService.getSociety().subscribe((data) => {\n      this.society = data.dbResponse;\n      this.displayedColumns   = ['societyid', 'societyname', 'address', 'pincode','showBuilding', 'delete'];\n      const ELEMENT_DATA: societyField[] =data.dbResponse;\n      this.dataSource = new MatTableDataSource<societyField>(ELEMENT_DATA);\n      this.dataSource.paginator = this.paginator;\n    },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n  }\n\n  onSelect(societyid) {\n    this._userService.getSocietyEvents(societyid).subscribe((societyEvevts) => {\n      this._commonService.emitEventCalanderData(societyEvevts.dbResponse)\n    },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n    this._userService.getSocietyInfo(societyid).subscribe((data) => {\n      this.societyInfo = data.dbResponse;\n    },\n      error => {\n        console.log(error);\n        this.society = error.message;\n      });\n  }\n  goToBuilding(societyId){\n      this.router.navigate(['societyManagment', societyId, 'buildings']);\n      this._commonService.emitShowListEvent(true);\n  }\n\n}\n\nexport interface societyField {\n  societyid: string;\n  societyname: number;\n  address: number;\n  pincode: string;\n}","module.exports = \"\"","module.exports = \"<p>\\n  tenant works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tenant',\n  templateUrl: './tenant.component.html',\n  styleUrls: ['./tenant.component.css']\n})\nexport class TenantComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}