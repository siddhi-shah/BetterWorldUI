{"version":3,"sources":["../../../../server/modules/users/models/userModel.js"],"names":["database","require","cors","jwt","process","env","SECRET_KEY","UserModel","executeQuery","req","Promise","resolve","reject","appData","query","body","console","log","connection","getConnection","err","rows","JSON","stringify","error","registerUser","res","today","Date","userData","email","first_name","last_name","password","phoneNumber","fields","loginUser","dbResponse","length","token","sign","expiresIn","isAdmin","isadmin","getUser"],"mappings":"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","file":"userModel.js","sourcesContent":["var database = require('./../../../../database/database');\r\nvar cors = require('cors');\r\nvar jwt = require('jsonwebtoken');\r\nprocess.env.SECRET_KEY = 'varunv';\r\n\r\nclass UserModel {\r\n\r\n    executeQuery = (req) => new Promise((resolve, reject)=>{\r\n        var appData = {\r\n            'error': 1,\r\n            'data': '',\r\n            'status':'',\r\n            'dbData':'',\r\n            'fields':'',\r\n            'satusCode':''\r\n        };\r\n        var query = req.body.query;\r\n        console.log('query is '+query);\r\n        database.connection.getConnection(function(err, connection) {\r\n            if(err){\r\n                console.log('got error!!',err);\r\n                reject(err);\r\n            }\r\n            connection.query(query, function(err, rows) {\r\n                if (!err) {\r\n                    console.log('query executed successfully successfully '+JSON.stringify(rows));\r\n                    appData.error = 0;\r\n                    appData['status'] = 'success!';\r\n                    appData['satusCode'] = 201;\r\n                    appData['dbData'] = rows;\r\n                    resolve(appData);\r\n                    //res.status(201).json(appData);\r\n                } else {\r\n                    console.log('Query Exception '+err);\r\n                    appData['data'] = 'Error Occured!';\r\n                    appData['satusCode'] = 400;\r\n                    appData['err'] = err;\r\n                    resolve(appData);\r\n                    //res.status(400).json(err);\r\n                }\r\n            });\r\n        });\r\n})\r\n\r\n\r\n    registerUser= (req, res) => new Promise((resolve, reject)=>{\r\n        var today = new Date();\r\n        var appData = {\r\n            'error': 1,\r\n            'data': '',\r\n            'satusCode':'',\r\n            'dbResponse':''\r\n        };\r\n        var userData =[req.body.email, req.body.first_name, req.body.last_name, req.body.password, req.body.phoneNumber];\r\n        database.connection.getConnection(function(err, connection) {\r\n            connection.query('insert into users(email,first_name,last_name,password, phonenumber) values ($1, $2, $3, $4, $5)', userData, function(err, rows, fields) {\r\n                if (!err) {\r\n                    console.log('query is working fine '+rows);\r\n                    appData.error = 0;\r\n                    appData['data'] = 'User registered successfully!';\r\n                    appData['satusCode'] = rows;\r\n                    appData['dbResponse'] = 201;\r\n                    resolve(appData);\r\n                    //res.status(201).json(appData);\r\n                } else {\r\n                    console.log('got error '+err);\r\n                    appData['data'] = 'Error Occured!';\r\n                    appData['satusCode'] = 400;\r\n                    appData.error = err;\r\n                    resolve(appData);\r\n                    //res.status(400).json(err);\r\n                }\r\n            });\r\n        });\r\n        \r\n    })\r\n\r\n    loginUser = (req, res) => new Promise((resolve, reject) => {\r\n        var appData = {\r\n            'error': 1,\r\n            'data': '',\r\n            'satusCode':''\r\n        };\r\n        var email = req.body.email;\r\n        var password = req.body.password;\r\n        console.log('data is '+JSON.stringify(req.body));\r\n        database.connection.getConnection(function(err, connection) {\r\n            connection.query('SELECT * FROM owner WHERE email = ?', [email], function(err, dbResponse, fields) {\r\n                if (err) {\r\n                    console.log('error is ');\r\n                    console.log(err);\r\n                    appData.error = 1;\r\n                    appData['data'] = 'Error Occured!';\r\n                    appData['error'] = err;\r\n                    appData['satusCode'] = 400;\r\n                    resolve(appData);\r\n                    //res.status(400).json(appData);\r\n                } else {\r\n                    console.log('no error is ',JSON.stringify(dbResponse));\r\n                    let rows = dbResponse;\r\n                    console.log(rows);\r\n                    if (rows.length > 0) {\r\n                        console.log('rows.length is ');\r\n                        if (rows[0].password == password) {\r\n                            console.log('password match ');\r\n                            console.log('rows[0] '+JSON.stringify(rows[0]));\r\n                            let token = jwt.sign(rows[0], process.env.SECRET_KEY, {\r\n                                expiresIn: 1440\r\n                            });\r\n                            appData.error = 0;\r\n                            appData.isAdmin = rows[0].isadmin;\r\n                            appData['token'] = token;\r\n                            appData['satusCode'] = 200;\r\n                            resolve(appData);\r\n                            //res.status(200).json(appData);\r\n                        } else {\r\n                            console.log('password not match ');\r\n                            appData.error = 1;\r\n                            appData['data'] = 'Email and Password does not match';\r\n                            appData['satusCode'] = 200;\r\n                            reject(appData);\r\n                            //res.status(204).json(appData);\r\n                        }\r\n                    } else {\r\n                        console.log('else ');\r\n                        appData.error = 1;\r\n                        appData['data'] = 'Email does not exists!';\r\n                        appData['satusCode'] = 404;\r\n                        reject(appData);\r\n                        //res.status(204).json(appData);\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n       \r\n\r\n    });\r\n\r\n    getUser = (req, res) => new Promise((resolve, reject) => {\r\n        var appData = {};\r\n        database.connection.getConnection(function(err, connection) {\r\n            connection.query('SELECT * FROM owner', function(err, dbResponse, fields) {\r\n                if (!err) {\r\n                    let rows = dbResponse;\r\n                    appData['error'] = 0;\r\n                    appData['data'] = rows;\r\n                    appData['satusCode'] = 200;\r\n                    resolve(appData);\r\n                    //res.status(200).json(appData);\r\n                } else {\r\n                    appData['data'] = 'No data found';\r\n                    appData['satusCode'] = 200;\r\n                    reject(appData);\r\n                    //res.status(204).json(appData);\r\n                }\r\n            });\r\n        });\r\n       \r\n    });\r\n}\r\n\r\nexport default UserModel;"]}