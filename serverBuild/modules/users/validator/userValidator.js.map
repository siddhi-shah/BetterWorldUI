{"version":3,"sources":["../../../../server/modules/users/validator/userValidator.js"],"names":["jwt","require","UserValidator","validateUser","req","res","next","console","log","token","body","headers","appData","verify","process","env","SECRET_KEY","err","status","json","validateToken"],"mappings":";;;;;;;;AACA,IAAIA,MAAMC,QAAQ,cAAR,CAAV;;IAEMC,a;;;SACFC,Y,GAAe,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAC7BC,gBAAQC,GAAR,CAAY,eAAZ;AACA,YAAIC,QAAQL,IAAIM,IAAJ,CAASD,KAAT,IAAkBL,IAAIO,OAAJ,CAAY,OAAZ,CAA9B;AACA,YAAIC,UAAU,EAAd;AACA,YAAIH,KAAJ,EAAW;AACPT,gBAAIa,MAAJ,CAAWJ,KAAX,EAAkBK,QAAQC,GAAR,CAAYC,UAA9B,EAA0C,UAASC,GAAT,EAAc;AACpD,oBAAIA,GAAJ,EAAS;AACLL,4BAAQ,OAAR,IAAmB,CAAnB;AACAA,4BAAQ,MAAR,IAAkB,kBAAlB;AACAP,wBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,OAArB;AACH,iBAJD,MAIO;AACHN;AACH;AACJ,aARD;AASH,SAVD,MAUO;AACHM,oBAAQ,OAAR,IAAmB,CAAnB;AACAA,oBAAQ,MAAR,IAAkB,qBAAlB;AACAP,gBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,OAArB;AACH;AACJ,K;;SACDQ,a,GAAgB,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAC9BC,gBAAQC,GAAR,CAAY,gBAAZ;AACA,YAAIC,QAAQL,IAAIM,IAAJ,CAASD,KAAT,IAAkBL,IAAIO,OAAJ,CAAY,OAAZ,CAA9B;AACA,YAAIC,UAAU,EAAd;AACA,YAAIH,KAAJ,EAAW;AACPT,gBAAIa,MAAJ,CAAWJ,KAAX,EAAkBK,QAAQC,GAAR,CAAYC,UAA9B,EAA0C,UAASC,GAAT,EAAc;AACpD,oBAAIA,GAAJ,EAAS;AACLL,4BAAQ,OAAR,IAAmB,CAAnB;AACAA,4BAAQ,MAAR,IAAkB,kBAAlB;AACAP,wBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,OAArB;AACH,iBAJD,MAIO;AACHA,4BAAQ,OAAR,IAAmB,CAAnB;AACAA,4BAAQ,MAAR,IAAgB,gBAAhB;AACAP,wBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,OAArB;AACH;AACJ,aAVD;AAWH,SAZD,MAYO;AACHA,oBAAQ,OAAR,IAAmB,CAAnB;AACAA,oBAAQ,MAAR,IAAkB,qBAAlB;AACAP,gBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,OAArB;AACH;AACJ,K;;;kBAGUV,a","file":"userValidator.js","sourcesContent":["\nvar jwt = require('jsonwebtoken');\n\nclass UserValidator {\n    validateUser = (req, res, next)=>{\n        console.log('validate user');\n        var token = req.body.token || req.headers['token'];\n        var appData = {};\n        if (token) {\n            jwt.verify(token, process.env.SECRET_KEY, function(err) {\n                if (err) {\n                    appData['error'] = 1;\n                    appData['data'] = 'Token is invalid';\n                    res.status(500).json(appData);\n                } else {\n                    next();\n                }\n            });\n        } else {\n            appData['error'] = 1;\n            appData['data'] = 'Please send a token';\n            res.status(403).json(appData);\n        }\n    } \n    validateToken = (req, res, next)=>{\n        console.log('validate Token');\n        var token = req.body.token || req.headers['token'];\n        var appData = {};\n        if (token) {\n            jwt.verify(token, process.env.SECRET_KEY, function(err) {\n                if (err) {\n                    appData['error'] = 1;\n                    appData['data'] = 'Token is invalid';\n                    res.status(500).json(appData);\n                } else {\n                    appData['error'] = 0;\n                    appData['data']='Token is valid';\n                    res.status(200).json(appData);\n                }\n            });\n        } else {\n            appData['error'] = 1;\n            appData['data'] = 'Please send a token';\n            res.status(403).json(appData);\n        }\n    }\n}\n\nexport default UserValidator;"]}