{"version":3,"sources":["../../../../server/modules/society/controllers/societyController.js"],"names":["database","require","cors","jwt","process","env","SECRET_KEY","SocietyController","registerOwner","req","res","societyModel","then","dbResponse","status","satusCode","json","catch","err","console","log","getDetails","getDetailsUsingQueryParam","params","tableName","columnName","query","value","updatePendingPaymentOfFlat","body","pendingPayment","ownerid","flatid","SocietyModel"],"mappings":";;;;;;AAGA;;;;;;;;AAHA,IAAIA,WAAWC,QAAQ,+BAAR,CAAf;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,MAAMF,QAAQ,cAAR,CAAV;;AAEAG,QAAQC,GAAR,CAAYC,UAAZ,GAAyB,QAAzB;;IAEMC,iB,GACF,6BAAa;AAAA;;AAAA;;AAAA,SAIbC,aAJa,GAIE,UAACC,GAAD,EAAMC,GAAN,EAAa;AACxB,cAAKC,YAAL,CAAkBH,aAAlB,CAAgCC,GAAhC,EAAqCG,IAArC,CAA0C,UAACC,UAAD,EAAc;AACpDH,gBAAII,MAAJ,CAAWD,WAAWE,SAAtB,EAAiCC,IAAjC,CAAsCH,UAAtC;AACH,SAFD,EAEGI,KAFH,CAES,UAACC,GAAD,EAAO;AACZC,oBAAQC,GAAR,CAAY,+BAAZ,EAA4CF,GAA5C;AACAR,gBAAII,MAAJ,CAAWI,IAAIH,SAAf,EAA0BC,IAA1B,CAA+BE,GAA/B;AACH,SALD;AAMH,KAXY;;AAAA,SAYbG,UAZa,GAYD,UAACZ,GAAD,EAAMC,GAAN,EAAa;AACrB,cAAKC,YAAL,CAAkBU,UAAlB,CAA6BZ,GAA7B,EAAkCG,IAAlC,CAAuC,UAACC,UAAD,EAAc;AACjDH,gBAAII,MAAJ,CAAWD,WAAWE,SAAtB,EAAiCC,IAAjC,CAAsCH,UAAtC;AACH,SAFD,EAEGI,KAFH,CAES,UAACC,GAAD,EAAO;AACZC,oBAAQC,GAAR,CAAY,2BAAZ,EAAwCF,GAAxC;AACAR,gBAAII,MAAJ,CAAWI,IAAIH,SAAf,EAA0BC,IAA1B,CAA+BE,GAA/B;AACH,SALD;AAMH,KAnBY;;AAAA,SAoBbI,yBApBa,GAoBc,UAACb,GAAD,EAAMC,GAAN,EAAa;AACpCS,gBAAQC,GAAR,oBAA6BX,IAAIc,MAAJ,CAAWC,SAAxC,eAA2Df,IAAIc,MAAJ,CAAWE,UAAtE,WAAsFhB,IAAIiB,KAAJ,CAAUC,KAAhG;AACA,cAAKhB,YAAL,CAAkBW,yBAAlB,CAA4Cb,GAA5C,EAAiDG,IAAjD,CAAsD,UAACC,UAAD,EAAc;AAChEH,gBAAII,MAAJ,CAAWD,WAAWE,SAAtB,EAAiCC,IAAjC,CAAsCH,UAAtC;AACH,SAFD,EAEGI,KAFH,CAES,UAACC,GAAD,EAAO;AACZC,oBAAQC,GAAR,CAAY,0CAAZ,EAAuDF,GAAvD;AACAR,gBAAII,MAAJ,CAAWI,IAAIH,SAAf,EAA0BC,IAA1B,CAA+BE,GAA/B;AACH,SALD;AAMH,KA5BY;;AAAA,SA6BbU,0BA7Ba,GA6Be,UAACnB,GAAD,EAAMC,GAAN,EAAa;AACrCS,gBAAQC,GAAR,yCAAiDX,IAAIoB,IAAJ,CAASC,cAA1D,0BAA4FrB,IAAIoB,IAAJ,CAASE,OAArG,qBAA4HtB,IAAIoB,IAAJ,CAASG,MAArI;AACA,cAAKrB,YAAL,CAAkBiB,0BAAlB,CAA6CnB,GAA7C,EAAkDG,IAAlD,CAAuD,UAACC,UAAD,EAAc;AACjEH,gBAAII,MAAJ,CAAWD,WAAWE,SAAtB,EAAiCC,IAAjC,CAAsCH,UAAtC;AACH,SAFD,EAEGI,KAFH,CAES,UAACC,GAAD,EAAO;AACZC,oBAAQC,GAAR,CAAY,2CAAZ,EAAwDF,GAAxD;AACAR,gBAAII,MAAJ,CAAWI,IAAIH,SAAf,EAA0BC,IAA1B,CAA+BE,GAA/B;AACH,SALD;AAMH,KArCY;;AACR,SAAKP,YAAL,GAAoB,IAAIsB,sBAAJ,EAApB;AACJ,C;;kBAsCU1B,iB","file":"societyController.js","sourcesContent":["var database = require('../../../../database/database');\r\nvar cors = require('cors')\r\nvar jwt = require('jsonwebtoken');\r\nimport SocietyModel from './../models/societyModel'\r\nprocess.env.SECRET_KEY = \"varunv\";\r\n\r\nclass SocietyController {\r\n    constructor(){\r\n         this.societyModel = new SocietyModel();\r\n    }\r\n\r\n    registerOwner= (req, res) =>{\r\n        this.societyModel.registerOwner(req).then((dbResponse)=>{\r\n            res.status(dbResponse.satusCode).json(dbResponse);\r\n        }).catch((err)=>{\r\n            console.log(\"catch block of registerOwner \",err);\r\n            res.status(err.satusCode).json(err);\r\n        })\r\n    }\r\n    getDetails= (req, res) =>{\r\n        this.societyModel.getDetails(req).then((dbResponse)=>{\r\n            res.status(dbResponse.satusCode).json(dbResponse);\r\n        }).catch((err)=>{\r\n            console.log(\"catch block of getDetails\",err);\r\n            res.status(err.satusCode).json(err);\r\n        })\r\n    }\r\n    getDetailsUsingQueryParam= (req, res) =>{\r\n        console.log(`select * from ${req.params.tableName} where ${req.params.columnName} = ${req.query.value}`)\r\n        this.societyModel.getDetailsUsingQueryParam(req).then((dbResponse)=>{\r\n            res.status(dbResponse.satusCode).json(dbResponse);\r\n        }).catch((err)=>{\r\n            console.log(\"catch block of getDetailsUsingQueryParam\",err);\r\n            res.status(err.satusCode).json(err);\r\n        }) \r\n    }\r\n    updatePendingPaymentOfFlat= (req, res) =>{\r\n        console.log(`update flat set pendingpayment = '${req.body.pendingPayment}' where ownerid =${req.body.ownerid} and flatId =${req.body.flatid};`)\r\n        this.societyModel.updatePendingPaymentOfFlat(req).then((dbResponse)=>{\r\n            res.status(dbResponse.satusCode).json(dbResponse);\r\n        }).catch((err)=>{\r\n            console.log(\"catch block of updatePendingPaymentOfFlat\",err);\r\n            res.status(err.satusCode).json(err);\r\n        }) \r\n    }\r\n}\r\n\r\nexport default SocietyController;"]}