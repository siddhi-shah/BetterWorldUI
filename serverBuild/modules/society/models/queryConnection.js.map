{"version":3,"sources":["../../../../server/modules/society/models/queryConnection.js"],"names":["database","require","QueryMediator","queryConnection","query","value","appData","console","log","Promise","resolve","reject","connection","getConnection","err","error","rows","release"],"mappings":";;;;;;;;AAAA,IAAIA,WAAWC,QAAQ,iCAAR,CAAf;;IAEMC,a;;;SAEFC,e,GAAkB,UAACC,KAAD,EAAyB;AAAA,YAAjBC,KAAiB,uEAAT,IAAS;;AACvC,YAAIC,UAAU;AACV,qBAAS,CADC;AAEV,oBAAQ,EAFE;AAGV,yBAAa,EAHH;AAIV,0BAAc;AAJJ,SAAd;AAMAC,gBAAQC,GAAR,CAAYJ,KAAZ,EAAoB,UAApB,EAAgCC,KAAhC;AACA,eAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCX,qBAASY,UAAT,CAAoBC,aAApB,CAAkC,UAACC,GAAD,EAAMF,UAAN,EAAqB;AACnD,oBAAIE,GAAJ,EAAS;AACLP,4BAAQC,GAAR,CAAY,eAAeM,GAA3B;AACAR,4BAAQS,KAAR,GAAgBD,GAAhB;AACAR,4BAAQ,MAAR,IAAkB,gBAAlB;AACAA,4BAAQ,WAAR,IAAuB,GAAvB;AACAA,4BAAQ,YAAR,IAAwB,EAAxB;AACAK,2BAAOL,OAAP;AACH,iBAPD,MAOO;AACHM,+BAAWR,KAAX,CAAiBA,KAAjB,EAAwB,CAACC,KAAD,CAAxB,EAAiC,UAAUS,GAAV,EAAeE,IAAf,EAAqB;AAClD;AACAJ,mCAAWK,OAAX;AACA,4BAAI,CAACH,GAAL,EAAU;AACNR,oCAAQS,KAAR,GAAgB,CAAhB;AACAT,oCAAQ,MAAR,IAAkB,EAAlB;AACAA,oCAAQ,WAAR,IAAuB,GAAvB;AACAA,oCAAQ,YAAR,IAAwBU,IAAxB;AACAN,oCAAQJ,OAAR;AACA;AACH,yBAPD,MAOO;AACHA,oCAAQS,KAAR,GAAgBD,GAAhB;AACAR,oCAAQ,MAAR,IAAkB,gBAAlB;AACAA,oCAAQ,WAAR,IAAuB,GAAvB;AACAA,oCAAQ,YAAR,IAAwB,EAAxB;AACAK,mCAAOL,OAAP;AACA;AACH;AACJ,qBAlBD;AAmBH;AACJ,aA7BD;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,SAhDM,CAAP;AAiDH,K;;;kBAIUJ,a","file":"queryConnection.js","sourcesContent":["var database = require('./../../../../database/database');\n\nclass QueryMediator {\n\n    queryConnection = (query, value = null) => {\n        var appData = {\n            'error': 1,\n            'data': '',\n            'satusCode': '',\n            'dbResponse': ''\n        };\n        console.log(query , 'values =', value);\n        return new Promise((resolve, reject) => {\n            database.connection.getConnection((err, connection) => {\n                if (err) {\n                    console.log('got error ' + err);\n                    appData.error = err;\n                    appData['data'] = 'Error Occured!';\n                    appData['satusCode'] = 500;\n                    appData['dbResponse'] = '';\n                    reject(appData);\n                } else {\n                    connection.query(query, [value], function (err, rows) {\n                        //console.log(temp.sql);\n                        connection.release();\n                        if (!err) {\n                            appData.error = 0;\n                            appData['data'] = '';\n                            appData['satusCode'] = 201;\n                            appData['dbResponse'] = rows;                            \n                            resolve(appData);\n                            //res.status(201).json(appData);\n                        } else {\n                            appData.error = err;\n                            appData['data'] = 'Error Occured!';\n                            appData['satusCode'] = 400;\n                            appData['dbResponse'] = '';\n                            reject(appData);\n                            //res.status(400).json(err);\n                        }\n                    });\n                }\n            });\n            // connection.query(query, value, function (err, rows) {\n            //     connection.release();\n            //     if (!err) {\n            //         console.log('Ok ');\n            //         appData.error = 0;\n            //         appData['data'] = 'User registered successfully!';\n            //         appData['dbResponse'] = rows;\n            //         appData['satusCode'] = 201;\n            //         resolve(appData);\n            //     } else {\n            //         console.log('got error ' + err);\n            //         appData['data'] = 'Error Occured!';\n            //         appData['satusCode'] = 400;\n            //         appData.error = err;\n            //         reject(appData);\n            //     }\n            // });\n        });\n    }\n\n}\n\nexport default QueryMediator;"]}