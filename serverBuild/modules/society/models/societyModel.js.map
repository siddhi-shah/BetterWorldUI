{"version":3,"sources":["../../../../server/modules/society/models/societyModel.js"],"names":["database","require","cors","jwt","process","env","SECRET_KEY","SocietyModel","getOwner","req","searchData","Promise","resolve","reject","appData","temp","connection","query","err","rows","console","log","sql","error","updateFlat","updateValue","registerOwner","today","Date","flatData","body","societyId","buildingName","flatNumber","ownerSearchData","phoneNumber","email","ownerInsertData","ownerName","isAdmin","age","gender","then","dbResponse","ownerid","catch"],"mappings":"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","file":"societyModel.js","sourcesContent":["var database = require('./../../../../database/database');\r\nvar cors = require('cors')\r\nvar jwt = require('jsonwebtoken');\r\nprocess.env.SECRET_KEY = \"varunv\";\r\n\r\nclass SocietyModel {\r\n\r\n    getOwner = (req, searchData) => new Promise((resolve, reject)=>{\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        const temp = database.connection.query(\"select ownerid from owner where phonenumber = $1 and email = $2 \", searchData ,function(err, rows) {\r\n            console.log(temp.sql);\r\n            if (!err) {\r\n                console.log(\"select owner query working fine \"+rows);\r\n                appData.error = 0;\r\n                appData[\"data\"] = \"User registered successfully!\";\r\n                appData[\"dbResponse\"] = rows;\r\n                appData[\"satusCode\"] = 201;\r\n                resolve(appData);\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n\r\n    updateFlat = (req, searchData, updateValue) => new Promise((resolve, reject)=>{\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        const temp = database.connection.query(`update flat set ownerid = ${updateValue} where \r\n        societyid = ${searchData[0]} and buildingname = ${searchData[1]} and \r\n        flatname = ${searchData[2]}` ,function(err, rows) {\r\n            console.log(temp.sql);\r\n            if (!err) {\r\n                console.log(\"select owner query working fine \"+rows);\r\n                appData.error = 0;\r\n                appData[\"data\"] = \"User registered successfully!\";\r\n                appData[\"dbResponse\"] = rows;\r\n                appData[\"satusCode\"] = 201;\r\n                resolve(appData);\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n\r\n\r\n    registerOwner = (req) => new Promise((resolve, reject)=>{\r\n        var today = new Date();\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        var flatData = [req.body.societyId,req.body.buildingName, req.body.flatNumber];\r\n        var ownerSearchData = [req.body.phoneNumber, req.body.email]\r\n        var ownerInsertData =[req.body.ownerName, req.body.isAdmin, req.body.phoneNumber, \r\n            req.body.email, req.body.age, req.body.gender, \r\n            ]\r\n        const temp = database.connection.query('insert into owner(ownername,isadmin,phonenumber,email, age, gender) values ($1, $2, $3, $4, $5, $6)', ownerInsertData, (err, rows) => {\r\n            console.log(temp.sql);\r\n            if (!err) {\r\n\r\n                this.getOwner(null, ownerSearchData).then((dbResponse)=>{\r\n                    console.log(\"select query is working fine \"+dbResponse);\r\n                    appData.error = 0;\r\n                    //appData[\"data\"] = \"Owner id is \"+dbResponse.rows[0].ownerid;\r\n                    appData[\"ownerid\"] = dbResponse.rows[0].ownerid;\r\n                    appData[\"satusCode\"] = 201;\r\n                    //resolve(appData);\r\n                    return appData\r\n                   // res.status(dbResponse.satusCode).json(dbResponse);\r\n                }).then((appData)=>{\r\n                    this.updateFlat(null, flatData, appData.ownerid)\r\n                }).catch((err)=>{\r\n                    console.log(\"got error \"+err)\r\n                    appData[\"data\"] = \"Error Occured!\";\r\n                    appData[\"satusCode\"] = 400;\r\n                    appData.error = err;\r\n                    reject(appData);\r\n                   // res.status(err.satusCode).json(err);\r\n                })\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nexport default SocietyModel;"]}