{"version":3,"sources":["../../../../server/modules/society/models/societyModel.js"],"names":["database","require","cors","jwt","process","env","SECRET_KEY","SocietyModel","getOwner","req","searchData","Promise","resolve","reject","appData","connection","query","err","rows","console","log","error","registerOwner","today","Date","flatData","body","societyId","buildingName","flatNumber","ownerSearchData","phoneNumber","email","ownerInsertData","ownerName","isAdmin","age","gender","then","dbResponse","catch"],"mappings":";;;;;;;;AAAA,IAAIA,WAAWC,QAAQ,iCAAR,CAAf;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,MAAMF,QAAQ,cAAR,CAAV;AACAG,QAAQC,GAAR,CAAYC,UAAZ,GAAyB,QAAzB;;IAEMC,Y;;;;;SAEFC,Q,GAAW,UAACC,GAAD,EAAMC,UAAN;AAAA,eAAqB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAC3D,gBAAIC,UAAU;AACV,yBAAS,CADC;AAEV,wBAAQ,EAFE;AAGV,6BAAY,EAHF;AAIV,8BAAa;AAJH,aAAd;AAMAd,qBAASe,UAAT,CAAoBC,KAApB,CAA0B,+DAA1B,EAA2FN,UAA3F,EAAuG,UAASO,GAAT,EAAcC,IAAd,EAAoB;AACvH,oBAAI,CAACD,GAAL,EAAU;AACNE,4BAAQC,GAAR,CAAY,qCAAmCF,IAA/C;AACAJ,4BAAQO,KAAR,GAAgB,CAAhB;AACAP,4BAAQ,MAAR,IAAkB,+BAAlB;AACAA,4BAAQ,YAAR,IAAwBI,IAAxB;AACAJ,4BAAQ,WAAR,IAAuB,GAAvB;AACAF,4BAAQE,OAAR;AACA;AACH,iBARD,MAQO;AACHK,4BAAQC,GAAR,CAAY,eAAaH,GAAzB;AACAH,4BAAQ,MAAR,IAAkB,gBAAlB;AACAA,4BAAQ,WAAR,IAAuB,GAAvB;AACAA,4BAAQO,KAAR,GAAgBJ,GAAhB;AACAJ,2BAAOC,OAAP;AACA;AACH;AACJ,aAjBD;AAkBH,SAzB+B,CAArB;AAAA,K;;SA4BXQ,a,GAAgB,UAACb,GAAD;AAAA,eAAS,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AACpD,gBAAIU,QAAQ,IAAIC,IAAJ,EAAZ;AACA,gBAAIV,UAAU;AACV,yBAAS,CADC;AAEV,wBAAQ,EAFE;AAGV,6BAAY,EAHF;AAIV,8BAAa;AAJH,aAAd;AAMA,gBAAIW,WAAW,CAAChB,IAAIiB,IAAJ,CAASC,SAAV,EAAoBlB,IAAIiB,IAAJ,CAASE,YAA7B,EAA2CnB,IAAIiB,IAAJ,CAASG,UAApD,CAAf;AACA,gBAAIC,kBAAkB,CAACrB,IAAIiB,IAAJ,CAASK,WAAV,EAAuBtB,IAAIiB,IAAJ,CAASM,KAAhC,CAAtB;AACA,gBAAIC,kBAAiB,CAACxB,IAAIiB,IAAJ,CAASQ,SAAV,EAAqBzB,IAAIiB,IAAJ,CAASS,OAA9B,EAAuC1B,IAAIiB,IAAJ,CAASK,WAAhD,EACjBtB,IAAIiB,IAAJ,CAASM,KADQ,EACDvB,IAAIiB,IAAJ,CAASU,GADR,EACa3B,IAAIiB,IAAJ,CAASW,MADtB,CAArB;AAGArC,qBAASe,UAAT,CAAoBC,KAApB,CAA0B,qGAA1B,EAAiIiB,eAAjI,EAAkJ,UAAChB,GAAD,EAAMC,IAAN,EAAe;AAC7J,oBAAI,CAACD,GAAL,EAAU;;AAEN,0BAAKT,QAAL,CAAc,IAAd,EAAoBsB,eAApB,EAAqCQ,IAArC,CAA0C,UAACC,UAAD,EAAc;AACpDpB,gCAAQC,GAAR,CAAY,kCAAgCmB,UAA5C;AACAzB,gCAAQO,KAAR,GAAgB,CAAhB;AACAP,gCAAQ,MAAR,IAAkB,+BAAlB;AACAA,gCAAQ,YAAR,IAAwByB,UAAxB;AACAzB,gCAAQ,WAAR,IAAuB,GAAvB;AACAF,gCAAQE,OAAR;AACD;AACF,qBARD,EAQG0B,KARH,CAQS,UAACvB,GAAD,EAAO;AACZE,gCAAQC,GAAR,CAAY,eAAaH,GAAzB;AACAH,gCAAQ,MAAR,IAAkB,gBAAlB;AACAA,gCAAQ,WAAR,IAAuB,GAAvB;AACAA,gCAAQO,KAAR,GAAgBJ,GAAhB;AACAJ,+BAAOC,OAAP;AACD;AACF,qBAfD;AAgBA;AACH,iBAnBD,MAmBO;AACHK,4BAAQC,GAAR,CAAY,eAAaH,GAAzB;AACAH,4BAAQ,MAAR,IAAkB,gBAAlB;AACAA,4BAAQ,WAAR,IAAuB,GAAvB;AACAA,4BAAQO,KAAR,GAAgBJ,GAAhB;AACAJ,2BAAOC,OAAP;AACA;AACH;AACJ,aA5BD;AA6BH,SA1CwB,CAAT;AAAA,K;;;kBA6CLP,Y","file":"societyModel.js","sourcesContent":["var database = require('./../../../../database/database');\r\nvar cors = require('cors')\r\nvar jwt = require('jsonwebtoken');\r\nprocess.env.SECRET_KEY = \"varunv\";\r\n\r\nclass SocietyModel {\r\n\r\n    getOwner = (req, searchData) => new Promise((resolve, reject)=>{\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        database.connection.query(\"select ownerid from owner where phonenumber = $1, email = $2 \", searchData ,function(err, rows) {\r\n            if (!err) {\r\n                console.log(\"select owner query working fine \"+rows);\r\n                appData.error = 0;\r\n                appData[\"data\"] = \"User registered successfully!\";\r\n                appData[\"dbResponse\"] = rows;\r\n                appData[\"satusCode\"] = 201;\r\n                resolve(appData);\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n\r\n\r\n    registerOwner = (req) => new Promise((resolve, reject)=>{\r\n        var today = new Date();\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        var flatData = [req.body.societyId,req.body.buildingName, req.body.flatNumber];\r\n        var ownerSearchData = [req.body.phoneNumber, req.body.email]\r\n        var ownerInsertData =[req.body.ownerName, req.body.isAdmin, req.body.phoneNumber, \r\n            req.body.email, req.body.age, req.body.gender, \r\n            ]\r\n        database.connection.query('insert into owner(ownername,isadmin,phonenumber,email, age, gender) values ($1, $2, $3, $4, $5, $6)', ownerInsertData, (err, rows) => {\r\n            if (!err) {\r\n\r\n                this.getOwner(null, ownerSearchData).then((dbResponse)=>{\r\n                    console.log(\"select query is working fine \"+dbResponse);\r\n                    appData.error = 0;\r\n                    appData[\"data\"] = \"User registered successfully!\";\r\n                    appData[\"dbResponse\"] = dbResponse;\r\n                    appData[\"satusCode\"] = 201;\r\n                    resolve(appData);\r\n                   // res.status(dbResponse.satusCode).json(dbResponse);\r\n                }).catch((err)=>{\r\n                    console.log(\"got error \"+err)\r\n                    appData[\"data\"] = \"Error Occured!\";\r\n                    appData[\"satusCode\"] = 400;\r\n                    appData.error = err;\r\n                    reject(appData);\r\n                   // res.status(err.satusCode).json(err);\r\n                })\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nexport default SocietyModel;"]}