{"version":3,"sources":["../../../../server/modules/society/models/societyModel.js"],"names":["database","require","cors","jwt","process","env","SECRET_KEY","SocietyModel","getOwner","req","searchData","Promise","resolve","reject","appData","connection","query","err","rows","console","log","error","updateFlat","updateValue","registerOwner","today","Date","flatData","body","societyId","buildingName","flatNumber","ownerSearchData","phoneNumber","email","ownerInsertData","ownerName","isAdmin","age","gender","then","response","JSON","stringify","dbResponse","ownerid","catch","getDetails","params","tableName"],"mappings":"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","file":"societyModel.js","sourcesContent":["var database = require('./../../../../database/database');\r\nvar cors = require('cors')\r\nvar jwt = require('jsonwebtoken');\r\nprocess.env.SECRET_KEY = \"varunv\";\r\n\r\nclass SocietyModel {\r\n\r\n    getOwner = (req, searchData) => new Promise((resolve, reject)=>{\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        database.connection.query(\"select ownerid from owner where phonenumber = $1 and email = $2 \", searchData ,function(err, rows) {\r\n            //console.log(temp.sql);\r\n            if (!err) {\r\n                console.log(\"select owner query working fine \"+rows);\r\n                appData.error = 0;\r\n                appData[\"data\"] = \"User registered successfully!\";\r\n                appData[\"dbResponse\"] = rows;\r\n                appData[\"satusCode\"] = 201;\r\n                resolve(appData);\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n\r\n    updateFlat = (req, searchData, updateValue) => new Promise((resolve, reject)=>{\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        console.log(\"searchData is \",searchData);\r\n        console.log(\"update value is \", updateValue);\r\n        try {\r\n\r\n        \r\n        database.connection.query(`update flat set ownerid = ${updateValue} where \r\n        societyid = ${searchData[0]} and buildingname = '${searchData[1]}' and \r\n        flatname = '${searchData[2]}'` ,function(err, rows) {\r\n            //console.log(temp.sql);\r\n            if (!err) {\r\n                console.log(\"select owner query working fine \"+rows);\r\n                appData.error = 0;\r\n                appData[\"data\"] = \"User registered successfully!\";\r\n                appData[\"dbResponse\"] = rows;\r\n                appData[\"satusCode\"] = 201;\r\n                resolve(appData);\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                console.log(`query is ------------ update flat set ownerid = ${updateValue} where \r\n                societyid = ${searchData[0]} and buildingname = ${searchData[1]} and \r\n                flatname = ${searchData[2]}`)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n        } catch(error){\r\n            console.log(\"got error------\",error);\r\n            reject(error);\r\n\r\n        }\r\n    })\r\n\r\n\r\n    registerOwner = (req) => new Promise((resolve, reject)=>{\r\n        var today = new Date();\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n        var flatData = [req.body.societyId,req.body.buildingName, req.body.flatNumber];\r\n        var ownerSearchData = [req.body.phoneNumber, req.body.email]\r\n        var ownerInsertData =[req.body.ownerName, req.body.isAdmin, req.body.phoneNumber, \r\n            req.body.email, req.body.age, req.body.gender, \r\n            ]\r\n        database.connection.query('insert into owner(ownername,isadmin,phonenumber,email, age, gender) values ($1, $2, $3, $4, $5, $6)', ownerInsertData, (err, rows) => {\r\n            //console.log(temp.sql);\r\n            if (!err) {\r\n\r\n                this.getOwner(null, ownerSearchData).then((response)=>{\r\n                    console.log(\"select owner query is working fine \"+JSON.stringify(response));\r\n                    console.log(\"dbResponse.rows is \",JSON.stringify(response.dbResponse.rows));\r\n                    console.log(\"dbResponse.rows[0] is \",JSON.stringify(response.dbResponse.rows[0]));\r\n                    console.log(\"dbResponse.rows[0].ownerid is \",JSON.stringify(response.dbResponse.rows[0].ownerid));\r\n\r\n                    appData.error = 0;\r\n                    //appData[\"data\"] = \"Owner id is \"+dbResponse.rows[0].ownerid;\r\n                    appData[\"ownerid\"] = response.dbResponse.rows[0].ownerid;\r\n                    appData[\"satusCode\"] = 201;\r\n                    //resolve(appData);\r\n                    return appData\r\n                   // res.status(dbResponse.satusCode).json(dbResponse);\r\n                }).then((appData)=>{\r\n                    this.updateFlat(null, flatData, appData.ownerid)\r\n                }).catch((err)=>{\r\n                    console.log(\"got error \"+err)\r\n                    appData[\"data\"] = \"Error Occured!\";\r\n                    appData[\"satusCode\"] = 400;\r\n                    appData.error = err;\r\n                    reject(appData);\r\n                   // res.status(err.satusCode).json(err);\r\n                })\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n\r\n    getDetails = (req) => new Promise((resolve, reject)=>{\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"satusCode\":\"\",\r\n            \"dbResponse\":\"\"\r\n        };\r\n\r\n        console.log(\"req.params.tableName\", req.params.tableName);\r\n        database.connection.query(`select * from ${req.params.tableName}` ,function(err, rows) {\r\n            //console.log(temp.sql);\r\n            if (!err) {\r\n                console.log(\"select query working fine \"+rows);\r\n                appData.error = 0;\r\n                appData[\"dbResponse\"] = rows;\r\n                appData[\"satusCode\"] = 201;\r\n                resolve(appData);\r\n                //res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"satusCode\"] = 400;\r\n                appData.error = err;\r\n                reject(appData);\r\n                //res.status(400).json(err);\r\n            }\r\n        });\r\n    })\r\n\r\n\r\n}\r\n\r\nexport default SocietyModel;"]}