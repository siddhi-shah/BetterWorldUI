{"version":3,"sources":["../../../../server/modules/society/routes/societyRouter.js"],"names":["express","require","router","Router","cors","societyController","SocietyController","userValidator","UserValidator","use","post","getOwnerList","registerBuilding","insertOrUpdatePaymentStructure","registerFlat","registerSociety","registerOwner","callStoredProc","updateBuilding","updateFlat","updateSociety","updateOwner","put","delete","deleteRow","validateUser","updatePendingPaymentOfFlat","get","getDetailsUsingMultiParam","getDetailsUsingQueryParam","getDetails","module","exports"],"mappings":";;AAIA;;;;AACA;;;;;;AALA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,SAASF,QAAQG,MAAR,EAAb;AACA,IAAIC,OAAOH,QAAQ,MAAR,CAAX;;AAKA,IAAMI,oBAAoB,IAAIC,2BAAJ,EAA1B;AACA,IAAMC,gBAAgB,IAAIC,uBAAJ,EAAtB;AACAN,OAAOO,GAAP,CAAWL,MAAX;AACAF,OAAOQ,IAAP,CAAY,aAAZ,EAA0BL,kBAAkBM,YAA5C;;AAEA;AACAT,OAAOQ,IAAP,CAAY,mBAAZ,EAAgCL,kBAAkBO,gBAAlD;AACAV,OAAOQ,IAAP,CAAY,mBAAZ,EAAgCL,kBAAkBQ,8BAAlD;AACAX,OAAOQ,IAAP,CAAY,eAAZ,EAA4BL,kBAAkBS,YAA9C;AACAZ,OAAOQ,IAAP,CAAY,kBAAZ,EAA+BL,kBAAkBU,eAAjD;AACAb,OAAOQ,IAAP,CAAY,gBAAZ,EAA6BL,kBAAkBW,aAA/C;AACAd,OAAOQ,IAAP,CAAY,aAAZ,EAA0BL,kBAAkBY,cAA5C;AACA;AACAf,OAAOQ,IAAP,CAAY,iBAAZ,EAA8BL,kBAAkBa,cAAhD;AACAhB,OAAOQ,IAAP,CAAY,aAAZ,EAA0BL,kBAAkBc,UAA5C;AACAjB,OAAOQ,IAAP,CAAY,gBAAZ,EAA6BL,kBAAkBe,aAA/C;AACAlB,OAAOQ,IAAP,CAAY,cAAZ,EAA2BL,kBAAkBgB,WAA7C;AACAnB,OAAOoB,GAAP,CAAW,mBAAX,EAA+BjB,kBAAkBQ,8BAAjD;;AAEA;AACAX,OAAOqB,MAAP,CAAc,SAAd,EAAwBlB,kBAAkBmB,SAA1C;;AAEA;AACAtB,OAAOoB,GAAP,CAAW,sBAAX,EAAkCf,cAAckB,YAAhD,EAA8DpB,kBAAkBqB,0BAAhF;;AAEA;AACAxB,OAAOyB,GAAP,CAAW,uCAAX,EAAmDtB,kBAAkBuB,yBAArE;AACA1B,OAAOyB,GAAP,CAAW,yBAAX,EAAqCtB,kBAAkBwB,yBAAvD;AACA3B,OAAOyB,GAAP,CAAW,aAAX,EAAyBtB,kBAAkByB,UAA3C;;AAGAC,OAAOC,OAAP,GAAiB9B,MAAjB","file":"societyRouter.js","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nvar cors = require('cors');\r\n\r\nimport SocietyController from '../controllers/societyController';\r\nimport UserValidator from './../../users/validator/userValidator';\r\n\r\nconst societyController = new SocietyController();\r\nconst userValidator = new UserValidator();\r\nrouter.use(cors());\r\nrouter.post('/owner/list',societyController.getOwnerList);\r\n\r\n/******Add Api********/\r\nrouter.post('/registerBuilding',societyController.registerBuilding);\r\nrouter.post('/paymentstructure',societyController.insertOrUpdatePaymentStructure);\r\nrouter.post('/registerFlat',societyController.registerFlat);\r\nrouter.post('/registerSociety',societyController.registerSociety);\r\nrouter.post('/registerOwner',societyController.registerOwner);\r\nrouter.post('/storedProc',societyController.callStoredProc);\r\n/******Update Api******/\r\nrouter.post('/updateBuilding',societyController.updateBuilding);\r\nrouter.post('/updateFlat',societyController.updateFlat);\r\nrouter.post('/updateSociety',societyController.updateSociety);\r\nrouter.post('/updateOwner',societyController.updateOwner);\r\nrouter.put('/paymentstructure',societyController.insertOrUpdatePaymentStructure);\r\n\r\n/*******Delete Api*********/\r\nrouter.delete('/delete',societyController.deleteRow);\r\n\r\n/*******Update Pending Payment Api*************/\r\nrouter.put('/flat/pendingPayment',userValidator.validateUser, societyController.updatePendingPaymentOfFlat);\r\n\r\n/********Search******/\r\nrouter.get('/:tableName/:columnName1/:columnName2',societyController.getDetailsUsingMultiParam);\r\nrouter.get('/:tableName/:columnName',societyController.getDetailsUsingQueryParam);\r\nrouter.get('/:tableName',societyController.getDetails);\r\n\r\n\r\nmodule.exports = router;"]}