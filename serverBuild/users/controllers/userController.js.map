{"version":3,"sources":["../../../server/users/controllers/userController.js"],"names":["database","require","cors","jwt","process","env","SECRET_KEY","UserController","executeQuery","req","res","appData","query","body","console","log","connection","err","rows","fields","JSON","stringify","error","status","json","registerUser","today","Date","userData","email","first_name","last_name","password","phoneNumber","loginUser","length","token","sign","expiresIn","getUser"],"mappings":";;;;;;;;AAAA,IAAIA,WAAWC,QAAQ,8BAAR,CAAf;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,MAAMF,QAAQ,cAAR,CAAV;AACAG,QAAQC,GAAR,CAAYC,UAAZ,GAAyB,QAAzB;;IAEMC,c;;;SAEFC,Y,GAAe,UAACC,GAAD,EAAMC,GAAN,EAAa;AACxB,YAAIC,UAAU;AACV,qBAAS,CADC;AAEV,oBAAQ,EAFE;AAGV,sBAAS,EAHC;AAIV,0BAAa,EAJH;AAKV,sBAAS;AALC,SAAd;AAOA,YAAIC,QAAQH,IAAII,IAAJ,CAASD,KAArB;AACAE,gBAAQC,GAAR,CAAY,cAAYH,KAAxB;AACAZ,iBAASgB,UAAT,CAAoBJ,KAApB,CAA0BA,KAA1B,EAAiC,UAASK,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACzD,gBAAI,CAACF,GAAL,EAAU;AACNH,wBAAQC,GAAR,CAAY,8CAA4CK,KAAKC,SAAL,CAAeH,IAAf,CAAxD;AACAJ,wBAAQC,GAAR,CAAY,gBAAcK,KAAKC,SAAL,CAAeF,MAAf,CAA1B;AACAR,wBAAQW,KAAR,GAAgB,CAAhB;AACAX,wBAAQ,QAAR,IAAoB,UAApB;AACAA,wBAAQ,YAAR,IAAwBO,IAAxB;AACAP,wBAAQ,QAAR,IAAoBQ,MAApB;AACAT,oBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH,aARD,MAQO;AACHG,wBAAQC,GAAR,CAAY,qBAAmBE,GAA/B;AACAN,wBAAQ,MAAR,IAAkB,gBAAlB;AACAD,oBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,GAArB;AACH;AACJ,SAdD;AAeH,K;;SAGDQ,Y,GAAc,UAAChB,GAAD,EAAMC,GAAN,EAAa;AACvB,YAAIgB,QAAQ,IAAIC,IAAJ,EAAZ;AACA,YAAIhB,UAAU;AACV,qBAAS,CADC;AAEV,oBAAQ;AAFE,SAAd;AAIA;;;;;;;;AAQA,YAAIiB,WAAU,CAACnB,IAAII,IAAJ,CAASgB,KAAV,EAAiBpB,IAAII,IAAJ,CAASiB,UAA1B,EAAsCrB,IAAII,IAAJ,CAASkB,SAA/C,EAA0DtB,IAAII,IAAJ,CAASmB,QAAnE,EAA6EvB,IAAII,IAAJ,CAASoB,WAAtF,CAAd;AACA;;;;;;;;;;;;;;;;;;;AAmBAjC,iBAASgB,UAAT,CAAoBJ,KAApB,CAA0B,iGAA1B,EAA6HgB,QAA7H,EAAuI,UAASX,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AAC/J,gBAAI,CAACF,GAAL,EAAU;AACNH,wBAAQC,GAAR,CAAY,2BAAyBG,IAArC;AACAP,wBAAQW,KAAR,GAAgB,CAAhB;AACAX,wBAAQ,MAAR,IAAkB,+BAAlB;AACAD,oBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH,aALD,MAKO;AACHG,wBAAQC,GAAR,CAAY,eAAaE,GAAzB;AACAN,wBAAQ,MAAR,IAAkB,gBAAlB;AACAD,oBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,GAArB;AACH;AACJ,SAXD;AAYH,K;;SAEDiB,S,GAAY,UAACzB,GAAD,EAAMC,GAAN,EAAc;AACtB,YAAIC,UAAU,EAAd;AACA,YAAIkB,QAAQpB,IAAII,IAAJ,CAASgB,KAArB;AACA,YAAIG,WAAWvB,IAAII,IAAJ,CAASmB,QAAxB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCAlB,gBAAQC,GAAR,CAAY,aAAWK,KAAKC,SAAL,CAAeZ,IAAII,IAAnB,CAAvB;AACAb,iBAASgB,UAAT,CAAoBJ,KAApB,CAA0B,sCAA1B,EAAkE,CAACiB,KAAD,CAAlE,EAA2E,UAASZ,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACnG,gBAAIF,GAAJ,EAAS;AACLH,wBAAQC,GAAR,CAAY,WAAZ;AACAD,wBAAQC,GAAR,CAAYE,GAAZ;AACAN,wBAAQW,KAAR,GAAgB,CAAhB;AACAX,wBAAQ,MAAR,IAAkB,gBAAlB;AACAA,wBAAQ,OAAR,IAAmBM,GAAnB;AACAP,oBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH,aAPD,MAOO;AACH,oBAAIO,KAAKiB,MAAL,GAAc,CAAlB,EAAqB;AACjB,wBAAIjB,KAAK,CAAL,EAAQc,QAAR,IAAoBA,QAAxB,EAAkC;AAC9BlB,gCAAQC,GAAR,CAAY,aAAWK,KAAKC,SAAL,CAAeH,KAAK,CAAL,CAAf,CAAvB;AACA,4BAAIkB,QAAQjC,IAAIkC,IAAJ,CAASnB,KAAK,CAAL,CAAT,EAAkBd,QAAQC,GAAR,CAAYC,UAA9B,EAA0C;AAClDgC,uCAAW;AADuC,yBAA1C,CAAZ;AAGA3B,gCAAQW,KAAR,GAAgB,CAAhB;AACAX,gCAAQ,OAAR,IAAmByB,KAAnB;AACA1B,4BAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH,qBARD,MAQO;AACHA,gCAAQW,KAAR,GAAgB,CAAhB;AACAX,gCAAQ,MAAR,IAAkB,mCAAlB;AACAD,4BAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH;AACJ,iBAdD,MAcO;AACHA,4BAAQW,KAAR,GAAgB,CAAhB;AACAX,4BAAQ,MAAR,IAAkB,wBAAlB;AACAD,wBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH;AACJ;AACJ,SA7BD;AA+BH,K;;SAED4B,O,GAAU,UAAC9B,GAAD,EAAMC,GAAN,EAAa;AACnB,YAAIC,UAAU,EAAd;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAK,mBAAWJ,KAAX,CAAiB,oBAAjB,EAAuC,UAASK,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AAC/D,gBAAI,CAACF,GAAL,EAAU;AACNN,wBAAQ,OAAR,IAAmB,CAAnB;AACAA,wBAAQ,MAAR,IAAkBO,IAAlB;AACAR,oBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH,aAJD,MAIO;AACHA,wBAAQ,MAAR,IAAkB,eAAlB;AACAD,oBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,OAArB;AACH;AACJ,SATD;AAUH,K;;;kBAGUJ,c","file":"userController.js","sourcesContent":["var database = require('./../../../database/database');\r\nvar cors = require('cors')\r\nvar jwt = require('jsonwebtoken');\r\nprocess.env.SECRET_KEY = \"varunv\";\r\n\r\nclass UserController {\r\n\r\n    executeQuery = (req, res) =>{\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\",\r\n            \"status\":\"\",\r\n            \"dbResponse\":\"\",\r\n            \"fields\":\"\"\r\n        };\r\n        var query = req.body.query;\r\n        console.log(\"query is \"+query);\r\n        database.connection.query(query, function(err, rows, fields) {\r\n            if (!err) {\r\n                console.log(\"query executed successfully successfully \"+JSON.stringify(rows));\r\n                console.log(\"fields are \"+JSON.stringify(fields));\r\n                appData.error = 0;\r\n                appData[\"status\"] = \"success!\";\r\n                appData[\"dbResponse\"] = rows;\r\n                appData[\"fields\"] = fields;\r\n                res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"Query Exception \"+err);\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                res.status(400).json(err);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    registerUser= (req, res) =>{\r\n        var today = new Date();\r\n        var appData = {\r\n            \"error\": 1,\r\n            \"data\": \"\"\r\n        };\r\n        /*var userData = {\r\n            \"id\": req.body.id,\r\n            \"first_name\": req.body.first_name,\r\n            \"last_name\": req.body.last_name,\r\n            \"email\": req.body.email,\r\n            \"password\": req.body.password,\r\n            \"phoneNumber\": req.body.phoneNumber\r\n        } */\r\n        var userData =[req.body.email, req.body.first_name, req.body.last_name, req.body.password, req.body.phoneNumber]\r\n        /*database.connection.getConnection(function(err, connection) {\r\n            if (err) {\r\n                appData[\"error\"] = 1;\r\n                appData[\"data\"] = \"Internal Server Error\";\r\n                res.status(500).json(appData);\r\n            } else {\r\n                connection.query('INSERT INTO users SET ?', userData, function(err, rows, fields) {\r\n                    if (!err) {\r\n                        appData.error = 0;\r\n                        appData[\"data\"] = \"User registered successfully!\";\r\n                        res.status(201).json(appData);\r\n                    } else {\r\n                        appData[\"data\"] = \"Error Occured!\";\r\n                        res.status(400).json(err);\r\n                    }\r\n                });\r\n                connection.release();\r\n            }\r\n        });*/\r\n        database.connection.query('insert into users(email,first_name,last_name,password, phonenumber) values ($1, $2, $3, $4, $5)', userData, function(err, rows, fields) {\r\n            if (!err) {\r\n                console.log(\"query is working fine \"+rows);\r\n                appData.error = 0;\r\n                appData[\"data\"] = \"User registered successfully!\";\r\n                res.status(201).json(appData);\r\n            } else {\r\n                console.log(\"got error \"+err)\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                res.status(400).json(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    loginUser = (req, res) => {\r\n        var appData = {};\r\n        var email = req.body.email;\r\n        var password = req.body.password;\r\n    \r\n        /*database.connection.getConnection(function(err, connection) {\r\n            if (err) {\r\n                appData[\"error\"] = 1;\r\n                appData[\"data\"] = \"Internal Server Error\";\r\n                res.status(500).json(appData);\r\n            } else {\r\n                connection.query('SELECT * FROM users WHERE email = ?', [email], function(err, rows, fields) {\r\n                    if (err) {\r\n                        appData.error = 1;\r\n                        appData[\"data\"] = \"Error Occured!\";\r\n                        res.status(400).json(appData);\r\n                    } else {\r\n                        if (rows.length > 0) {\r\n                            if (rows[0].password == password) {\r\n                                console.log(\"rows[0] \"+JSON.stringify(rows[0]));\r\n                                let token = jwt.sign(rows[0], process.env.SECRET_KEY, {\r\n                                    expiresIn: 1440\r\n                                });\r\n                                appData.error = 0;\r\n                                appData[\"token\"] = token;\r\n                                res.status(200).json(appData);\r\n                            } else {\r\n                                appData.error = 1;\r\n                                appData[\"data\"] = \"Email and Password does not match\";\r\n                                res.status(204).json(appData);\r\n                            }\r\n                        } else {\r\n                            appData.error = 1;\r\n                            appData[\"data\"] = \"Email does not exists!\";\r\n                            res.status(204).json(appData);\r\n                        }\r\n                    }\r\n                });\r\n                connection.release();\r\n            }\r\n        }); */\r\n        console.log(\"data is \"+JSON.stringify(req.body));\r\n        database.connection.query('SELECT * FROM users WHERE email = $1', [email], function(err, rows, fields) {\r\n            if (err) {\r\n                console.log(\"error is \");\r\n                console.log(err);\r\n                appData.error = 1;\r\n                appData[\"data\"] = \"Error Occured!\";\r\n                appData[\"error\"] = err;\r\n                res.status(400).json(appData);\r\n            } else {\r\n                if (rows.length > 0) {\r\n                    if (rows[0].password == password) {\r\n                        console.log(\"rows[0] \"+JSON.stringify(rows[0]));\r\n                        let token = jwt.sign(rows[0], process.env.SECRET_KEY, {\r\n                            expiresIn: 1440\r\n                        });\r\n                        appData.error = 0;\r\n                        appData[\"token\"] = token;\r\n                        res.status(200).json(appData);\r\n                    } else {\r\n                        appData.error = 1;\r\n                        appData[\"data\"] = \"Email and Password does not match\";\r\n                        res.status(204).json(appData);\r\n                    }\r\n                } else {\r\n                    appData.error = 1;\r\n                    appData[\"data\"] = \"Email does not exists!\";\r\n                    res.status(204).json(appData);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getUser = (req, res) =>{\r\n        var appData = {};\r\n\r\n        /*database.connection.getConnection(function(err, connection) {\r\n            if (err) {\r\n                appData[\"error\"] = 1;\r\n                appData[\"data\"] = \"Internal Server Error\";\r\n                res.status(500).json(appData);\r\n            } else {\r\n                connection.query('SELECT *FROM users', function(err, rows, fields) {\r\n                    if (!err) {\r\n                        appData[\"error\"] = 0;\r\n                        appData[\"data\"] = rows;\r\n                        res.status(200).json(appData);\r\n                    } else {\r\n                        appData[\"data\"] = \"No data found\";\r\n                        res.status(204).json(appData);\r\n                    }\r\n                });\r\n                connection.release();\r\n            }\r\n        }); */\r\n        connection.query('SELECT *FROM users', function(err, rows, fields) {\r\n            if (!err) {\r\n                appData[\"error\"] = 0;\r\n                appData[\"data\"] = rows;\r\n                res.status(200).json(appData);\r\n            } else {\r\n                appData[\"data\"] = \"No data found\";\r\n                res.status(204).json(appData);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default UserController;"]}